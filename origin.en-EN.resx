<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionActiveLabel" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunOrActivate.Name" xml:space="preserve">
    <value>RunOrActivate</value>
  </data>
  <data name="ActionStepMethods.GetMainFloaterLocation.DisplayName" xml:space="preserve">
    <value>Get Main Floater Location</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Description" xml:space="preserve">
    <value>Simulates pressing and/or releasing a mouse button at a specific location.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyUp.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteSavedString.Description" xml:space="preserve">
    <value>Deletes a previously saved string using sp.SaveString, sp.SaveString, or StrokesPlus.SavedStrings.Set.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredDecimal.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the decimal.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDeleteSubKey.Parameters.baseKey.Type" xml:space="preserve">
    <value>RegistryKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDeleteSubKey.Parameters.baseKey.Name" xml:space="preserve">
    <value>baseKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadLayout.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ActionStepMethods.GetClipboardText.HelpTip" xml:space="preserve">
    <value>Returns the text currently on the clipboard or an empty string if the clipboard does not contain text.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadLayout.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitleRegex.Example.Simple" xml:space="preserve">
    <value>var matches = sp.WindowsFromTitleRegex(' - Notepad$');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHandle.Description" xml:space="preserve">
    <value>Stores a handle using the specified name. Value can be retrieved via sp.GetStoredHandle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Example.Full" xml:space="preserve">
    <value>// Object based notation, including font
sp.Sleep(10); //To allow caret position update in active control
var items = new List(PopupListItem);

items.Add(new PopupListItem("Item 1", "sp.SendString('Item 1');"));
items.Add(new PopupListItem("Item 2", "sp.SendString('Item 2');"));
//items.Add(new PopupListItem("―――――――――――――――", ""));
items.Add(new PopupListItem("Item 3", "sp.SendString('Item 3');"));

var subItems1 = new List(PopupListItem);
subItems1.Add(new PopupListItem("· Sub Item A", "sp.SendString('Sub Item A');"));

var subSubItems1 = new List(PopupListItem);
subSubItems1.Add(new PopupListItem("· Sub Sub Item X", "sp.SendString('Sub Sub Item X');"));
subItems1.Add(new PopupListItem("· Sub Sub Menu &gt;", "", false, subSubItems1));
items.Add(new PopupListItem("Sub Menu &gt;", "", false, subItems1));

items.Add(new PopupListItem("Selected Item", "sp.SendString('Selected Item');", true));

items.Add(new PopupListItem("LooooooooooooooONg and Tall", `clip.SetText("Reallllllly long block of text that would take a bit long to send each character, so use clipboard instead."); 
                                                            sp.SendModifiedVKeys([vk.LCONTROL], [vk.VK_V]);`));
items.Add(new PopupListItem("Close"));

var font = new Font(new FontFamily("Kristen ITC"),
                                22,
                                host.flags(FontStyle.Bold, FontStyle.Italic),
                                GraphicsUnit.Pixel
                               );
sp.PopupList(items, new Point(), font);


// JavaScript array notation
sp.Sleep(10); //To allow caret position update in active control
var items =  
[
    ["Item 1", "sp.SendString('Item 1');"],
    ["Item 2", "sp.SendString('Item 2');"],
    ["Sub Menu &gt;",  "", false, [
          ["· Sub Item A", "sp.SendString('Sub Item A');"],
          ["· Sub Sub Menu &gt;", "", false, [ 
                ["· Sub Sub Item X", "sp.SendString('Sub Sub Item X');"]
          ]]
    ]],
    ["Selected Item", "sp.SendString('Selected Item');", true],
    ["LooooooooooooooONg and Tall", 
      `clip.SetText("Reallllllly long block of text that would take a bit long to send each character, so use clipboard instead."); 
        sp.SendModifiedVKeys([vk.LCONTROL], [vk.VK_V]);`
    ],
    ["Close"]
]

var font = new Font(new FontFamily("Kristen ITC"),
                                22,
                                host.flags(FontStyle.Bold, FontStyle.Italic),
                                GraphicsUnit.Pixel
                               );
sp.PopupList(items, new Point(), font); // Remove ", font" to use default font

//Example specifying colors:
/*
sp.PopupList(items, 
    new Point() , 
    font, 
    Color.FromName("White"), //Background Color (NO alpha, will crash)
    drawing.System.Drawing.SystemColors.MenuHighlight, // Highlight color (supports alpha)
    Color.FromArgb(128,255,0,0) // Text color (supports alpha)
); 
*/</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.TopMost.Description" xml:space="preserve">
    <value>Gets or sets the top most status of the control or window.</value>
  </data>
  <data name="ActionStepMethods.EmptyRecycleBins.DisplayName" xml:space="preserve">
    <value>Empty Recycle Bins</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKey.Example.Simple" xml:space="preserve">
    <value>sp.SendVKey(vk.CONTROL);</value>
  </data>
  <data name="ActionStepMethods.GetRectangle.DisplayName" xml:space="preserve">
    <value>Get Rectangle</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredRectangle.DisplayName" xml:space="preserve">
    <value>Delete Stored Rectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Reload.Example.Simple" xml:space="preserve">
    <value>sp.Reload();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromClassOrTitle.Name" xml:space="preserve">
    <value>WindowFromClassOrTitle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Example.Full" xml:space="preserve">
    <value>var items = sp.GetItemsInExplorer(action.Window.HWnd, false, true, false);
var str = '';
var delim = '';
for(i = 0; i &lt; items.Length; i++)
{
	str = str + delim + items[i];
	delim = '\r\n';
}
if(str.length == 0) str = '(no items)';
sp.MessageBox(str, 'Items(s)');</value>
  </data>
  <data name="tabPreferencesHintLocationBottomRight" xml:space="preserve">
    <value>Bottom Right</value>
  </data>
  <data name="ActionStepMethods.SetWindowSize.DisplayName" xml:space="preserve">
    <value>Set Window Size</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.verb.Description" xml:space="preserve">
    <value>The ShellExecute verb to use, if applicable.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToScreen.Parameters.number.Description" xml:space="preserve">
    <value>The index of the screen to send the window to or a Screen object. See AllScreens to get all screen which can be used to determine the screen indexes.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.fileName.Description" xml:space="preserve">
    <value>The file name of the item to execute or open.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMacroScript.Description" xml:space="preserve">
    <value>Returns the full script for the specified macro.</value>
  </data>
  <data name="ActionStepMethods.ToggleCommunicationsMute.HelpTip" xml:space="preserve">
    <value>Toggles mute on the default communications mixer/device.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.names.Description" xml:space="preserve">
    <value>Comma-separated list of names for the enum fields.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Parameters.showErrors.Description" xml:space="preserve">
    <value>Displays an error message box, if the action was not successful.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPixelColorFromPoint.Example.Simple" xml:space="preserve">
    <value>sp.GetPixelColorFromPoint(new Point(100, 100));</value>
  </data>
  <data name="LoadingClosingHintWindow" xml:space="preserve">
    <value>Closing hint window...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDeleteSubKey.Description" xml:space="preserve">
    <value>Deletes the specified registry subkey.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunStoreApp.Name" xml:space="preserve">
    <value>RunStoreApp</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsButtonDown.Name" xml:space="preserve">
    <value>IsButtonDown</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Parameters.lParam.Name" xml:space="preserve">
    <value>lParam</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Parameters.lParam.Type" xml:space="preserve">
    <value>object (casts to int then IntPtr)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetPlaybackVolume.Example.Simple" xml:space="preserve">
    <value>sp.SetPlaybackVolume(50);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Run.Example.Simple" xml:space="preserve">
    <value>sp.Run('notepad');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Parameters.delta.Name" xml:space="preserve">
    <value>delta</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Parameters.delta.Type" xml:space="preserve">
    <value>object (casted to short)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreNumber.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ActionStepMethods.GetWindowFromHandle.DisplayName" xml:space="preserve">
    <value>Get Window From Handle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredStrings.Example.Simple" xml:space="preserve">
    <value>sp.DeleteAllStoredStrings();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreNumber.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ActionStepMethods.GetStoredHandle.DisplayName" xml:space="preserve">
    <value>Get Stored Handle</value>
  </data>
  <data name="ConsoleWindowScriptShow" xml:space="preserve">
    <value>Show Console</value>
  </data>
  <data name="TrayMenuPassword" xml:space="preserve">
    <value>Set Password...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredObject.Description" xml:space="preserve">
    <value>Deletes an object previously stored using sp.StoreObject or StrokesPlus.StoredValues.Objects.Set</value>
  </data>
  <data name="ActionStepMethods.MouseClick.HelpTip" xml:space="preserve">
    <value>Clicks (or only sends the down/up events) the specified mouse button at the point on the screen.</value>
  </data>
  <data name="ScriptHelpCategoryTextUtilities" xml:space="preserve">
    <value>Utility functions for scripts.</value>
  </data>
  <data name="ActionStepMethods.GetControlFromPoint.HelpTip" xml:space="preserve">
    <value>Returns the control at the specified point on the screen.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPixelColorFromPoint.Parameters.pt.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPixelColorFromPoint.Parameters.pt.Name" xml:space="preserve">
    <value>pt</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.keyName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="tabPreferencesSynapticsDisabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.keyName.Name" xml:space="preserve">
    <value>keyName</value>
  </data>
  <data name="ActionStepMethods.GetStoredBool.HelpTip" xml:space="preserve">
    <value>Returns a boolean previously stored using StoreBool or StrokesPlus.StoredValues.Booleans.Set</value>
  </data>
  <data name="ActionStepMethods.GetStoredString.HelpTip" xml:space="preserve">
    <value>Returns a string previously stored using StoreString or StrokesPlus.StoredValues.Strings.Set</value>
  </data>
  <data name="ScriptTab" xml:space="preserve">
    <value>Script</value>
  </data>
  <data name="V8ObjectLoadErrorTitle" xml:space="preserve">
    <value>Error Loading Objects into Script Engine</value>
  </data>
  <data name="ActionStepMethods.GetWindowClassName.DisplayName" xml:space="preserve">
    <value>Get Window Class Name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PlaySound.Parameters.filePath.Description" xml:space="preserve">
    <value>The full file path of the .wav file to play.</value>
  </data>
  <data name="tabPreferencesFireOnX1Click" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Parameters.timeout.Description" xml:space="preserve">
    <value>How long to display the balloon/toast popup.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExpandEnvironmentVariables.Parameters.value.Description" xml:space="preserve">
    <value>String containing the environment variables to be expanded.</value>
  </data>
  <data name="ActionStepMethods.ContainsRegex.DisplayName" xml:space="preserve">
    <value>Contains Regex</value>
  </data>
  <data name="StrokesPlusAlreadyRunningTitle" xml:space="preserve">
    <value>Failed to Obtain Mutex</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Description" xml:space="preserve">
    <value>Alias for TypeBuilder.DefineNestedType to simplify obtaining an instantiated System.Reflection.Emit.TypeBuilder object.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteSavedString.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="SynchronizingSettings" xml:space="preserve">
    <value>Synchronizing Settings...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCommunicationsCaptureMixer.Example.Simple" xml:space="preserve">
    <value>var commCaptureMixer = sp.GetCommunicationsCaptureMixer();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Disable.Example.Simple" xml:space="preserve">
    <value>sp.Disable();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredRectangles.Example.Simple" xml:space="preserve">
    <value>sp.DeleteAllStoredRectangles();</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.FirstMoveableParent.Description" xml:space="preserve">
    <value>Returns a SystemWindow object for first parent window which is moveable; a window which has a system menu. If the window itself is moveable, it returns itself. If no matching parent is found, returns null.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ClassName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ClassName.Name" xml:space="preserve">
    <value>ClassName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyDown.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.IsKeyToggled.HelpTip" xml:space="preserve">
    <value>Returns True is the key is toggled on. This is intended for the Caps, Num, and Scroll Lock keys.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromClassOrTitle.Parameters.windowTitle.Name" xml:space="preserve">
    <value>windowTitle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredNumber.Description" xml:space="preserve">
    <value>Deletes a number previously stored using sp.StoreNumber or StrokesPlus.StoredValues.Numbers.Set</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromClassOrTitle.Parameters.windowTitle.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.FindImageWithinImage.Parameters.needle.Description" xml:space="preserve">
    <value>The source image to look for within the haystack image.</value>
  </data>
  <data name="GesturePatternConfirmDeleteMessage" xml:space="preserve">
    <value>Are you sure you want to delete {0} gesture pattern(s)?</value>
  </data>
  <data name="ImportExportRefreshLabel" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="ActionStepMethods.MaximizeOrRestoreWindow.DisplayName" xml:space="preserve">
    <value>Maximize Or Restore Window</value>
  </data>
  <data name="ActionStepMethods.GetWindowLocation.DisplayName" xml:space="preserve">
    <value>Get Window Location</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredObject.Name" xml:space="preserve">
    <value>DeleteStoredObject</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Parameters.columns.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Parameters.columns.Name" xml:space="preserve">
    <value>columns</value>
  </data>
  <data name="ActionStepMethods.Exit.HelpTip" xml:space="preserve">
    <value>Exits StrokesPlus.net.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterToggleOthers.Description" xml:space="preserve">
    <value>Toggles the visibility of the non-primary floaters.</value>
  </data>
  <data name="TouchFloaterMenuDisableFloater" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="SettingsToolbarPlugIns" xml:space="preserve">
    <value>Plug-Ins</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredNumber.Example.Simple" xml:space="preserve">
    <value>var storednum = sp.GetStoredNumber('test');</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.LegacyModuleName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.TextColor.Name" xml:space="preserve">
    <value>TextColor</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.LegacyModuleName.Name" xml:space="preserve">
    <value>LegacyModuleName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.TextColor.Type" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="ActionStepMethods.GetStoredNumber.DisplayName" xml:space="preserve">
    <value>Get Stored Number</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredValues.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.GetObjectPropertyByName.HelpTip" xml:space="preserve">
    <value>Returns the value of the specified property or field in its true type from the object. Supports deep names (PropertyA.FieldB.PropertyC).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterIsShown.Description" xml:space="preserve">
    <value>Returns true if the main floater is shown.</value>
  </data>
  <data name="tabPreferencesNoMatchSoundFileButton" xml:space="preserve">
    <value>Browse...</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.DialogID.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.DialogID.Name" xml:space="preserve">
    <value>DialogID</value>
  </data>
  <data name="ActionStepMethods.InputBox.DisplayName" xml:space="preserve">
    <value>Input Box</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsButtonDown.Description" xml:space="preserve">
    <value>Returns true if the specified mouse button is currently pressed (down).</value>
  </data>
  <data name="ActionStepMethods.ToggleWindowAlwaysOnTop.HelpTip" xml:space="preserve">
    <value>Toggles the always on top flag of the specified window (passed in as a SystemWindow type).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Pause.Parameters.seconds.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Pause.Parameters.seconds.Name" xml:space="preserve">
    <value>seconds</value>
  </data>
  <data name="ActionStepMethods.SendControlDown.HelpTip" xml:space="preserve">
    <value>Simulates pressing the left Control key down.</value>
  </data>
  <data name="ActionStepMethods.LoadFloaterLayout.DisplayName" xml:space="preserve">
    <value>Load Floater Layout</value>
  </data>
  <data name="PlugInFailedToLoadTitle" xml:space="preserve">
    <value>Error Loading Plug-In</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetLocation.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="TrayMenuHelp" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="TrayMenuOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="TrayMenuExit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesInExplorer.Example.Full" xml:space="preserve">
    <value>var files = sp.GetSelectedFilesInExplorer(action.Window.HWnd);
var str = '';
var delim = '';
for(i = 0; i &lt; files.Length; i++)
{
	str = str + delim + files[i];
	delim = '\r\n';
}
if(str.length == 0) str = '(no files selected)';
sp.MessageBox(str, 'Selected File(s)');</value>
  </data>
  <data name="ActionStepMethods.ToggleSecondaryFloaters.DisplayName" xml:space="preserve">
    <value>Toggle Secondary Floaters</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyUp.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHandle.Returns" xml:space="preserve">
    <value>IntPtr</value>
  </data>
  <data name="FindReplaceStatusTotalFound" xml:space="preserve">
    <value>Total found: </value>
  </data>
  <data name="ActionStepMethods.GetWindowsFromTitlePartial.HelpTip" xml:space="preserve">
    <value>Returns an array of SystemWindow objects for controls or windows based on a partial title match.</value>
  </data>
  <data name="tabPreferencesAlwaysActivateWindowLabel" xml:space="preserve">
    <value>Always Activate Window Where Gesture Began</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPixelColorFromPoint.Name" xml:space="preserve">
    <value>GetPixelColorFromPoint</value>
  </data>
  <data name="ScriptHelp.ActionMethod.FindImageWithinImage.Parameters.haystack.Type" xml:space="preserve">
    <value>System.Drawing.Image</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTemporaryMacroScript.Name" xml:space="preserve">
    <value>GetTemporaryMacroScript</value>
  </data>
  <data name="ScriptHelp.ActionMethod.FindImageWithinImage.Parameters.haystack.Name" xml:space="preserve">
    <value>haystack</value>
  </data>
  <data name="GesturePatternConfirmDeleteTitle" xml:space="preserve">
    <value>Confirm Delete</value>
  </data>
  <data name="tabPreferencesHintLooseMatchingLabel" xml:space="preserve">
    <value>Use Fast Matching</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMacroScript.Parameters.category.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMacroScript.Parameters.category.Name" xml:space="preserve">
    <value>category</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredNumber.DisplayName" xml:space="preserve">
    <value>Delete Stored Number</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Region.Name" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Region.Type" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="FindReplaceMenuZeroOrMoreRepetitions" xml:space="preserve">
    <value>? Zero or one Repetition</value>
  </data>
  <data name="TextExpansionTypeRichTextViaClipboard" xml:space="preserve">
    <value>Rich Text (RTF) via Clipboard</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromPoint.Parameters.topLevelOnly.Description" xml:space="preserve">
    <value>Pass true to only return the top level window (the main application), false returns the window or control directly below the point.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StorePoint.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the point.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StopAllScripts.Example.Simple" xml:space="preserve">
    <value>sp.StopAllScripts();</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Parameters.wParam.Description" xml:space="preserve">
    <value>The wParam value to post, casted to IntPtr.</value>
  </data>
  <data name="Engine" xml:space="preserve">
    <value>Engine</value>
  </data>
  <data name="ActionStepMethods.GetScreenFromRectangle.DisplayName" xml:space="preserve">
    <value>Get Screen From Rectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HideMouseCursor.Name" xml:space="preserve">
    <value>HideMouseCursor</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Parameters.rows.Name" xml:space="preserve">
    <value>rows</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetKeyState.Description" xml:space="preserve">
    <value>Returns a short (number) containing the key state data for the specified key. See the GetKeyState Microsoft documentation for key state data details.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Parameters.rows.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ActionStepMethods.PlaySavedMacro.DisplayName" xml:space="preserve">
    <value>Play Saved Macro</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Example.Simple" xml:space="preserve">
    <value>sp.NativeModule().DefineEnum("TestEnum",
                             "Low,High",
                             [0,1]).Create();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Parameters.showErrors.Name" xml:space="preserve">
    <value>showErrors</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Parameters.showErrors.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderByMultiple.Description" xml:space="preserve">
    <value>Sorts an IEnumerable based on the string passed in.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreDecimal.Name" xml:space="preserve">
    <value>StoreDecimal</value>
  </data>
  <data name="ActionStepMethods.EndLoop.DisplayName" xml:space="preserve">
    <value>End Loop</value>
  </data>
  <data name="ActionStepMethods.MouseWheelXY.DisplayName" xml:space="preserve">
    <value>Mouse Wheel X,Y</value>
  </data>
  <data name="ActionStepMethods.SetCommunicationsVolume.HelpTip" xml:space="preserve">
    <value>Sets the volume level of the default communications mixer/device. (0 - 100)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.value.Type" xml:space="preserve">
    <value>object</value>
  </data>
  <data name="AddReference" xml:space="preserve">
    <value>Add References</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHandle.Name" xml:space="preserve">
    <value>StoreHandle</value>
  </data>
  <data name="FindReplaceStatusSearchMatchWrappedSelection" xml:space="preserve">
    <value>Search match wrapped to the beginning of the selection</value>
  </data>
  <data name="tabPreferencesPenWidthLabel" xml:space="preserve">
    <value>Stroke Width (px)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldMarshalArg.Description" xml:space="preserve">
    <value>(optional) Only used for UnmanagedType.ByValArray fields to set the SizeConst value, but array length must have same count as fieldMarshalAs, use 0 for irrelevant fields.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Name" xml:space="preserve">
    <value>MouseWheel</value>
  </data>
  <data name="FindReplaceMenuNull" xml:space="preserve">
    <value>\0 Null Character</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Parameters.rect.Description" xml:space="preserve">
    <value>The rectangle representing the area which will be divided into regions and returned.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromPoint.Example.Simple" xml:space="preserve">
    <value>sp.WindowFromPoint(action.Start, true).Center();</value>
  </data>
  <data name="tabPreferencesHintHideAppName" xml:space="preserve">
    <value>Hide App Name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetLocation.Parameters.point.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetLocation.Parameters.point.Name" xml:space="preserve">
    <value>point</value>
  </data>
  <data name="ActionStepMethods.ShowMainFloater.HelpTip" xml:space="preserve">
    <value>Shows the main floater.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreDecimal.Description" xml:space="preserve">
    <value>Stores a decimal using the specified name. Value can be retrieved via sp.GetStoredDecimal or StrokesPlus.StoredValues.Decimals.Set</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Where.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteSavedString.Example.Simple" xml:space="preserve">
    <value>sp.DeleteSavedString('testName');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitlePartial.Name" xml:space="preserve">
    <value>WindowsFromTitlePartial</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitlePartial.Returns" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetMouseCursor.Parameters.cursorType.Description" xml:space="preserve">
    <value>One of the following values: Arrow, IBeam, WaitCursor, Cross, UpArrow, SizeNWSE, SizeNESW, SizeWE, SizeNS, SizeAll, No, Hand, AppStarting, Help</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadCustomFloater.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Description" xml:space="preserve">
    <value>Logs a warning event to the User log in the console window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadCustomFloater.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ActionStepMethods.ToggleSecondaryFloaters.HelpTip" xml:space="preserve">
    <value>Toggles the visibility of the non-primary floaters.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.keyValue.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.keyValue.Name" xml:space="preserve">
    <value>keyValue</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldTypes.Name" xml:space="preserve">
    <value>fieldTypes</value>
  </data>
  <data name="tabPreferencesHintPointThresholdLabel" xml:space="preserve">
    <value>Point Threshold</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMethod.Name" xml:space="preserve">
    <value>GetMethod</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldTypes.Type" xml:space="preserve">
    <value>Type[]</value>
  </data>
  <data name="ActionStepMethods.ClearStack.DisplayName" xml:space="preserve">
    <value>Clear Stack</value>
  </data>
  <data name="ActionStepMethods.SendVirtualKeyUp.DisplayName" xml:space="preserve">
    <value>Send Virtual Key Up</value>
  </data>
  <data name="ActionStepMethods.GetCurrentMousePoint.DisplayName" xml:space="preserve">
    <value>Get Current Mouse Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Description" xml:space="preserve">
    <value>Logs an error event to the User log in the console window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Parameters.down.Description" xml:space="preserve">
    <value>Simulate pressing the specified mouse button down. Pass down and up as true to simulate a full click.</value>
  </data>
  <data name="ScriptHelpCategoryTextExtensions" xml:space="preserve">
    <value>These are extensions to existing .NET types which are specific to StrokesPlus.net.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredDecimal.Description" xml:space="preserve">
    <value>Returns a decimal previously stored using sp.StoreNumber.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RelayGesture.Description" xml:space="preserve">
    <value>Relays the mouse down, mouse movements, and mouse release based on the points and button specified.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredRectangles.Name" xml:space="preserve">
    <value>DeleteAllStoredRectangles</value>
  </data>
  <data name="WheelUp" xml:space="preserve">
    <value>Wheel Up</value>
  </data>
  <data name="ActionStepMethods.GetStoredPoint.HelpTip" xml:space="preserve">
    <value>Returns a point previously stored using StorePoint or StrokesPlus.StoredValues.Points.Set</value>
  </data>
  <data name="tabPreferencesMaxDrawPoints" xml:space="preserve">
    <value>Maximum Draw Points</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyDown.Parameters.vk.Description" xml:space="preserve">
    <value>The VirtualKeyCode (vk.XX) value to check.</value>
  </data>
  <data name="frmInsertHotkeyHeaderText" xml:space="preserve">
    <value>Press the desired key combination using the box below, then click OK. 

Note that while the text box has focus, all keyboard input will be consumed.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldNames.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredHistoryScripts.Description" xml:space="preserve">
    <value>Deletes all stored history scripts.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldNames.Name" xml:space="preserve">
    <value>fieldNames</value>
  </data>
  <data name="ActionStepMethods.GetPoint.DisplayName" xml:space="preserve">
    <value>Get Point</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Description" xml:space="preserve">
    <value>Sends a message to the control or window.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenFromPoint.Description" xml:space="preserve">
    <value>Returns a screen based on a location.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Parameters.lParam.Description" xml:space="preserve">
    <value>The lParam value to post, casted to IntPtr.</value>
  </data>
  <data name="ActionStepMethods.TogglePlaybackMute.HelpTip" xml:space="preserve">
    <value>Toggles mute on the default playback mixer/device.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Thread.Description" xml:space="preserve">
    <value>Returns the ProcessThread object for the control or window.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Activate.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.AllWindows.Description" xml:space="preserve">
    <value>Returns an array of SystemWindow objects for all controls and windows. See also sp.AllApplications().</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHandle.Example.Simple" xml:space="preserve">
    <value>var storedhandle = sp.GetStoredHandle('test');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecutePreviousScript.Example.Simple" xml:space="preserve">
    <value>sp.ExecutePreviousScript(0);</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredDecimals.DisplayName" xml:space="preserve">
    <value>Delete All Stored Decimals</value>
  </data>
  <data name="ScriptHelpCategoryNameStoreRetrieveData" xml:space="preserve">
    <value>Store/Retrieve Data</value>
  </data>
  <data name="NewEllipses" xml:space="preserve">
    <value>New...</value>
  </data>
  <data name="ActionStepMethods.MouseRestrictClear.HelpTip" xml:space="preserve">
    <value>Removes the mouse movement restriction previously set via Mouse Restrict To Rectangle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MessageBox.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendControlDown.Example.Simple" xml:space="preserve">
    <value>sp.SendControlDown();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHistoryScript.Name" xml:space="preserve">
    <value>StoreHistoryScript</value>
  </data>
  <data name="ActionStepMethods.SetCustomFloaterKeyMode.HelpTip" xml:space="preserve">
    <value>Set the key mode of the custom floater. Only works if floaters are currently shown.</value>
  </data>
  <data name="ActionStepMethods.MouseRestrictActive.DisplayName" xml:space="preserve">
    <value>Mouse Restrict Active</value>
  </data>
  <data name="tabPreferencesScriptReplHeaderLabel" xml:space="preserve">
    <value>These are shortcuts, so when you type the token and press the dot/period, the token will be replaced with the value and auto complete will be triggered. For example, you could have sp as a token and StrokesPlus as the value.</value>
  </data>
  <data name="tabPreferencesIgnoreKeyControl" xml:space="preserve">
    <value>Control</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredPoint.HelpTip" xml:space="preserve">
    <value>Deletes a point previously stored point using StorePoint.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetLocation.Example.Simple" xml:space="preserve">
    <value>sp.TouchFloaterSetLocation(new Point(100,100));</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMethods.Example.Full" xml:space="preserve">
    <value>var spms = sp.GetMethods();
var s = '';
for(m=0;m&lt;spms.Count();m++){
	s = s + 'Method: ' + spms[m].Name + '(';
	var comma = '';
	for(i=0;i&lt;spms[m].GetParameters().Count();i++) {
		s = s + comma + spms[m].GetParameters()[i].ParameterType.ToString() + ' ' + spms[m].GetParameters()[i].Name
		comma = ', ';
	}
	s = s + ')
Returns: ' + spms[m].ReturnType.Name + '\n\n';
}
clip.SetText(s);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleShowOnSystemError.Example.Simple" xml:space="preserve">
    <value>sp.ConsoleShowOnSystemError(true);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.underlyingType.Description" xml:space="preserve">
    <value>(optional) Valid enum type of: byte, sbyte, short, ushort, int, uint, long, and ulong</value>
  </data>
  <data name="ActionStepMethods.IsWindowMinimized.DisplayName" xml:space="preserve">
    <value>Is Window Minimized</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenuEx.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.GetRootOwnerWindow.Name" xml:space="preserve">
    <value>GetRootOwnerWindow</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.GetRootOwnerWindow.Type" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Title.Example.Simple" xml:space="preserve">
    <value>.Title</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToPreviousScreen.Description" xml:space="preserve">
    <value>Moves the window to the previous screen as defined in Windows, returns the new Screen.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenu.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="tabPreferencesDisableHighResolutionSleep" xml:space="preserve">
    <value>Disable High Resolution Sleep</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Parameters.wParam.Type" xml:space="preserve">
    <value>object (casts to int then IntPtr)</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Parameters.wParam.Name" xml:space="preserve">
    <value>wParam</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHistoryScript.Description" xml:space="preserve">
    <value>Stores a history script using the specified name. Value can be retrieved via sp.GetStoredHistoryScript.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.useShellExecute.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileVersionInfo.Description" xml:space="preserve">
    <value>Returns a string representing the file's version number, in the format of x.x.x.x</value>
  </data>
  <data name="MacroOptionsMinSleepDelayLabel" xml:space="preserve">
    <value>Minimum Sleep Duration</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.useShellExecute.Name" xml:space="preserve">
    <value>useShellExecute</value>
  </data>
  <data name="ActionStepMethods.Add.DisplayName" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.WindowState.Example.Simple" xml:space="preserve">
    <value>.WindowState</value>
  </data>
  <data name="ScriptHelp.ActionMethod.OpenSettings.Description" xml:space="preserve">
    <value>Opens the Settings window.</value>
  </data>
  <data name="ScriptHelpNameText" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="tabPreferencesSynapticsTwo" xml:space="preserve">
    <value>2 Fingers</value>
  </data>
  <data name="ActionStepMethods.ToggleTrayIcon.HelpTip" xml:space="preserve">
    <value>Toggles the tray icon visibility.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPlaybackMixer.Returns" xml:space="preserve">
    <value>CoreAudioDevice</value>
  </data>
  <data name="ActionStepMethods.GetRedValueFromColor.DisplayName" xml:space="preserve">
    <value>Get Red Value From Color</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenu.Parameters.info.Description" xml:space="preserve">
    <value>The PopupMenuInfo object containing the info used when displaying the popup menu.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Parameters.btn.Type" xml:space="preserve">
    <value>MouseButtons</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Parameters.btn.Name" xml:space="preserve">
    <value>btn</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredPoint.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="FindReplaceLine" xml:space="preserve">
    <value>Line</value>
  </data>
  <data name="FindReplaceFind" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="AltKey" xml:space="preserve">
    <value>Alt</value>
  </data>
  <data name="FindReplaceWrap" xml:space="preserve">
    <value>Wrap</value>
  </data>
  <data name="ActionStepMethods.SendHotKey.HelpTip" xml:space="preserve">
    <value>Presses the specified hot key combination. Also supports single keys.</value>
  </data>
  <data name="tabPreferencesResetCancelDelayOnMovementLabel" xml:space="preserve">
    <value>Reset on Movement or Modifiers</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Returns" xml:space="preserve">
    <value>MethodBuilder</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Parameters.keyName.Name" xml:space="preserve">
    <value>keyName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSavedString.Example.Simple" xml:space="preserve">
    <value>var savedString = sp.GetSavedString('testName');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Parameters.keyName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ActionStepMethods.EvaluateAsBoolean.HelpTip" xml:space="preserve">
    <value>Returns the result of the evaluated expression as a boolean (true/false). Use '{stackTake}' and '{stackLeave}' to use values on the stack, pulling them off or leaving respectively (from left to right). Search DataColumn.Expression for details on syntax.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.names.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.names.Name" xml:space="preserve">
    <value>names</value>
  </data>
  <data name="frmSyncSettingsFooterText" xml:space="preserve">
    <value>Click Apply to download the selected settings and reload StrokesPlus.net. Click Upload Now to save your current settings to the cloud. Note that your settings are automatically uploaded every time you click OK in the Settings window, and when you are logged in.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetMouseCursor.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ActionStepMethods.GetNumber.HelpTip" xml:space="preserve">
    <value>Returns a new number variable set to the specified value.</value>
  </data>
  <data name="tabPreferencesMinGestureStartDistance" xml:space="preserve">
    <value>Minimum Gesture Start Distance (px)</value>
  </data>
  <data name="ActionStepMethods.GetStoredString.DisplayName" xml:space="preserve">
    <value>Get Stored String</value>
  </data>
  <data name="ActionStepMethods.DeleteAllSavedStrings.HelpTip" xml:space="preserve">
    <value>Deletes all previously saved strings using Save String, sp.SaveString, or StrokesPlus.SavedStrings.Set.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.LastFocusControl.Example.Simple" xml:space="preserve">
    <value>var lastControl = sp.LastFocusControl();</value>
  </data>
  <data name="GenericDeleteConfirmMessage" xml:space="preserve">
    <value>Are you sure you want to delete the selected item(s)?</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowMouseCursor.Example.Simple" xml:space="preserve">
    <value>sp.ShowMouseCursor();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Example.Simple" xml:space="preserve">
    <value>sp.ConsoleError('message', 'label', System.Drawing.Color.Red);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimer.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimer.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Pause.Name" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="tabGesturesMenuNewTrain" xml:space="preserve">
    <value>Add or Train Gesture</value>
  </data>
  <data name="ActionStepMethods.GetWindowFromHandle.HelpTip" xml:space="preserve">
    <value>Returns a SystemWindow object of a window or control from an existing handle.</value>
  </data>
  <data name="frmSyncSettingsDownloadErrorMessage" xml:space="preserve">
    <value>Failed to download settings:

Error: '{0}'</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.EnsureVisible.Example.Simple" xml:space="preserve">
    <value>.EnsureVisible()</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictActive.Description" xml:space="preserve">
    <value>Returns true or false, indicating whether the mouse is being restricted via sp.MouseRestrictToRectangle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCommunicationsMixer.Returns" xml:space="preserve">
    <value>CoreAudioDevice</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreNumber.Parameters.value.Type" xml:space="preserve">
    <value>long</value>
  </data>
  <data name="ActionStepMethods.MoveWindowToScreen.DisplayName" xml:space="preserve">
    <value>Move Window To Screen</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreNumber.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ConsoleTabUserTitle" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredString.Example.Simple" xml:space="preserve">
    <value>sp.DeleteStoredString('test');</value>
  </data>
  <data name="tabPreferencesFireOnCloseAction" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StopAllScripts.Description" xml:space="preserve">
    <value>Stops all currently executing scripts.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.Items.Description" xml:space="preserve">
    <value>The list of items to show in the popup.</value>
  </data>
  <data name="frmLicenseTitle" xml:space="preserve">
    <value>Licenses &amp; Attributions</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PlayTemporaryMacro.Example.Simple" xml:space="preserve">
    <value>//IMPORTANT: If calling this from a hotkey, make sure to add a sp.Sleep(1000); before calling this function to ensure you release the hotkeys before the macro starts or the keys could be stuck in the down state, or send the key up events for the keys used in the hotkey as shown in the full example.
sp.PlayTemporaryMacro();</value>
  </data>
  <data name="LoadingInitializingHotkeys" xml:space="preserve">
    <value>Initializing hot keys...</value>
  </data>
  <data name="ActionStepMethods.ToggleFloaters.HelpTip" xml:space="preserve">
    <value>Toggles the visility of the floaters.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayText.Parameters.info.Name" xml:space="preserve">
    <value>info</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayText.Parameters.info.Type" xml:space="preserve">
    <value>DisplayTextInfo</value>
  </data>
  <data name="frmPasswordCurrentPassword" xml:space="preserve">
    <value>Current Password</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Parameters.interval.Description" xml:space="preserve">
    <value>Number of milliseconds between each timer script execution.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleShowOnSystemError.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="tabPreferencesHintOpacityLabel" xml:space="preserve">
    <value>Opacity</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayTextClose.Name" xml:space="preserve">
    <value>DisplayTextClose</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenFromPoint.Parameters.pt.Description" xml:space="preserve">
    <value>The screen coordinates to use for locating the screen.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenuEx.Name" xml:space="preserve">
    <value>ShowPopupMenuEx</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictToRectangle.Parameters.rect.Description" xml:space="preserve">
    <value>The rectangle (screen coordinates) inside which the mouse cannot leave.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Parameters.baseKey.Name" xml:space="preserve">
    <value>baseKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredPoint.Description" xml:space="preserve">
    <value>Deletes a point previously stored point using sp.StorePoint.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Parameters.baseKey.Type" xml:space="preserve">
    <value>RegistryKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHandle.Example.Simple" xml:space="preserve">
    <value>sp.StoreHandle('test', action.Window.HWnd);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EnableCapture.Example.Simple" xml:space="preserve">
    <value>sp.EnableCapture();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecutePreviousScript.Parameters.index.Description" xml:space="preserve">
    <value>Index of the previous script to execute.</value>
  </data>
  <data name="ScriptHelpCategoryNameSystemWindow" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ExportAction" xml:space="preserve">
    <value>Export...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RelayGesture.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsButtonDown.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="UpdateCheckPromptMessage" xml:space="preserve">
    <value>An update to StrokesPlus.net is available!

Would you like to download and install it now?</value>
  </data>
  <data name="AddExclusionZone" xml:space="preserve">
    <value>Add Exclusion Zone</value>
  </data>
  <data name="FindReplaceMenuEntireMatch" xml:space="preserve">
    <value>$&amp;&amp; Entire Match</value>
  </data>
  <data name="frmSyncSettingsUploadNow" xml:space="preserve">
    <value>Upload Now</value>
  </data>
  <data name="tabPreferencesStrokeButtonMiddle" xml:space="preserve">
    <value>Middle</value>
  </data>
  <data name="ActionStepMethods.SetWindowHeight.DisplayName" xml:space="preserve">
    <value>Set Window Height</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Resizable.Name" xml:space="preserve">
    <value>Resizable</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Resizable.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetCustomFloaterLocation.Example.Simple" xml:space="preserve">
    <value>sp.TouchFloaterSetCustomFloaterLocation('FloaterName', new Point(100,100));</value>
  </data>
  <data name="tabPreferencesTouchPadSensitivityLabel" xml:space="preserve">
    <value>Touchpad Sensitivity</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredPoint.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitleRegex.Parameters.regexTitle.Description" xml:space="preserve">
    <value>Regular expression pattern</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredPoint.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelpCategoryTextRegions" xml:space="preserve">
    <value>Functions for working with StrokesPlus.net regions.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictToRectangle.Example.Simple" xml:space="preserve">
    <value>sp.MouseRestrictToRectangle(action.Window.Rectangle);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredStrings.Description" xml:space="preserve">
    <value>Deletes all stored strings.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunOrActivate.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleClearAll.Name" xml:space="preserve">
    <value>ConsoleClearAll</value>
  </data>
  <data name="ActionStepMethods.GetString.DisplayName" xml:space="preserve">
    <value>Get String</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="tabGesturesDrawGestureNow" xml:space="preserve">
    <value>Draw a Gesture Now...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MessageBox.Example.Simple" xml:space="preserve">
    <value>sp.MessageBox('Message', 'Title');</value>
  </data>
  <data name="ActionStepMethods.SendControlUp.DisplayName" xml:space="preserve">
    <value>Send Control Up</value>
  </data>
  <data name="tabPreferencesHintLocationCursorCenterBottom" xml:space="preserve">
    <value>Cursor Bottom Center</value>
  </data>
  <data name="ActionStepMethods.GetWindowClassName.HelpTip" xml:space="preserve">
    <value>Returns a string containing the window's (passed in as a SystemWindow type) class name.</value>
  </data>
  <data name="ActionStepMethods.GetColorFromHex.DisplayName" xml:space="preserve">
    <value>Get Color From Hex</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendToBottom.Description" xml:space="preserve">
    <value>Sends the window to the bottom of the window stack/z-index.</value>
  </data>
  <data name="ActionStepMethods.SendShiftDown.DisplayName" xml:space="preserve">
    <value>Send Shift Down</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredNumber.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the number.</value>
  </data>
  <data name="tabPreferencesKeepHotkeysActiveWhenDisabled" xml:space="preserve">
    <value>Keep Registered Hot Keys Active When Disabled</value>
  </data>
  <data name="ActionStepMethods.ElseIf.DisplayName" xml:space="preserve">
    <value>Else If</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Alpha.Description" xml:space="preserve">
    <value>Gets or sets the transparency of the window (0 - 255 where 0 is invisible).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSystemMetricsByIndex.Parameters.index.Type" xml:space="preserve">
    <value>(int)SystemMetric</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Process.Description" xml:space="preserve">
    <value>Returns the Process object for the control or window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSystemMetricsByIndex.Parameters.index.Name" xml:space="preserve">
    <value>index</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ToggleTrayIcon.Example.Simple" xml:space="preserve">
    <value>sp.ToggleTrayIcon();</value>
  </data>
  <data name="ActionStepMethods.SetWindowSize.HelpTip" xml:space="preserve">
    <value>Sets the width and height of the specified window (passed in as a SystemWindow type).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCurrentCulture.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="LoadingInstallingWebView2" xml:space="preserve">
    <value>Installing WebView2...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllTimers.Name" xml:space="preserve">
    <value>DeleteAllTimers</value>
  </data>
  <data name="ActionStepMethodCategories.Media.DisplayName" xml:space="preserve">
    <value>Media</value>
  </data>
  <data name="ActionStepMethods.GetFirstMoveableParentFromPoint.HelpTip" xml:space="preserve">
    <value>Returns the first parent window which is moveable from the specified point on the screen. This could be the main window or a tool window like a Find dialog.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromHandle.Description" xml:space="preserve">
    <value>Returns a SystemWindow object of a window or control from an existing handle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindowExecuteScriptAsync.Parameters.Handle.Description" xml:space="preserve">
    <value>Handle of the window.</value>
  </data>
  <data name="ActionStepMethods.Break.HelpTip" xml:space="preserve">
    <value>Immediately stops processing steps within a Loop block and continues execution following the EndLoop step.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendWinDown.Name" xml:space="preserve">
    <value>SendWinDown</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredDecimals.Description" xml:space="preserve">
    <value>Deletes all stored history decimals.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Name" xml:space="preserve">
    <value>ShowBalloonTip</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Size.Type" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Size.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="MoveUp" xml:space="preserve">
    <value>Move Up</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Maximize.Description" xml:space="preserve">
    <value>Maximizes the window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPixelColorFromPoint.Parameters.pt.Description" xml:space="preserve">
    <value>Location on the screen to find the pixel's color.</value>
  </data>
  <data name="ActionStepMethods.IsWindowMinimized.HelpTip" xml:space="preserve">
    <value>Returns true if the specified window is minimized (passed in as a SystemWindow type).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetMouseCursor.Parameters.fileName.Name" xml:space="preserve">
    <value>fileName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetMouseCursor.Parameters.fileName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderBy.Parameters.sortExpression.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderBy.Parameters.sortExpression.Name" xml:space="preserve">
    <value>sortExpression</value>
  </data>
  <data name="WheelScriptTab" xml:space="preserve">
    <value>Mouse Wheel</value>
  </data>
  <data name="MiddleMouse" xml:space="preserve">
    <value>Middle Button</value>
  </data>
  <data name="ActionStepMethods.ToggleFloaters.DisplayName" xml:space="preserve">
    <value>Toggle Floaters</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Screen.Example.Simple" xml:space="preserve">
    <value>.Screen</value>
  </data>
  <data name="SettingsToolbarImportExport" xml:space="preserve">
    <value>Import/Export</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleHide.Example.Simple" xml:space="preserve">
    <value>sp.ConsoleHide();</value>
  </data>
  <data name="FindReplaceMenuOneOrMoreRepetitions" xml:space="preserve">
    <value>+ One or More Repetitions</value>
  </data>
  <data name="AppDefinitionIgnoreFullScreen" xml:space="preserve">
    <value>Ignore If Full Screen</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NextApplication.Description" xml:space="preserve">
    <value>Activates the next window in the stack</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Process.Example.Simple" xml:space="preserve">
    <value>.Process</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeys.Parameters.str.Description" xml:space="preserve">
    <value>The SendKeys compatible sequence of keystrokes to send.</value>
  </data>
  <data name="tabPreferencesTextExpansionTriggersGroup" xml:space="preserve">
    <value>Triggers</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromHandle.Example.Simple" xml:space="preserve">
    <value>sp.WindowFromHandle(action.Window.HWnd).Center();</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.GetRootOwnerWindow.Example.Simple" xml:space="preserve">
    <value>.GetRootOwnerWindow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyDown.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadLayout.Example.Simple" xml:space="preserve">
    <value>sp.TouchFloaterLoadLayout('LayoutName');</value>
  </data>
  <data name="ScriptHelpScriptObjectsPopupMenuItemText" xml:space="preserve">
    <value>Used when constructing an instance of PopupMenuInfoEx

    public class PopupMenuItem
    {
        public Point Text { get; set; } //Use "-" for separator
        public string Script { get; set; }
        public List&lt;PopupMenuItem&gt; SubMenuItems { get; set; }
    }</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleShow.Description" xml:space="preserve">
    <value>Shows the console window.</value>
  </data>
  <data name="LoadScriptsExternalFileErrorTitle" xml:space="preserve">
    <value>Load External File Script Failed</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Enabled.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Enabled.Name" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ActionStepMethods.GetSelectedFilesInExplorer.DisplayName" xml:space="preserve">
    <value>Get Selected Files In Explorer</value>
  </data>
  <data name="ActionStepMethods.StorePoint.HelpTip" xml:space="preserve">
    <value>Stores a point using the specified name. Value can be retrieved via GetStoredPoint.</value>
  </data>
  <data name="ActionStepMethods.GetPoint.HelpTip" xml:space="preserve">
    <value>Returns a point from the specified X,Y coordinates.</value>
  </data>
  <data name="FindReplaceMenuWindowsNewLine" xml:space="preserve">
    <value>\r\n Windows New Line</value>
  </data>
  <data name="ActionStepMethods.EndIf.HelpTip" xml:space="preserve">
    <value>Defines the end of the If / Else If block.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ClientRectangle.Description" xml:space="preserve">
    <value>Returns a Rectangle object for the client position of the control or window on the screen. ClientRectangle always starts with the top left of 0,0.</value>
  </data>
  <data name="ActionStepMethods.ContainsRegex.HelpTip" xml:space="preserve">
    <value>Returns true if sourceText has one or more matches using the specified regular expression.</value>
  </data>
  <data name="ActionStepMethods.GetWindowText.HelpTip" xml:space="preserve">
    <value>Returns a string containing the window's (passed in as a SystemWindow type) text or title.</value>
  </data>
  <data name="AddIgnoredWindow" xml:space="preserve">
    <value>Add Ignored Window</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Parameters.showErrors.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Parameters.showErrors.Name" xml:space="preserve">
    <value>showErrors</value>
  </data>
  <data name="ScriptHelp.ActionMethod.LastActiveWindow.Description" xml:space="preserve">
    <value>Returns a SystemWindow object for the last active primary window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ForegroundWindow.Example.Simple" xml:space="preserve">
    <value>sp.ForegroundWindow().Center();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.values.Type" xml:space="preserve">
    <value>int[] (or valid underlyingType of: byte, sbyte, short, ushort, int, uint, long, and ulong</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.values.Name" xml:space="preserve">
    <value>values</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreBool.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="X1Mouse" xml:space="preserve">
    <value>X1 Button</value>
  </data>
  <data name="ActionStepMethods.MoveWindowToNextScreen.HelpTip" xml:space="preserve">
    <value>Moves the window to the next screen and returns the destination Screen object. Screen order is determined by Windows.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreBool.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="tabPreferencesSynapticsGroupText" xml:space="preserve">
    <value>Synaptics TouchPad</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisableNext.Description" xml:space="preserve">
    <value>Disables the next stroke or secondary stroke button press from capturing.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendModifiedVKeys.Description" xml:space="preserve">
    <value>Simulates pressing a key combination, like Ctrl+S, Win+E, etc. The modifiers are held down, the keys are sent, then the modifiers are released.</value>
  </data>
  <data name="ActionStepMethods.StopAllScripts.DisplayName" xml:space="preserve">
    <value>Stop All Scripts</value>
  </data>
  <data name="ActionStepMethods.GetWindowWidth.HelpTip" xml:space="preserve">
    <value>Returns the width of the specified window (passed in as a SystemWindow type).</value>
  </data>
  <data name="FileAccessErrorMessage" xml:space="preserve">
    <value>Error accessing file {0}</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenu.Name" xml:space="preserve">
    <value>ShowPopupMenu</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredBool.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the boolean.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHistoryScript.Name" xml:space="preserve">
    <value>GetStoredHistoryScript</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.Create.Name" xml:space="preserve">
    <value>TypeBuilder.Create</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.enumName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.enumName.Name" xml:space="preserve">
    <value>enumName</value>
  </data>
  <data name="tabPreferencesPenColorLabel" xml:space="preserve">
    <value>Stroke Color</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Distinct.Description" xml:space="preserve">
    <value>Accepts a property name to select distinct and return a new List&lt;T&gt;.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToNextScreen.Returns" xml:space="preserve">
    <value>Screen</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesOnDesktop.Example.Simple" xml:space="preserve">
    <value>var files = sp.GetSelectedFilesOnDesktop();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyToggled.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.SendWinUp.Example.Simple" xml:space="preserve">
    <value>sp.SendWinUp();</value>
  </data>
  <data name="ActionStepMethods.MouseRestrictToRectangle.HelpTip" xml:space="preserve">
    <value>Restricts mouse movement to only within the specified rectangle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Distinct.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimerScript.Name" xml:space="preserve">
    <value>GetTimerScript</value>
  </data>
  <data name="ActionStepMethods.GetObjectFieldByName.HelpTip" xml:space="preserve">
    <value>Returns the value of the specified field in its true type from the object.</value>
  </data>
  <data name="ActionStepMethods.ShowBalloonTip.HelpTip" xml:space="preserve">
    <value>Displays a balloon tool window or a toast style notification popup depending on the version of Windows. NOTE: This functionality can be overridden or prevented based on Windows settings and rules that govern notifications.</value>
  </data>
  <data name="ActionStepMethods.IsWindowMaximized.HelpTip" xml:space="preserve">
    <value>Returns true if the specified window is maximized (passed in as a SystemWindow type).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetCommunicationsVolume.Parameters.newVolumeLevel.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Name" xml:space="preserve">
    <value>PopupList</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetCommunicationsVolume.Parameters.newVolumeLevel.Name" xml:space="preserve">
    <value>newVolumeLevel</value>
  </data>
  <data name="LoadingKeyboardHook" xml:space="preserve">
    <value>Loading keyboard hook...</value>
  </data>
  <data name="AppDefinitionControlClass" xml:space="preserve">
    <value>Class Name:</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RelayGesture.Example.Simple" xml:space="preserve">
    <value>sp.RelayGesture(action.GesturePoints, action.StrokeButton);</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredObject.DisplayName" xml:space="preserve">
    <value>Delete Stored Object</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterGetLocation.Example.Simple" xml:space="preserve">
    <value>var floaterLoc = sp.TouchFloaterGetLocation();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Name" xml:space="preserve">
    <value>RegistryDelete</value>
  </data>
  <data name="TextExpansionTypeSendKeys" xml:space="preserve">
    <value>SendKeys</value>
  </data>
  <data name="tabPreferencesHorzMouseWheelTick" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ActionStepMethods.GetFirstMoveableParentFromPoint.DisplayName" xml:space="preserve">
    <value>Get First Moveable Parent From Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileVersionInfo.Parameters.filePath.Name" xml:space="preserve">
    <value>filePath</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileVersionInfo.Parameters.filePath.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Parameters.lParam.Name" xml:space="preserve">
    <value>lParam</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredBool.Name" xml:space="preserve">
    <value>GetStoredBool</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Parameters.lParam.Type" xml:space="preserve">
    <value>object (casts to int then IntPtr)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCommunicationsVolume.Description" xml:space="preserve">
    <value>Returns the current volume level of the default communications mixer/device. (0 - 100)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Enable.Description" xml:space="preserve">
    <value>Enables StrokesPlus.net. Note: The only way to execute this would be via timer created by sp.CreateTimer.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.AbsoluteRectangle.Example.Simple" xml:space="preserve">
    <value>.AbsoluteRectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredBool.Example.Simple" xml:space="preserve">
    <value>var storedbool = sp.GetStoredBool('test');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterGetLocation.Returns" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ActionStepMethods.GetStoredObject.DisplayName" xml:space="preserve">
    <value>Get Stored Object</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteTimer.Example.Simple" xml:space="preserve">
    <value>sp.DeleteTimer('test');</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToPreviousScreen.Name" xml:space="preserve">
    <value>MoveToPreviousScreen</value>
  </data>
  <data name="ActionStepMethods.SetForegroundWindow.HelpTip" xml:space="preserve">
    <value>Brings the specified window (passed in as a SystemWindow type) to the foreground.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.FindImageWithinImage.Name" xml:space="preserve">
    <value>FindImageWithinImage</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.EnsureVisible.Name" xml:space="preserve">
    <value>EnsureVisible</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Rectangle.Example.Simple" xml:space="preserve">
    <value>.Rectangle</value>
  </data>
  <data name="tabPreferencesHintShowGestureHintsLabel" xml:space="preserve">
    <value>Show Hints</value>
  </data>
  <data name="TouchFloaterMenuChangeSize328" xml:space="preserve">
    <value>328px</value>
  </data>
  <data name="TouchFloaterMenuChangeSize164" xml:space="preserve">
    <value>164px</value>
  </data>
  <data name="frmPasswordSetText" xml:space="preserve">
    <value>Enter a password to encrypt your settings file and prompt for password when attempting to open the Settings window. Make sure to backup your current settings file first and do NOT lose this password!

Leave the New Password fields empty to clear your password and decrypt your settings file.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ClientPointToScreenPoint.Description" xml:space="preserve">
    <value>Returns a Point translated from client coordinates to screen coordinates relative to the upper-left corner of the screen.</value>
  </data>
  <data name="FindReplaceFindAllButton" xml:space="preserve">
    <value>Find All</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHandle.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the handle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictClear.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.GetTextLength.DisplayName" xml:space="preserve">
    <value>Get Text Length</value>
  </data>
  <data name="frmSyncSettingsHeaderText" xml:space="preserve">
    <value>Here you can view your previously uploaded settings. Change the date to see only uploads up to and including the date selected, time portion is set to 1 second before midnight of the selected date.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.LastFocusControl.Returns" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ActionStepMethods.GetItemsInExplorer.HelpTip" xml:space="preserve">
    <value>Returns an array of strings containing the items in the Explorer window based on the specified options.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreString.Description" xml:space="preserve">
    <value>Stores a string using the specified name. Value can be retrieved via sp.GetStoredString.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.waitForExit.Name" xml:space="preserve">
    <value>waitForExit</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.waitForExit.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="tabPreferencesHintFadeStepsLabel" xml:space="preserve">
    <value>Fade Steps</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictToRectangle.Name" xml:space="preserve">
    <value>MouseRestrictToRectangle</value>
  </data>
  <data name="TextExpansionNoHTMLMessage" xml:space="preserve">
    <value>The clipboard does not contain HTML.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendShiftUp.Example.Simple" xml:space="preserve">
    <value>sp.SendShiftUp();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendControlDown.Name" xml:space="preserve">
    <value>SendControlDown</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendClose.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.ClearStack.HelpTip" xml:space="preserve">
    <value>Removes all items from the stack.</value>
  </data>
  <data name="X2Mouse" xml:space="preserve">
    <value>X2 Button</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Parameters.showErrors.Description" xml:space="preserve">
    <value>Displays an error message box, if the action was not successful.</value>
  </data>
  <data name="LeftMouse" xml:space="preserve">
    <value>Left Button</value>
  </data>
  <data name="ActionStepMethods.GetCommunicationsVolume.HelpTip" xml:space="preserve">
    <value>Returns the current volume level of the default communications mixer/device. (0 - 100)</value>
  </data>
  <data name="ConsoleSetForegroundColorMenu" xml:space="preserve">
    <value>Set Foreground Color</value>
  </data>
  <data name="TrayMenuResetFloaters" xml:space="preserve">
    <value>Reset Floaters</value>
  </data>
  <data name="ScriptHelpClassClickName" xml:space="preserve">
    <value>Click</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyDown.Parameters.vk.Name" xml:space="preserve">
    <value>vk</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyDown.Parameters.vk.Type" xml:space="preserve">
    <value>VirtualKeyCode</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.CreateType.Parameters.typeAttributes.Description" xml:space="preserve">
    <value>Comma-separated list of TypeAttributes to apply to the type.</value>
  </data>
  <data name="Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="tabPreferencesMatchPrecision" xml:space="preserve">
    <value>Match Precision (points)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Description" xml:space="preserve">
    <value>Deletes the specified key.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloatersReset.Name" xml:space="preserve">
    <value>TouchFloatersReset</value>
  </data>
  <data name="ActionStepMethods.GetDesktopWindow.HelpTip" xml:space="preserve">
    <value>Returns a SystemWindow object for the Desktop window. This is the actual desktop window, not necessarily the window which contains the desktop icons. See also Desktop Window List View.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.IsDescendantOf.Parameters.ancestor.Type" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.IsDescendantOf.Parameters.ancestor.Name" xml:space="preserve">
    <value>ancestor</value>
  </data>
  <data name="FindReplaceReplaceNext" xml:space="preserve">
    <value>Replace Next</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ReloadScriptEnginePool.Name" xml:space="preserve">
    <value>ReloadScriptEnginePool</value>
  </data>
  <data name="tabPreferencesDisableTextExpansionRestoreClipboard" xml:space="preserve">
    <value>Disable Clipboard Restore</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.verb.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.verb.Name" xml:space="preserve">
    <value>verb</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetHistoryScript.Returns" xml:space="preserve">
    <value>HistoryScript</value>
  </data>
  <data name="ActionStepMethods.SetWindowLocation.HelpTip" xml:space="preserve">
    <value>Moves the location of the window (passed in as a SystemWindow type) to a point in screen coordinates.</value>
  </data>
  <data name="ActionStepMethods.GetFirstMoveableParentFromPointXY.DisplayName" xml:space="preserve">
    <value>Get First Moveable Parent From Point X,Y</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredPoints.DisplayName" xml:space="preserve">
    <value>Delete All Stored Points</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileProductVersionInfo.Description" xml:space="preserve">
    <value>Returns a string represnting the file's product version, as returned by FileVersionInfo.ProductVersion.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Example.Full" xml:space="preserve">
    <value>// This function is called when the HTML window is created, passing the ID and window Handle
// Example of JSON sent on window created:

//  {
//     "StrokesPlusHTMLWindow": {"ID" : "windowID", "Handle" : "123456"}
//  }

// It is also how to pass messages to your S+ script from the HTML window via using
// window.chrome.webview.postMessage 

function testWindowCallback(val) 
{
    let obj = JSON.parse(val);

    if (obj.StrokesPlusHTMLWindow) {
        var handle = new IntPtr(parseInt(obj.StrokesPlusHTMLWindow.Handle))
        sp.StoreHandle("testWindowHandle",handle);
        sp.WindowFromHandle(handle).Maximize();
    } 
    else if (obj.action)
    {
        switch(obj.action) {
            case "Close":
                sp.WindowFromHandle(sp.GetStoredHandle("testWindowHandle")).SendClose();        
                break;
            default:
                sp.MessageBox(obj.action, "Callback Action");
                break;
        }
    }
    else
    {
        sp.MessageBox(val, "Callback Value");
    }
}



// Create new HTML window
// sp.HTMLWindow(title, HTML, callback, loadScript, windowId, includeBootstrapJQuery);
sp.HTMLWindow("Window Title",
                                `&lt;div class="container mt-2"&gt;
                                      &lt;p&gt;Test&lt;/p&gt;
                                      &lt;button id="buttonOK" class="btn btn-primary"&gt;OK&lt;/button&gt;
                                      &lt;button id="buttonString" class="btn btn-secondary"&gt;Send String&lt;/button&gt;
                                      &lt;button id="buttonClose" class="btn btn-default"&gt;Close&lt;/button&gt;
                                  &lt;/div&gt;
                                  &lt;script&gt;
                                        $('#buttonOK').click(function (b) {
                                            window.chrome.webview.postMessage({ action: 'OK', message: 'clicked OK'});
                                        });
                                        $('#buttonString').click(function (b) {
                                            window.chrome.webview.postMessage("Test String");
                                        });
                                        $('#buttonClose').click(function (b) {
                                            window.chrome.webview.postMessage({ action: 'Close', message: 'clicked Cancel'});
                                        });
                                  &lt;/script&gt;`, 
    "testWindowCallback",                     // script callback (to process data from window.chrome.webview.postMessage)
    "//alert('testWindow Loaded');",  // script (within scope of HTML) to be executed on HTML doc load 
    "",       // window ID, if not supplied, will be a new GUID
    true);  // include Bootstrap 4, JQuery, document wrapper (your HTML will be inserted inside the &lt;body&gt; tag)
                 // false will not include any additional HTML beyond what is passed in from above</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.IsImmersive.Description" xml:space="preserve">
    <value>Returns true if the window is flagged as immersive, which is generally a Windows 8 Metro/Store type app.</value>
  </data>
  <data name="ActionStepMethods.GetForegroundWindow.DisplayName" xml:space="preserve">
    <value>Get Foreground Window</value>
  </data>
  <data name="ActionStepMethods.IsMainFloaterShown.HelpTip" xml:space="preserve">
    <value>Returns true if the main floater is shown.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendWinUp.Description" xml:space="preserve">
    <value>Simulates releasing the left Win key.</value>
  </data>
  <data name="TouchFloaterMenuResetFloater" xml:space="preserve">
    <value>Reset Floater</value>
  </data>
  <data name="SettingsToolbarIgnoreList" xml:space="preserve">
    <value>Ignore List</value>
  </data>
  <data name="ConsoleSetLogColorMenu" xml:space="preserve">
    <value>Set Log Default Color</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayImage.Parameters.image.Description" xml:space="preserve">
    <value>The .NET Image object to be displayed in the popup window.</value>
  </data>
  <data name="ActionStepMethods.OpenURL.DisplayName" xml:space="preserve">
    <value>Open URL</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Parameters.subKey.Name" xml:space="preserve">
    <value>subKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Parameters.subKey.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenuEx.Example.Simple" xml:space="preserve">
    <value>//For script is running in an action, otherwise use a Point instead of action.End
var popupMenuInfoEx = new PopupMenuInfoEx(action.End);
popupMenuInfoEx.MenuItems.Add(new PopupMenuItem("Test", `sp.MessageBox("Test", "Test");`));
popupMenuInfoEx.MenuItems.Add(new PopupMenuItem("-"));
var mnuSubMenu = new PopupMenuItem("Sub Menu");
    mnuSubMenu.SubMenuItems.Add(new PopupMenuItem("Sub Item 1", `sp.MessageBox("Sub Item 1", "Sub Item 1");`));
    var mnuSubSubMenu = new PopupMenuItem("Sub Sub Menu");
        mnuSubSubMenu.SubMenuItems.Add(new PopupMenuItem("Sub Sub Item 1", `sp.MessageBox("Sub Sub Item 1", "Sub Sub Item 1");`));
    mnuSubMenu.SubMenuItems.Add(mnuSubSubMenu);
    mnuSubMenu.SubMenuItems.Add(new PopupMenuItem("Sub Item 2", `sp.MessageBox("Sub Item 2", "Sub Item 2");`));
popupMenuInfoEx.MenuItems.Add(mnuSubMenu);
popupMenuInfoEx.MenuItems.Add(new PopupMenuItem("Last", `sp.MessageBox("Last", "Last");`));
popupMenuInfoEx.MenuItems.Add(new PopupMenuItem("-"));
popupMenuInfoEx.MenuItems.Add(new PopupMenuItem("Close Popup", ""));
sp.ShowPopupMenuEx(popupMenuInfoEx);
</value>
  </data>
  <data name="frmAccountLoginTitle" xml:space="preserve">
    <value>Account Login</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Run.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsButtonDown.Example.Simple" xml:space="preserve">
    <value>var isLeftMouseDown = sp.IsButtonDown(MouseButtons.Left);</value>
  </data>
  <data name="tabPreferencesSelectedCultureLabel" xml:space="preserve">
    <value>Selected Culture</value>
  </data>
  <data name="ScriptHelpButtonText" xml:space="preserve">
    <value>Script Help</value>
  </data>
  <data name="ActionStepMethods.GetRectangle.HelpTip" xml:space="preserve">
    <value>Returns a rectangle representing the specified location and size.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictActive.Name" xml:space="preserve">
    <value>MouseRestrictActive</value>
  </data>
  <data name="frmAppDefinitionTab" xml:space="preserve">
    <value>App Definition</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToPreviousScreen.Example.Simple" xml:space="preserve">
    <value>.MoveToPreviousScreen()</value>
  </data>
  <data name="FloaterLayoutsMenu" xml:space="preserve">
    <value>Layouts</value>
  </data>
  <data name="ActionEngineMethodNotFoundMessage" xml:space="preserve">
    <value>Unable to find method in assembly:
Assembly: '{0}' 
Type: '{1}' 
Method: '{2}'</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyDown.Name" xml:space="preserve">
    <value>SendVKeyDown</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayText.Example.Simple" xml:space="preserve">
    <value>var info = new DisplayTextInfo();
info.Title = 'Test';
info.TitleAlignment = 'Center';
info.Message = 'Message';
info.MessageAlignment = 'Left';
info.Duration = 2000;
//The transparency of the popup, valid ranges: 0.05 - 1.0  (1.0 is no transparency)
info.Opacity = 0.7;
//Location supports location as well, use this format to specify a type: '100,200'
//types: topleft, top, topright, right, bottomright, bottom, bottomleft, left
info.Location = 'top'; 
info.TitleFont = new Font('Segoe UI', 12, host.flags(FontStyle.Bold));
info.MessageFont = new Font('Segoe UI Semibold', 12);
info.BackColor = 'black';//'56,169,255'; //Also supports RGB
info.ForeColor = 'white';
info.Padding = 15;
info.FadeSteps = 18;
//If true, always displays on primary screen (unless Location is a point type), 
//otherwise displays on the screen where the gesture started
info.UsePrimaryScreen = true; 
sp.DisplayText(info);
</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetPlaybackVolume.Name" xml:space="preserve">
    <value>SetPlaybackVolume</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HideMouseCursor.Description" xml:space="preserve">
    <value>Hides the mouse cursor. NOTE: This basically makes all cursors transparent and are restored via sp.ShowMouseCursor(). However, this simply resets the mouse cursors to the default icon set, so any custom cursors you have selected will be reverted.</value>
  </data>
  <data name="AddTextExpansion" xml:space="preserve">
    <value>Add Text Expansion</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCurrentMouseCursor.Example.Simple" xml:space="preserve">
    <value>var currentMouseCursor = sp.GetCurrentMouseCursor();</value>
  </data>
  <data name="tabPreferencesTextExpansionClipboardLockTimeout" xml:space="preserve">
    <value>Clipboard Lock Timeout (ms)</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ExecutableName.Example.Simple" xml:space="preserve">
    <value>.ExecutableName</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Returns" xml:space="preserve">
    <value>IntPtr</value>
  </data>
  <data name="ActionStepMethods.MouseMoveXY.HelpTip" xml:space="preserve">
    <value>Moves the mouse to the specified X,Y location in screen coordinates.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendControlUp.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.CommandLine.Example.Simple" xml:space="preserve">
    <value>.CommandLine</value>
  </data>
  <data name="LoadingMouseHook" xml:space="preserve">
    <value>Loading mouse hook...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyUp.Parameters.vk.Description" xml:space="preserve">
    <value>The VirtualKeyCode (vk.XX) value to send.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetMouseCursor.Description" xml:space="preserve">
    <value>Sets the specified system cursor to the cursor loaded from the specified file. This cursor is not saved, reloading Windows or calling sp.ShowMouseCursor() will revert to cursor defined in Control Panel.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendCharacter.Example.Simple" xml:space="preserve">
    <value>sp.SendCharacter('a');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.FindImageWithinImage.Returns" xml:space="preserve">
    <value>Point?</value>
  </data>
  <data name="ActionStepMethods.GetWindowLocationX.DisplayName" xml:space="preserve">
    <value>Get Window Location X</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendUnicodeString.Description" xml:space="preserve">
    <value>Simulates sending a sequence of Unicode characters. Not sure if this function is required, I wanted to provide multiple methods for international users.</value>
  </data>
  <data name="ScriptHelpCategoryNameExposedObjects" xml:space="preserve">
    <value>.NET and ClearScript</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendShiftUp.Description" xml:space="preserve">
    <value>Simulates releasing the left Shift key.</value>
  </data>
  <data name="ActionStepMethods.IsCustomFloaterLoaded.HelpTip" xml:space="preserve">
    <value>Returns true if the floater matching the name is currently loaded.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendModifiedVKeys.Parameters.Modifiers.Description" xml:space="preserve">
    <value>Single (vk.XX) or array ([vk.XX, vk.XX]) of VirtualKeyCode modifier value(s). Modifiers are Control, Alt, Shift, and Win keys.</value>
  </data>
  <data name="LoadingThreadPriority" xml:space="preserve">
    <value>Setting thread priority...</value>
  </data>
  <data name="ScriptHelpCategoryTextLanguage" xml:space="preserve">
    <value>Functions for getting and changing language culture.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Parameters.message.Description" xml:space="preserve">
    <value>The message value to post, casted to uint.</value>
  </data>
  <data name="ActionStepMethodCategories.Keyboard.DisplayName" xml:space="preserve">
    <value>Keyboard</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Parameters.icon.Name" xml:space="preserve">
    <value>icon</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Parameters.icon.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="HTMLFormCallbackInvokeErrorTitle" xml:space="preserve">
    <value>Callback Error</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromPoint.Name" xml:space="preserve">
    <value>WindowFromPoint</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreObject.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreObject.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="PlugInTabReferences" xml:space="preserve">
    <value>Additional References</value>
  </data>
  <data name="ScriptHelpCategoryTextExposedObjects" xml:space="preserve">
    <value>These objects are available in all scripts and give you access into the .NET Framework or script engine host functions (ClearScript).
 
clr = mscorlib, System, System.Core
drawing = System.Drawing
forms = System.Windows.Forms
net = System.Net
http = System.Net.Http
host = ExtendedHostFunctions (see ClearScript help)
clip = System.Windows.Forms.Clipboard
sysinfo = System.Windows.Forms.SystemInformation
speech = System.Speech

NativeModules - Any types created by the sp.NativeModule methods
NativeDelegates - Any delegate classes created via sp.NativeDelegate or sp.NativeDelegateList</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMethods.Name" xml:space="preserve">
    <value>GetMethods</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.IsDescendantOf.Description" xml:space="preserve">
    <value>Returns true if this object is a child of the ancestor object.</value>
  </data>
  <data name="AppDefinitionInvalidRegexMessage" xml:space="preserve">
    <value>The pattern is not a valid regular expression pattern. Regular Expression has been unchecked for this entry.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloatersReset.Description" xml:space="preserve">
    <value>Resets the main floaters to their default positions.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisableNext.Name" xml:space="preserve">
    <value>DisableNext</value>
  </data>
  <data name="ScriptHelp.ActionMethod.InputBox.Description" xml:space="preserve">
    <value>Displays a window which can be used to collect user input. See InputBoxInfo for more details.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.VisibilityFlag.Example.Simple" xml:space="preserve">
    <value>.VisibilityFlag</value>
  </data>
  <data name="CustomSettingsFileNotFoundTitle" xml:space="preserve">
    <value>File Not Found</value>
  </data>
  <data name="ActionStepMethods.MouseWheel.HelpTip" xml:space="preserve">
    <value>Simulates scrolling the mouse wheel vertically or horizontally at the specified location in screen coordinates.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Parameters.onlyNames.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="RegionColumn" xml:space="preserve">
    <value>Column</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Parameters.onlyNames.Name" xml:space="preserve">
    <value>onlyNames</value>
  </data>
  <data name="BeforeAfterActionGlobal" xml:space="preserve">
    <value>Inherit from Global Actions</value>
  </data>
  <data name="ActionStepMethods.GetSelectedFilesOnDesktop.HelpTip" xml:space="preserve">
    <value>Returns an array of strings containing the path and name of all selected files on the current Desktop.</value>
  </data>
  <data name="ActionStepMethodCategories.Floaters.DisplayName" xml:space="preserve">
    <value>Floaters</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Parameters.delta.Description" xml:space="preserve">
    <value>The positive or negative delta (change) to send indicating how far the wheel was scrolled. The standard is in increments of 120 and is recommended, e.g. 120 or -120.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Name" xml:space="preserve">
    <value>ConsoleError</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.NoFrame.Description" xml:space="preserve">
    <value>If true, the HTML window will be created without a title bar or window border.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Description" xml:space="preserve">
    <value>Reads the specified registry key and return the number.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldNames.Description" xml:space="preserve">
    <value>Comma-separated list of field names for this struct.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyToggled.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ActionStepMethods.ResetFloaters.DisplayName" xml:space="preserve">
    <value>Reset Floaters</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredString.HelpTip" xml:space="preserve">
    <value>Deletes a string previously stored string using StoreString.</value>
  </data>
  <data name="ActionStepMethods.GetControlFromPointXY.DisplayName" xml:space="preserve">
    <value>Get Control From Point X,Y</value>
  </data>
  <data name="ScriptHelp.ActionMethod.FindImageWithinImage.Parameters.haystack.Description" xml:space="preserve">
    <value>The target image to search for the needle image.</value>
  </data>
  <data name="ItemAlreadyExistsMessage" xml:space="preserve">
    <value>An item with the same name already exists.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetLocation.Name" xml:space="preserve">
    <value>TouchFloaterSetLocation</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleCopySystem.Example.Simple" xml:space="preserve">
    <value>sp.ConsoleCopySystem();</value>
  </data>
  <data name="ActionStepMethods.SetWindowWidth.DisplayName" xml:space="preserve">
    <value>Set Window Width</value>
  </data>
  <data name="ActionStepMethods.MoveWindowToPreviousScreen.DisplayName" xml:space="preserve">
    <value>Move Window To Previous Screen</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowMouseCursor.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethodCategories.InputDisplay.DisplayName" xml:space="preserve">
    <value>Input &amp; Display</value>
  </data>
  <data name="ActionStepMethods.SetCustomFloaterTextColor.HelpTip" xml:space="preserve">
    <value>Set the text color of the custom floater. Only works if floaters are currently shown.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictClear.Name" xml:space="preserve">
    <value>MouseRestrictClear</value>
  </data>
  <data name="ActionStepMethods.SetObjectPropertyByName.DisplayName" xml:space="preserve">
    <value>Set Object Property By Name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.names.Description" xml:space="preserve">
    <value>Comma-separated list of names for the enum fields.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Example.Simple" xml:space="preserve">
    <value>var columns = 3;
var rows = 3;
var region = sp.GetRegionFromPoint(action.Window.Rectangle, action.Start, columns, rows);
</value>
  </data>
  <data name="ImportAction" xml:space="preserve">
    <value>Import...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendShiftDown.Description" xml:space="preserve">
    <value>Simulates pressing the left Shift key down.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.FirstMoveableParent.Example.Simple" xml:space="preserve">
    <value>.FirstMoveableParent</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreNumber.Description" xml:space="preserve">
    <value>Stores a number using the specified name. Value can be retrieved via sp.GetStoredNumber.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterCloseCustomFloater.Name" xml:space="preserve">
    <value>TouchFloaterCloseCustomFloater</value>
  </data>
  <data name="LoadingSettings" xml:space="preserve">
    <value>Loading settings...</value>
  </data>
  <data name="ActionStepMethods.IfExpression.HelpTip" xml:space="preserve">
    <value>Evaluates the expression, if true then the steps following the If are executed. If false, any ElseIf steps within the If block will be evaluated and executed where appropriate. Otherwise the steps within the Else block will be executed, if it exists. Use '{stackTake}' and '{stackLeave}' to use values on the stack, pulling them off or leaving respectively (from left to right). Search Microsoft DataColumn.Expression for details on syntax.</value>
  </data>
  <data name="TextExpansionTypeTextViaClipboard" xml:space="preserve">
    <value>Text via Clipboard</value>
  </data>
  <data name="ShowHideSingleExclusionZone" xml:space="preserve">
    <value>Toggle Exclusion Zone</value>
  </data>
  <data name="ActionStepMethods.MoveWindowToNextScreen.DisplayName" xml:space="preserve">
    <value>Move Window To Next Screen</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToPreviousScreen.Returns" xml:space="preserve">
    <value>Screen</value>
  </data>
  <data name="ActionStepMethods.GetStoredNumber.HelpTip" xml:space="preserve">
    <value>Returns a number previously stored using StoreNumber or StrokesPlus.StoredValues.Numbers.Set</value>
  </data>
  <data name="ActionStepMethods.SetWindowWidth.HelpTip" xml:space="preserve">
    <value>Sets the width of the specified window (passed in as a SystemWindow type).</value>
  </data>
  <data name="ActionStepMethods.SetWindowLocationXY.DisplayName" xml:space="preserve">
    <value>Set Window Location X,Y</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKey.Parameters.vk.Name" xml:space="preserve">
    <value>vk</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHandle.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHandle.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKey.Parameters.vk.Type" xml:space="preserve">
    <value>VirtualKeyCode</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendControlDown.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendAltUp.Example.Simple" xml:space="preserve">
    <value>sp.SendAltUp();</value>
  </data>
  <data name="ActionStepMethods.SwitchToLastApplication.HelpTip" xml:space="preserve">
    <value>Activates the last active, non-minimized window, similar to Alt+Tab.</value>
  </data>
  <data name="ActionStepMethods.LoadFloaterLayout.HelpTip" xml:space="preserve">
    <value>Load a floater layout by name, pass an empty string to deselect layout. Only works if floaters are currently shown.</value>
  </data>
  <data name="ActionStepMethods.If.DisplayName" xml:space="preserve">
    <value>If</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMacroScript.Parameters.name.Description" xml:space="preserve">
    <value>Name of the macro.</value>
  </data>
  <data name="PlugInRemoveLocation" xml:space="preserve">
    <value>Remove Folder</value>
  </data>
  <data name="tabPreferencesTouchFloaterTapInterval" xml:space="preserve">
    <value>Floater Menu Tap Timeout (ms)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPlaybackVolume.Example.Simple" xml:space="preserve">
    <value>var currentVolume = sp.GetPlaybackVolume();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyUp.Name" xml:space="preserve">
    <value>SendVKeyUp</value>
  </data>
  <data name="LoadingSettingsOptions" xml:space="preserve">
    <value>Initializing Options section...</value>
  </data>
  <data name="V8LoadErrorMessage" xml:space="preserve">
    <value>Error initializing V8 script engine:

Error: '{0}' 

StrokesPlus.net will now exit.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Parameters.wParam.Type" xml:space="preserve">
    <value>object (casts to int then IntPtr)</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Parameters.wParam.Name" xml:space="preserve">
    <value>wParam</value>
  </data>
  <data name="ActionTab" xml:space="preserve">
    <value>Steps</value>
  </data>
  <data name="ActionAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetCommunicationsVolume.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Refresh.Description" xml:space="preserve">
    <value>If supported, invalidates the client area of the window and forces a redraw.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.keyName.Description" xml:space="preserve">
    <value>Name of the subkey within the baseKey to store the value in.</value>
  </data>
  <data name="Gesture" xml:space="preserve">
    <value>Gesture</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.IsDescendantOf.Name" xml:space="preserve">
    <value>IsDescendantOf</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHandle.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPlaybackVolume.Returns" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHandle.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendShiftUp.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="LoadingSettingsAbout" xml:space="preserve">
    <value>Initializing About section...</value>
  </data>
  <data name="FindReplaceMenuNamedGroup" xml:space="preserve">
    <value>$(Name) Named Group</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesInExplorer.Parameters.hWnd.Description" xml:space="preserve">
    <value>Handle to the Explorer window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredDecimal.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Disable.Description" xml:space="preserve">
    <value>Disable StrokesPlus.net.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredDecimal.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ConsoleSetWarningColorMenu" xml:space="preserve">
    <value>Set Warning Default Color</value>
  </data>
  <data name="tabGesturesDeleteGestureConfirmTitle" xml:space="preserve">
    <value>Delete Gesture(s)</value>
  </data>
  <data name="ActionStepMethods.GetWindowRectangle.HelpTip" xml:space="preserve">
    <value>Returns a rectangle representing the window's (passed in as a SystemWindow type) rectangle, excluding borders. Use Get Window Rectangle Full to include the frame/border.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Parameters.color.Description" xml:space="preserve">
    <value>Specifies a color for the text in the console, otherwise uses default.</value>
  </data>
  <data name="Hidden" xml:space="preserve">
    <value>Hidden</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.AllScreens.Description" xml:space="preserve">
    <value>Returns an array of Screen objects containing all screens as defined by Windows.</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StopAllScripts.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayTextUpdate.Parameters.info.Description" xml:space="preserve">
    <value>The DisplayTextInfo object containing the information used to display the popup.</value>
  </data>
  <data name="MacroRecordLoseScriptMessage" xml:space="preserve">
    <value>Are you sure you want to clear this script and record a new one?</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EnableCapture.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.IfExpression.DisplayName" xml:space="preserve">
    <value>If Expression</value>
  </data>
  <data name="ActionStepMethods.GetTextLength.HelpTip" xml:space="preserve">
    <value>Returns the length of a string.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Parameters.rect.Description" xml:space="preserve">
    <value>The rectangle representing the area which will be divided into regions and returned.</value>
  </data>
  <data name="tabPreferencesHintLocationBottomLeft" xml:space="preserve">
    <value>Bottom Left</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.methodAttributes.Name" xml:space="preserve">
    <value>methodAttributes</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.methodAttributes.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="tabGlobalWindowEventsTabName" xml:space="preserve">
    <value>Window Events</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RealParent.Type" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RealParent.Name" xml:space="preserve">
    <value>RealParent</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCurrentMousePoint.Example.Simple" xml:space="preserve">
    <value>var currentMouseLocation = sp.GetCurrentMousePoint();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayTextUpdate.Example.Simple" xml:space="preserve">
    <value>var info = new DisplayTextInfo();
info.Title = 'Test';
info.TitleAlignment = 'Center';
info.Message = 'Message';
info.MessageAlignment = 'Left';
info.Duration = 2000;
//The transparency of the popup, valid ranges: 0.05 - 1.0  (1.0 is no transparency)
info.Opacity = 0.7;
//Location supports location as well, use this format to specify a type: '100,200'
//types: topleft, top, topright, right, bottomright, bottom, bottomleft, left
info.Location = 'top'; 
info.TitleFont = new Font('Segoe UI', 12, host.flags(FontStyle.Bold));
info.MessageFont = new Font('Segoe UI Semibold', 12);
info.BackColor = 'black';//'56,169,255'; //Also supports RGBinfo.ForeColor = 'white';
info.Padding = 15;
info.FadeSteps = 18;
//If true, always displays on primary screen (unless Location is a point type), 
//otherwise displays on the screen where the gesture started
info.UsePrimaryScreen = true; 
sp.DisplayTextUpdate(info);
</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.WindowState.Name" xml:space="preserve">
    <value>WindowState</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.WindowState.Type" xml:space="preserve">
    <value>FormWindowState</value>
  </data>
  <data name="DisplayDPIMismatchTitle" xml:space="preserve">
    <value>Display DPI Mismatch</value>
  </data>
  <data name="ScriptHelpCategoryNameScriptObjects" xml:space="preserve">
    <value>Script Objects</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Parameters.columns.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Parameters.columns.Name" xml:space="preserve">
    <value>columns</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredObject.Description" xml:space="preserve">
    <value>Returns an object previously stored using sp.StoreObject or StrokesPlus.StoredValues.Objects.Set</value>
  </data>
  <data name="tabPreferencesOnlyAllowDefinedApps" xml:space="preserve">
    <value>Only Allow Defined Apps</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimerScript.Description" xml:space="preserve">
    <value>Returns the script from the previouly created timer via sp.CreateTimer.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RefreshNativeModules.Example.Simple" xml:space="preserve">
    <value>sp.RefreshNativeModules();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Pause.Example.Simple" xml:space="preserve">
    <value>sp.Pause(2); //Wait two seconds</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Where.Example.Simple" xml:space="preserve">
    <value>var filteredList = myList.Where(i =&gt; i.Property == "value");</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPixelColorFromPoint.Description" xml:space="preserve">
    <value>Returns a Color struct for the pixel at the location of the point passed in.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleShowOnSystemError.Description" xml:space="preserve">
    <value>Enables or disables if the console window is displayed on error.</value>
  </data>
  <data name="tabPreferencesHintLocationTopRight" xml:space="preserve">
    <value>Top Right</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayTextUpdate.Name" xml:space="preserve">
    <value>DisplayTextUpdate</value>
  </data>
  <data name="MiddleClickScriptTab" xml:space="preserve">
    <value>Middle Click</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Title.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreBool.Example.Simple" xml:space="preserve">
    <value>sp.StoreBool('test', true);</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Title.Name" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHistoryScript.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the history script.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EnableCapture.Name" xml:space="preserve">
    <value>EnableCapture</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadLayout.Description" xml:space="preserve">
    <value>Load a floater layout by name. Only works if floaters are currently shown.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadCustomFloater.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHandle.Example.Simple" xml:space="preserve">
    <value>sp.DeleteStoredHandle('test');</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.TopMost.Example.Simple" xml:space="preserve">
    <value>.TopMost</value>
  </data>
  <data name="ActionStepMethods.Exit.DisplayName" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="tabPreferencesTouchPadThresholdDelta" xml:space="preserve">
    <value>Touchpad Threshold Delta</value>
  </data>
  <data name="ScriptHelpTypeText" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.wParam.Name" xml:space="preserve">
    <value>wParam</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.wParam.Type" xml:space="preserve">
    <value>object (casts to int then IntPtr)</value>
  </data>
  <data name="TouchFloaterMenuChangeSize" xml:space="preserve">
    <value>Change Size</value>
  </data>
  <data name="PlugInTabExcluded" xml:space="preserve">
    <value>Excluded</value>
  </data>
  <data name="RightClickScriptTab" xml:space="preserve">
    <value>Right Click</value>
  </data>
  <data name="MacroOptionsGroupText" xml:space="preserve">
    <value>Macro Recording Options</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderBy.Example.Simple" xml:space="preserve">
    <value>var mySortedList = myList.OrderBy("PropertyName");
var myDescSortedList = myList.OrderBy("PropertyName desc");</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Description" xml:space="preserve">
    <value>Overload for ModuleBuilder.DefineEnum to simplify obtaining an instantiated System.Reflection.Emit.EnumBuilder object.</value>
  </data>
  <data name="LoadSettingsErrorTitle" xml:space="preserve">
    <value>Error Loading Settings</value>
  </data>
  <data name="VC2015RuntimeNotFoundMessage" xml:space="preserve">
    <value>Missing Microsoft Visual C++ 2015 Runtime.

MSVCP140.dll
VCRUNTIME140.dll

Would you like try to continue anyway?</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.MultiSelect.Name" xml:space="preserve">
    <value>MultiSelect</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.MultiSelect.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Run.Name" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredValues.DisplayName" xml:space="preserve">
    <value>Delete All Stored Values</value>
  </data>
  <data name="RegionTypeQuadrant" xml:space="preserve">
    <value>Quadrant</value>
  </data>
  <data name="tabPreferencesHintForeColorButton" xml:space="preserve">
    <value>Change...</value>
  </data>
  <data name="RegionTypeCustomColumns" xml:space="preserve">
    <value>Columns</value>
  </data>
  <data name="tabPreferencesHintLocationTop" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendUnicodeString.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.BrowserOptions.Description" xml:space="preserve">
    <value>One or more browser command line options supported by WebView2.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ClipToScreen.Name" xml:space="preserve">
    <value>ClipToScreen</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Name" xml:space="preserve">
    <value>MouseClick</value>
  </data>
  <data name="NewCategoryName" xml:space="preserve">
    <value>New Category</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Description" xml:space="preserve">
    <value>Writes a key/value to the registry.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.WindowState.Description" xml:space="preserve">
    <value>Returns the window state of the window.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Visible.Example.Simple" xml:space="preserve">
    <value>.Visible</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ExecutableName.Description" xml:space="preserve">
    <value>Returns the file name of the executable which owns the window; use ExecutablePath to get the folder.</value>
  </data>
  <data name="ActionStepMethods.HideFloaters.HelpTip" xml:space="preserve">
    <value>Hides the floaters.</value>
  </data>
  <data name="ActionStepMethods.GetWindowWidth.DisplayName" xml:space="preserve">
    <value>Get Window Width</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.message.Description" xml:space="preserve">
    <value>The message value to post, casted to uint.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Parent.Example.Simple" xml:space="preserve">
    <value>.Parent</value>
  </data>
  <data name="MacroOptionsIncludeWindowDetailsCheck" xml:space="preserve">
    <value>Include window details in script</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreObject.Parameters.value.Description" xml:space="preserve">
    <value>Value of the object to store.</value>
  </data>
  <data name="LoadScriptsExternalFileErrorMessage" xml:space="preserve">
    <value>Failed to load scripts from external file. Check your file for errors:</value>
  </data>
  <data name="NoMatchScriptTab" xml:space="preserve">
    <value>No Match</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayTextUpdate.Description" xml:space="preserve">
    <value>Updates the current popup created by sp.DisplayText. This is far more efficient than closing and displaying a new popup.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToNextScreen.Example.Simple" xml:space="preserve">
    <value>.MoveToNextScreen()</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreBool.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.TextColor.Description" xml:space="preserve">
    <value>Text color to use for the popup, or null to use system Menu Text color.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Parameters.hWnd.Name" xml:space="preserve">
    <value>hWnd</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Parameters.hWnd.Type" xml:space="preserve">
    <value>IntPtr</value>
  </data>
  <data name="FindReplaceOptionsMultiline" xml:space="preserve">
    <value>Multiline</value>
  </data>
  <data name="ActionStepMethods.GetCaretLocation.HelpTip" xml:space="preserve">
    <value>Returns the location of the caret on the screen. If the location cannot be determined, returns null.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TogglePlaybackMute.Name" xml:space="preserve">
    <value>TogglePlaybackMute</value>
  </data>
  <data name="AfterActionTab" xml:space="preserve">
    <value>After Action</value>
  </data>
  <data name="SaveAccountTokenFileErrorMessage" xml:space="preserve">
    <value>An error occured trying to save your account credentials file.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHandle.Parameters.value.Type" xml:space="preserve">
    <value>IntPtr</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHandle.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ActionStepMethods.OpenSettings.DisplayName" xml:space="preserve">
    <value>Open Settings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyDown.Parameters.vk.Description" xml:space="preserve">
    <value>Value of the virtual key to send (vk.XX).</value>
  </data>
  <data name="ExportHeadingLabel" xml:space="preserve">
    <value>Select the items you want to export below. Note that if you export an action which is associated with a gesture, the gesture will be included even if it is not checked in the list below.</value>
  </data>
  <data name="ActionStepMethods.ReplaceText.HelpTip" xml:space="preserve">
    <value>Returns a new string replacing any occurrences of oldText with newText.</value>
  </data>
  <data name="ActionStepMethods.GetCurrentExplorerPath.DisplayName" xml:space="preserve">
    <value>Get Current Explorer Path</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.AllChildWindows.Description" xml:space="preserve">
    <value>Returns an array of SystemWindow objects for direct child controls or window.</value>
  </data>
  <data name="SettingsToolbarOnlineRepo" xml:space="preserve">
    <value>Online Repository</value>
  </data>
  <data name="ActionStepMethods.GetWindowsFromTitleRegex.DisplayName" xml:space="preserve">
    <value>Get Windows From Title Regex</value>
  </data>
  <data name="WinKey" xml:space="preserve">
    <value>Win</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredHandles.Example.Simple" xml:space="preserve">
    <value>sp.DeleteAllStoredHandles();</value>
  </data>
  <data name="TrayMenuTrainingMode" xml:space="preserve">
    <value>Training Mode</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Parameters.columns.Description" xml:space="preserve">
    <value>The number of columns to divide the rectangle into.</value>
  </data>
  <data name="AboutOpenConfigLocation" xml:space="preserve">
    <value>Open Settings Folder</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetCommunicationsVolume.Description" xml:space="preserve">
    <value>Sets the volume level of the default communications mixer/device. (0 - 100)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleShow.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="LoadingClearingSynaptics" xml:space="preserve">
    <value>Clearing Synaptics interface...</value>
  </data>
  <data name="tabPreferencesTouchFloaterMinAlpha" xml:space="preserve">
    <value>Floater Minimum Alpha (1-255)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredPoint.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the point.</value>
  </data>
  <data name="tabPreferencesMinSegmentLength" xml:space="preserve">
    <value>Minimum Segment Length (px)</value>
  </data>
  <data name="TrainingModeGestureLengthMessage" xml:space="preserve">
    <value>Please draw a longer gesture.</value>
  </data>
  <data name="RegionTypeCustomRows" xml:space="preserve">
    <value>Rows</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RecordTemporaryMacro.Name" xml:space="preserve">
    <value>RecordTemporaryMacro</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreNumber.Name" xml:space="preserve">
    <value>StoreNumber</value>
  </data>
  <data name="ScriptHelp.ActionMethod.LastActiveWindow.Example.Simple" xml:space="preserve">
    <value>var lastWindow = sp.LastActiveWindow();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.CreateType.Name" xml:space="preserve">
    <value>ModuleBuilder.CreateType</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.HighlightColor.Description" xml:space="preserve">
    <value>Item highlight color to use for the popup, or null to use system Menu Highlight color.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetPlaybackVolume.Description" xml:space="preserve">
    <value>Sets the volume level of the default playback mixer/device. (0 - 100)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCommunicationsVolume.Name" xml:space="preserve">
    <value>GetCommunicationsVolume</value>
  </data>
  <data name="ScriptHelpCategoryNameFloaters" xml:space="preserve">
    <value>Floaters</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Activate.Example.Simple" xml:space="preserve">
    <value>.Activate()</value>
  </data>
  <data name="LoadingSettingsRepoBrowser" xml:space="preserve">
    <value>Initializing Online Repository section...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldAttributes.Name" xml:space="preserve">
    <value>fieldAttributes</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredNumber.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldAttributes.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredNumber.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPoint.Parameters.y.Description" xml:space="preserve">
    <value>Top coordinate.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyUp.Parameters.ch.Name" xml:space="preserve">
    <value>ch</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyUp.Parameters.ch.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimerScript.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ActionStepMethods.SendKeys.HelpTip" xml:space="preserve">
    <value>Sends the specified keystrokes to the foreground window. See the Microsoft System.Windows.Forms.SendKeys class documentation for usage details like special characters and using modifier keys such as Control/Alt/Shift.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromHandle.Parameters.hWnd.Description" xml:space="preserve">
    <value>Handle to the control or window</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredNumber.Returns" xml:space="preserve">
    <value>long</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreString.Example.Simple" xml:space="preserve">
    <value>sp.StoreString('test', 'value');</value>
  </data>
  <data name="tabPreferencesTextExpansionTokenClearDelay" xml:space="preserve">
    <value>Delay After Clearing Token (ms)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.AllDevices.Example.Full" xml:space="preserve">
    <value>// Get all devices and return list. 
// Each device has only the four properties listed below

var devices = sp.AllDevices();
var deviceList = "";
for(var i = 0; i &lt; devices.Count; i++)
{
    deviceList += `DeviceID: ${devices[i].DeviceID}
    Name: ${devices[i].Name}
    Description: ${devices[i].Description}
    Status: ${devices[i].Status}
`;
}
// Copy list to clipboard
clip.SetText(deviceList);

// Example to look for a specific device
if(devices.Where(d =&gt; d.Name == "Rob's Galaxy Note10").Count() &gt; 0) {
    sp.MessageBox("Phone connected!", "Galaxy Phone via Bluetooth");
}
</value>
  </data>
  <data name="tabPreferencesScriptReplAddValueLabel" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EnumBuilder.Create.Returns" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ActionStepMethods.PlaySound.DisplayName" xml:space="preserve">
    <value>Play Sound</value>
  </data>
  <data name="ActionStepMethods.GetObjectFieldByName.DisplayName" xml:space="preserve">
    <value>Get Object Field By Name</value>
  </data>
  <data name="PlugInFailedObjectNameAlreadyExistsTitle" xml:space="preserve">
    <value>Error Loading Plug-In</value>
  </data>
  <data name="EventValue" xml:space="preserve">
    <value>Event Value</value>
  </data>
  <data name="ActionStepMethods.ConvertToType.DisplayName" xml:space="preserve">
    <value>Convert To Type</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteSavedString.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteSavedString.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Parameters.baseKey.Description" xml:space="preserve">
    <value>RegistryKey representing the registry key where the keyName exists.</value>
  </data>
  <data name="ActionStepMethods.DeleteAllSavedStrings.DisplayName" xml:space="preserve">
    <value>Delete All Saved Strings</value>
  </data>
  <data name="FindReplaceOptionsSingleline" xml:space="preserve">
    <value>Singleline</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Region.Example.Simple" xml:space="preserve">
    <value>.Region</value>
  </data>
  <data name="ScriptHelpClassFloaterVarsName" xml:space="preserve">
    <value>FloaterVars</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldTypes.Description" xml:space="preserve">
    <value>Array of .NET types for each of the field names (same order and count).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Enable.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.showErrors.Description" xml:space="preserve">
    <value>Displays an error message box, if the action was not successful.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCaptureMixer.Name" xml:space="preserve">
    <value>GetCaptureMixer</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineType.Example.Simple" xml:space="preserve">
    <value>var user32TB = sp.NativeModule().DefineType("User32", "Class,Public,SequentialLayout,Serializable");
//Make additional fields/methods/nested types here
user32TB.Create();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMacroScript.Example.Simple" xml:space="preserve">
    <value>sp.GetMacroScript('categoryname', 'macroname');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreRectangle.Parameters.value.Description" xml:space="preserve">
    <value>Value of the rectangle to store.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeys.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.EnsureVisible.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisableNext.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="FindReplaceOptionsCultureInvariant" xml:space="preserve">
    <value>Culture Invariant</value>
  </data>
  <data name="Record" xml:space="preserve">
    <value>Record</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="ScriptHelpScriptObjectsPopupMenuInfoText" xml:space="preserve">
    <value>Used when calling sp.ShowPopupMenu()

    public class PopupMenuInfo
    {
        public Point Location { get; set; }
        public List&lt;string&gt; Items { get; }
        public string Callback { get; set; }
        public uint SelectedID { get; set; }
    }</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.length.Name" xml:space="preserve">
    <value>length</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.length.Type" xml:space="preserve">
    <value>object (casts to int)</value>
  </data>
  <data name="ScriptHelpCategoryTextLocateWindow" xml:space="preserve">
    <value>Functions for finding or retrieving windows.</value>
  </data>
  <data name="ActionStepMethods.Subtract.DisplayName" xml:space="preserve">
    <value>Subtract</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Parameters.subKey.Description" xml:space="preserve">
    <value>Name of the subkey within the baseKey to delete.</value>
  </data>
  <data name="ScriptHelpCategoryNameConsole" xml:space="preserve">
    <value>Console</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetCustomFloaterLocation.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="frmSelectGestureTitle" xml:space="preserve">
    <value>Select Gesture</value>
  </data>
  <data name="LoadAccountTokenErrorTitle" xml:space="preserve">
    <value>Error Loading Account File</value>
  </data>
  <data name="frmSyncSettingsAvailableText" xml:space="preserve">
    <value>Available Settings</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Minimized.Description" xml:space="preserve">
    <value>Returns true if the window in minimized.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StorePoint.Parameters.value.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StorePoint.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Parameters.hWnd.Description" xml:space="preserve">
    <value>Handle to the Explorer window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.LastApplication.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RealParent.Description" xml:space="preserve">
    <value>Returns a SystemWindow object for the parent control or window, using a different set of rules to determine parent.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredObject.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredObject.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ActionStepMethods.DisableCapture.HelpTip" xml:space="preserve">
    <value>Disables the mouse and keyboard hooks.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleClearUser.Description" xml:space="preserve">
    <value>Clears the User log in the console window.</value>
  </data>
  <data name="LoadSettingsErrorMessage" xml:space="preserve">
    <value>Error loading settings. Would you like to create the default settings?

If you click Yes, your existing settings file (StrokesPlus.net.bin / StrokesPlus.net.json) will be replaced, if it exists.

Click No to exit StrokesPlus.net.</value>
  </data>
  <data name="ActionStepMethods.StoreRectangle.HelpTip" xml:space="preserve">
    <value>Stores a rectangle using the specified name. Value can be retrieved via GetStoredRectangle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Example.Simple" xml:space="preserve">
    <value>var typesTB = sp.NativeModule().CreateType("Types", "Class,Public,SequentialLayout,Serializable");
typesTB.DefineNestedStruct("RECT", 
                           "Left,Top,Right,Bottom", 
                           [Int32T,Int32T,Int32T,Int32T]).Create();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Parameters.parameterTypes.Type" xml:space="preserve">
    <value>Type[]</value>
  </data>
  <data name="tabPreferencesRelayOnGestureTimeout" xml:space="preserve">
    <value>Relay Gesture on Timeout</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Parameters.parameterTypes.Name" xml:space="preserve">
    <value>parameterTypes</value>
  </data>
  <data name="frmSyncSettingsUploadErrorTitle" xml:space="preserve">
    <value>Upload Error</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StorePoint.Parameters.value.Description" xml:space="preserve">
    <value>Value of the point to store.</value>
  </data>
  <data name="ActionStepMethods.SendVirtualKeyDown.HelpTip" xml:space="preserve">
    <value>Simulates pressing the specified key down.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Maximize.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="FindReplaceOptionsLabel" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyDown.Name" xml:space="preserve">
    <value>SendKeyDown</value>
  </data>
  <data name="ActionStepMethods.DisableNext.HelpTip" xml:space="preserve">
    <value>Disables the next stroke or secondary stroke button press from capturing.</value>
  </data>
  <data name="NewStep" xml:space="preserve">
    <value>NewStep</value>
  </data>
  <data name="LoadingStoppingActions" xml:space="preserve">
    <value>Stopping all actions...</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredBool.HelpTip" xml:space="preserve">
    <value>Deletes a boolean previously stored using StoreBool or StrokesPlus.StoredValues.Booleans.Set</value>
  </data>
  <data name="CustomFloaterShown" xml:space="preserve">
    <value>Shown</value>
  </data>
  <data name="TextExpansionTokenLabel" xml:space="preserve">
    <value>Token</value>
  </data>
  <data name="CustomFloaterPress" xml:space="preserve">
    <value>Press</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Confirm.Parameters.message.Type" xml:space="preserve">
    <value>object (casted to string)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Confirm.Parameters.message.Name" xml:space="preserve">
    <value>message</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.values.Type" xml:space="preserve">
    <value>int[] (or valid underlyingType of: byte, sbyte, short, ushort, int, uint, long, and ulong</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.values.Name" xml:space="preserve">
    <value>values</value>
  </data>
  <data name="PlugInFooterText" xml:space="preserve">
    <value>Plug-Ins can be any publicly accessible .NET class library in DLL form which exists in the Plug-Ins folder where StrokesPlus.net is running from, or a custom location specified in the Search Locations tab. Note that plug-ins are only loaded once and persist for the life of the S+ process, you need to restart StrokesPlus.net to fully refresh.</value>
  </data>
  <data name="CustomFloaterRight" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterShow.Example.Simple" xml:space="preserve">
    <value>sp.TouchFloaterShow();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredObject.Returns" xml:space="preserve">
    <value>object</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetHistoryScript.Parameters.index.Description" xml:space="preserve">
    <value>Index of the history script to retrieve.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitlePartial.Parameters.partialTitle.Description" xml:space="preserve">
    <value>Partial search string. This is an exact partial match not a wildcard or regular expression match.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHandle.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the handle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderByMultiple.Name" xml:space="preserve">
    <value>IEnumerable.OrderByMultiple</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseMove.Name" xml:space="preserve">
    <value>MouseMove</value>
  </data>
  <data name="ScriptHelp.ActionMethod.FindImageWithinImage.Example.Simple" xml:space="preserve">
    <value>See this post: https://forum.strokesplus.net/posts/m12998-Finding-image-on-screen</value>
  </data>
  <data name="CustomFloaterEnter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCurrentCulture.Description" xml:space="preserve">
    <value>Returns the current culture code, e.g. en-US, pl-PL.</value>
  </data>
  <data name="FindReplaceFindNext" xml:space="preserve">
    <value>Find Next</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Returns" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="CustomFloaterHover" xml:space="preserve">
    <value>Hover</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.AllDescendantWindows.Name" xml:space="preserve">
    <value>AllDescendantWindows</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.AllDescendantWindows.Type" xml:space="preserve">
    <value>SystemWindow[]</value>
  </data>
  <data name="ActionDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredObjects.Example.Simple" xml:space="preserve">
    <value>sp.DeleteAllStoredObjects();</value>
  </data>
  <data name="FloaterLayoutsNewMessage" xml:space="preserve">
    <value>Enter a name for the new layout.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSavedString.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Minimize.Description" xml:space="preserve">
    <value>Minimizes the window.</value>
  </data>
  <data name="CustomFloaterLeave" xml:space="preserve">
    <value>Leave</value>
  </data>
  <data name="PlugInDeleteFailedMessage" xml:space="preserve">
    <value>Failed to delete Plug-In.</value>
  </data>
  <data name="ActionStepMethods.ConsumePhysicalInput.HelpTip" xml:space="preserve">
    <value>Consumes ALL physical mouse and keyboard input. NOTE: Be very careful when using this function, if you call it once with true and forget to call it again with false, you may be stuck unable to use the computer!</value>
  </data>
  <data name="frmScriptHelpTitle" xml:space="preserve">
    <value>Script Help</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ClientPointToScreenPoint.Parameters.clientPoint.Description" xml:space="preserve">
    <value>The client Point to translate to a screen point.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.returnType.Description" xml:space="preserve">
    <value>(optional) .NET type for the method, null for void</value>
  </data>
  <data name="tabPreferencesHintPaddingLabel" xml:space="preserve">
    <value>Padding (px)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecutePreviousScript.Description" xml:space="preserve">
    <value>Executes one of the previous 5 scripts that were executed. The last 5 scripts are stored in history and the index specifies which one to retrieve. The index is zero based, so 0 is the most recent script, 4 is the oldest script in history.</value>
  </data>
  <data name="tabPreferencesHintLocationRight" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="LoadingStoppingWinEventHook" xml:space="preserve">
    <value>Stopping win event hook...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindowExecuteScriptAsync.Example.Full" xml:space="preserve">
    <value>// Assumes you are using the Example from HTMLWindow
	sp.HTMLWindowExecuteScriptAsync(sp.GetStoredHandle("testWindowHandle"), "alert('Hello!');");</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RealParent.Example.Simple" xml:space="preserve">
    <value>.RealParent</value>
  </data>
  <data name="ActionStepMethods.SaveString.HelpTip" xml:space="preserve">
    <value>Stores a string using the specified name. Value can be retrieved via Get Saved String, sp.GetSavedString, or StrokesPlus.SavedString.Get.</value>
  </data>
  <data name="frmSyncSettingsDownloadErrorTitle" xml:space="preserve">
    <value>Download Error</value>
  </data>
  <data name="HTMLFormWebView2NotAvailableMessage" xml:space="preserve">
    <value>WebView2 Not Installed</value>
  </data>
  <data name="tabPreferencesHintLocationLabel" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimer.Example.Simple" xml:space="preserve">
    <value>var timer = sp.GetTimer('test');</value>
  </data>
  <data name="PressKeysBelow" xml:space="preserve">
    <value>Press Key(s) Below</value>
  </data>
  <data name="ActionStepMethods.SendVirtualKeyDown.DisplayName" xml:space="preserve">
    <value>Send Virtual Key Down</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendString.Parameters.str.Description" xml:space="preserve">
    <value>Sequence of characters to send.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredString.Name" xml:space="preserve">
    <value>DeleteStoredString</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Description" xml:space="preserve">
    <value>Shows a popup list, like a menu, which can execute scripts and supports nested items.</value>
  </data>
  <data name="tabPreferencesMaxScriptEnginePoolSize" xml:space="preserve">
    <value>Max Script Pool Size</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredStrings.Name" xml:space="preserve">
    <value>DeleteAllStoredStrings</value>
  </data>
  <data name="ShowHideAllExclusionZones" xml:space="preserve">
    <value>Toggle All Exclusion Zones</value>
  </data>
  <data name="ActionStepMethods.GetStoredRectangle.HelpTip" xml:space="preserve">
    <value>Returns a rectangle previously stored using StoreRectangle or StrokesPlus.Rectangles.Booleans.Set</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredDecimal.Example.Simple" xml:space="preserve">
    <value>sp.DeleteStoredDecimal('test');</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Center.Name" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredString.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="frmSyncSettingsListTimestamp" xml:space="preserve">
    <value>Date Uploaded</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredObject.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterGetLocation.Description" xml:space="preserve">
    <value>Get the location of the main floater. Returns null if floaters are not currently shown.</value>
  </data>
  <data name="FindReplaceSearchTypeExtended" xml:space="preserve">
    <value>Extended (\n, \r, \t, \0)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredObject.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderByMultiple.Parameters.queryString.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderByMultiple.Parameters.queryString.Name" xml:space="preserve">
    <value>queryString</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.OnDocumentCreatedScript.Description" xml:space="preserve">
    <value>JavaScript to execute in the HTML window once the document is created.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegateList.Parameters.delegateList.Description" xml:space="preserve">
    <value>Array of parameters which match the NativeDelegate function. For example: [["EnumWindowsProc", [IntPtrT, IntPtrT], BooleanT],["EnumWindowsProcA", [IntPtrT, IntPtrT], BooleanT]]</value>
  </data>
  <data name="ScriptHelpClassWheelTick" xml:space="preserve">
    <value>WheelTick</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Example.Simple" xml:space="preserve">
    <value>var items = sp.GetItemsInExplorer(action.Window.HWnd, false, true, false);</value>
  </data>
  <data name="LoadingInitializingHintWindow" xml:space="preserve">
    <value>Initializing hint window...</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Enabled.Description" xml:space="preserve">
    <value>Gets or sets the enabled state of the control or window.</value>
  </data>
  <data name="ScriptHelpMethodText" xml:space="preserve">
    <value>Method</value>
  </data>
  <data name="ActionStepMethods.EnableCapture.DisplayName" xml:space="preserve">
    <value>Enable Capture</value>
  </data>
  <data name="FindReplaceMenuRegexDigit" xml:space="preserve">
    <value>\d Digit (\D Non-Digit)</value>
  </data>
  <data name="TrayCaptionNormal" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="RemoveReference" xml:space="preserve">
    <value>Remove References</value>
  </data>
  <data name="ExportFileFilterName" xml:space="preserve">
    <value>StrokesPlus.net Export files|*.spexport</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadCustomFloater.Name" xml:space="preserve">
    <value>TouchFloaterLoadCustomFloater</value>
  </data>
  <data name="ScriptHelpCategoryTextStoreRetrieveData" xml:space="preserve">
    <value>Functions for storing, retrieving, and deleting stored data.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Highlight.Example.Simple" xml:space="preserve">
    <value>.Highlight()</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecutePreviousScript.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Parameters.keyName.Description" xml:space="preserve">
    <value>Name of the key within the subkey to read the value from.</value>
  </data>
  <data name="ItemAlreadyExistsTitle" xml:space="preserve">
    <value>Name Already Exists</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Parameters.message.Name" xml:space="preserve">
    <value>message</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Parameters.message.Type" xml:space="preserve">
    <value>object (casts to uint)</value>
  </data>
  <data name="FindReplaceMenuTab" xml:space="preserve">
    <value>\t Tab</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.OnDocumentCreatedScript.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.OnDocumentCreatedScript.Name" xml:space="preserve">
    <value>OnDocumentCreatedScript</value>
  </data>
  <data name="NewIgnoredName" xml:space="preserve">
    <value>New Ignored Window</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Parameters.message.Description" xml:space="preserve">
    <value>Message to log.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Location.Description" xml:space="preserve">
    <value>The location of the control or window inside its parent or on the screen, does not include window borders.</value>
  </data>
  <data name="FindReplaceMenuLineFeed" xml:space="preserve">
    <value>\n Line Feed</value>
  </data>
  <data name="CustomFloaterToggleShown" xml:space="preserve">
    <value>Toggle Shown</value>
  </data>
  <data name="TextExpansionTypeScript" xml:space="preserve">
    <value>Automation</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredObjects.HelpTip" xml:space="preserve">
    <value>Deletes all stored objects.</value>
  </data>
  <data name="ImportMacro" xml:space="preserve">
    <value>Import...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SaveString.Parameters.name.Description" xml:space="preserve">
    <value>Name used to save the value.</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictToRectangle.Parameters.rect.Name" xml:space="preserve">
    <value>rect</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictToRectangle.Parameters.rect.Type" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="ActionStepMethods.RunOrActivate.HelpTip" xml:space="preserve">
    <value>Takes a full path and EXE name and looks to see if there is a window already running for that EXE and activates it, otherwise it runs the EXE.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.AllScreens.Returns" xml:space="preserve">
    <value>Screen[]</value>
  </data>
  <data name="Primary" xml:space="preserve">
    <value>Primary</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RefreshNativeModules.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.parameterTypes.Type" xml:space="preserve">
    <value>Type[]</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.parameterTypes.Name" xml:space="preserve">
    <value>parameterTypes</value>
  </data>
  <data name="tabPreferencesFireOnMiddleClick" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="AddAction" xml:space="preserve">
    <value>Add Action</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredBool.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleEnableTimestamps.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredBool.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleEnableTimestamps.Parameters.value.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RECT.Example.Simple" xml:space="preserve">
    <value>.RECT</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendModifiedVKeys.Parameters.Keys.Description" xml:space="preserve">
    <value>Single (vk.XX) or array ([vk.XX, vk.XX]) of VirtualKeyCode values to send after the modifiers have been pressed down.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredBools.Name" xml:space="preserve">
    <value>DeleteAllStoredBools</value>
  </data>
  <data name="ScriptHelp.ActionMethod.LastActiveWindow.Returns" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ActionStepMethods.SetMouseCursor.DisplayName" xml:space="preserve">
    <value>Set Mouse Cursor</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenFromPoint.Name" xml:space="preserve">
    <value>ScreenFromPoint</value>
  </data>
  <data name="ScriptHelpClassDisplayTextInfo" xml:space="preserve">
    <value>DisplayTextInfo</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.methodAttributes.Description" xml:space="preserve">
    <value>(optional) Comma-separated list of System.Reflection.MethodAttributes.</value>
  </data>
  <data name="ActionStepMethods.SetCustomFloaterOpacity.DisplayName" xml:space="preserve">
    <value>Set Custom Floater Opacity</value>
  </data>
  <data name="tabPreferencesActivateMouseWheelWindowInExclusionZonesLabel" xml:space="preserve">
    <value>Allow Activation in Exclusion Zones</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Name" xml:space="preserve">
    <value>RegistryReadNumber</value>
  </data>
  <data name="ActionStepMethods.TogglePlaybackMute.DisplayName" xml:space="preserve">
    <value>Toggle Playback Mute</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindowExecuteScriptAsync.Name" xml:space="preserve">
    <value>HTMLWindowExecuteScriptAsync</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredBools.DisplayName" xml:space="preserve">
    <value>Delete All Stored Booleans</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayTextClose.Example.Simple" xml:space="preserve">
    <value>sp.DisplayTextClose();</value>
  </data>
  <data name="TextExpansion" xml:space="preserve">
    <value>Text Expansion</value>
  </data>
  <data name="TrayMenuLogin" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredPoints.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.PlayTemporaryMacro.HelpTip" xml:space="preserve">
    <value>Plays the last temporary macro.</value>
  </data>
  <data name="TrayMenuAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ActionStepMethodCategories.Values.DisplayName" xml:space="preserve">
    <value>Values</value>
  </data>
  <data name="FindReplaceOptionsIgnoreCase" xml:space="preserve">
    <value>Ignore Case</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Enable.Example.Simple" xml:space="preserve">
    <value>sp.Enable();</value>
  </data>
  <data name="PlugInAddFailedTitle" xml:space="preserve">
    <value>Add Plug-In Failed</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PlayTemporaryMacro.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="EventObject" xml:space="preserve">
    <value>Event Object</value>
  </data>
  <data name="ActionStepMethods.GetString.HelpTip" xml:space="preserve">
    <value>Returns a new string variable set to the specified value.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ReloadScriptEnginePool.Example.Simple" xml:space="preserve">
    <value>sp.ReloadScriptEnginePool();</value>
  </data>
  <data name="LoadingClearingStoredVariables" xml:space="preserve">
    <value>Clearing stored variables...</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Movable.Description" xml:space="preserve">
    <value>Returns true if the window has the WS_SYSMENU flag.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredString.Example.Simple" xml:space="preserve">
    <value>var stringval = sp.GetStoredString('test');</value>
  </data>
  <data name="AppDefinitionParentText" xml:space="preserve">
    <value>Parent Title/Text:</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreObject.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMethod.Parameters.name.Description" xml:space="preserve">
    <value>Name of the sp.(Function), e.g. 'GetMethod'.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreObject.Parameters.value.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.ActionMethod.LastApplication.Name" xml:space="preserve">
    <value>LastApplication</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterHide.Name" xml:space="preserve">
    <value>TouchFloaterHide</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Refresh.Name" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="FindReplaceStatusTotalReplaced" xml:space="preserve">
    <value>Total replaced: </value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.HWnd.Name" xml:space="preserve">
    <value>HWnd</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.HWnd.Type" xml:space="preserve">
    <value>IntPtr</value>
  </data>
  <data name="TrayMenuUseX2" xml:space="preserve">
    <value>Mouse Button: X2</value>
  </data>
  <data name="TrayMenuUseX1" xml:space="preserve">
    <value>Mouse Button: X1</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Highlight.Description" xml:space="preserve">
    <value>Highlights the window with a red border. Not very consistent or reliable.</value>
  </data>
  <data name="frmAppBeforeAfterTab" xml:space="preserve">
    <value>Before/After Automation</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExpandEnvironmentVariables.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExpandEnvironmentVariables.Parameters.value.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.FitToScreen.Description" xml:space="preserve">
    <value>Fits the window on the screen where the window resides.</value>
  </data>
  <data name="AppDefinitionOwnerClass" xml:space="preserve">
    <value>Owner Class Name:</value>
  </data>
  <data name="ExclusionZoneUseRelativePosition" xml:space="preserve">
    <value>Relative To Window</value>
  </data>
  <data name="ActionStepMethods.GetMainFloaterLocation.HelpTip" xml:space="preserve">
    <value>Get the location of the main floater. Returns null if floaters are not currently shown.</value>
  </data>
  <data name="ActionStepMethods.SetObjectFieldByName.HelpTip" xml:space="preserve">
    <value>Assigns the value of the specified field to the object.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreString.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the string.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyDown.Description" xml:space="preserve">
    <value>Returns true if the specified key is currently pressed (down).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterShow.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="LoadScriptsErrorMessage" xml:space="preserve">
    <value>Failed to process Load Automations. Check your Load Automation for errors: </value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitleRegex.Description" xml:space="preserve">
    <value>Returns an array of SystemWindow objects for controls or windows based on a regular expression title match.</value>
  </data>
  <data name="WordForTab" xml:space="preserve">
    <value>Tab</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.arguments.Description" xml:space="preserve">
    <value>Command line arguments to pass to the program.</value>
  </data>
  <data name="tabPreferencesDrawWindowToBottom" xml:space="preserve">
    <value>Send Draw Surface to Bottom</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Thread.Type" xml:space="preserve">
    <value>ProcessThread</value>
  </data>
  <data name="MacroFileFilterName" xml:space="preserve">
    <value>StrokesPlus Macro files|*.spmacros</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Thread.Name" xml:space="preserve">
    <value>Thread</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKey.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHistoryScript.Example.Simple" xml:space="preserve">
    <value>sp.DeleteStoredHistoryScript('test');</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Name" xml:space="preserve">
    <value>SendMessageSetTextObj</value>
  </data>
  <data name="ActionStepMethods.DisplayText.HelpTip" xml:space="preserve">
    <value>Displays a popup on the screen containing a title and text.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromHandle.Parameters.hWnd.Name" xml:space="preserve">
    <value>hWnd</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterIsShown.Name" xml:space="preserve">
    <value>TouchFloaterIsShown</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloatersReset.Example.Simple" xml:space="preserve">
    <value>sp.TouchFloatersReset();</value>
  </data>
  <data name="ActionStepMethods.GetPixelColorFromPoint.DisplayName" xml:space="preserve">
    <value>Get Pixel Color From Point</value>
  </data>
  <data name="ActionStepMethods.GetCaretLocation.DisplayName" xml:space="preserve">
    <value>Get Caret Location</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromHandle.Parameters.hWnd.Type" xml:space="preserve">
    <value>IntPtr</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.forEach.Name" xml:space="preserve">
    <value>IEnumerable.forEach</value>
  </data>
  <data name="tabPreferencesTextExpansionTokenLengthLimit" xml:space="preserve">
    <value>Maximum Token Length</value>
  </data>
  <data name="tabPreferencesTextExpansionSpaceResetsToken" xml:space="preserve">
    <value>Space Resets Token</value>
  </data>
  <data name="ActionStepMethods.Delay.HelpTip" xml:space="preserve">
    <value>Pauses execution for the specified milliseconds.</value>
  </data>
  <data name="WindowTitleTraining" xml:space="preserve">
    <value>Gesture Training</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterShow.Name" xml:space="preserve">
    <value>TouchFloaterShow</value>
  </data>
  <data name="FromStack" xml:space="preserve">
    <value>From Stack</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Parameters.showErrors.Description" xml:space="preserve">
    <value>Displays an error message box, if the action was not successful.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CloseSettings.Name" xml:space="preserve">
    <value>CloseSettings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTemporaryMacroScript.Example.Simple" xml:space="preserve">
    <value>var lastscript = sp.GetTemporaryMacroScript();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegateList.Description" xml:space="preserve">
    <value>Creates a custom class for multiple function delegates at the same time.</value>
  </data>
  <data name="ScriptHelpCategoryTextRegistry" xml:space="preserve">
    <value>Functions for working with the Windows Registry.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SaveString.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ExportFileButton" xml:space="preserve">
    <value>Export...</value>
  </data>
  <data name="ScriptHelpCategoryTextFloaters" xml:space="preserve">
    <value>Functions for working with floaters</value>
  </data>
  <data name="ActionStepMethods.Else.DisplayName" xml:space="preserve">
    <value>Else</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToScreen.Parameters.number.Type" xml:space="preserve">
    <value>object (Screen object or casts to int)</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToScreen.Parameters.number.Name" xml:space="preserve">
    <value>number or Screen</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EnableCapture.Description" xml:space="preserve">
    <value>Enables the mouse and keyboard hooks.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Parameters.color.Name" xml:space="preserve">
    <value>color</value>
  </data>
  <data name="ActionStepMethods.IsCustomFloaterLoaded.DisplayName" xml:space="preserve">
    <value>Is Custom Floater Loaded</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Parameters.color.Type" xml:space="preserve">
    <value>Color struct (.NET, optional)</value>
  </data>
  <data name="tabPreferencesHintActionFontButton" xml:space="preserve">
    <value>Font...</value>
  </data>
  <data name="DevicesChangedScriptTab" xml:space="preserve">
    <value>Devices Changed</value>
  </data>
  <data name="ExportMacro" xml:space="preserve">
    <value>Export...</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Region.Description" xml:space="preserve">
    <value>Gets (if defined) or sets the region of the control or window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredNumber.Description" xml:space="preserve">
    <value>Returns a number previously stored using sp.StoreNumber or StrokesPlus.StoredValues.Numbers.Set</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredHistoryScripts.Name" xml:space="preserve">
    <value>DeleteAllStoredHistoryScripts</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDeleteSubKey.Parameters.baseKey.Description" xml:space="preserve">
    <value>RegistryKey representing the registry key where the keyName exists.</value>
  </data>
  <data name="ScriptHelpScriptObjectsDisplayTextInfoText" xml:space="preserve">
    <value>Used when calling sp.DisplayText()

    public class DisplayTextInfo
    {
        public string Title { get; set; }
        public string TitleAlignment { get; set; }
        public string Message { get; set; }
        public string MessageAlignment { get; set; }
        public int Duration { get; set; }
        public double Opacity { get; set; }
        public string Location { get; set; }
        public Font TitleFont { get; set; }
        public Font MessageFont { get; set; }
        public string BackColor { get; set; }
        public string ForeColor { get; set; }
        public int Padding { get; set; }
        public int FadeSteps { get; set; }
        public bool UsePrimaryScreen { get; set; }
        public bool ClipToWorkingArea { get; set; } = true;
    }</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderBy.Parameters.sortExpression.Description" xml:space="preserve">
    <value>Specifies the property name to sort by, and an optional space followed by "desc" to signal descending sort order.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ToggleTrayIcon.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredRectangle.Example.Simple" xml:space="preserve">
    <value>sp.DeleteStoredRectangle('test');</value>
  </data>
  <data name="tabGesturesRenameGestureAlreadyExistsMessage" xml:space="preserve">
    <value>Gesture name '{0}' already exists.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Example.Simple" xml:space="preserve">
    <value>.SendMessageSetTextObj(message, wParam, lParam, useAnsi);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ToggleTrayIcon.Name" xml:space="preserve">
    <value>ToggleTrayIcon</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Parameters.onlyNames.Description" xml:space="preserve">
    <value>If true, only return names, not the full path and name.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Maximized.Description" xml:space="preserve">
    <value>Returns true if the window is maximized.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendToBottom.Example.Simple" xml:space="preserve">
    <value>.SendToBottom()</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredPoint.Example.Simple" xml:space="preserve">
    <value>sp.DeleteStoredPoint('test');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleIsVisible.Name" xml:space="preserve">
    <value>ConsoleIsVisible</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCaretLocation.Description" xml:space="preserve">
    <value>Returns the location of the caret on the screen. If the location cannot be determined, returns null.</value>
  </data>
  <data name="ActionStepMethods.GetWindowFromClassOrTitle.HelpTip" xml:space="preserve">
    <value>Returns a SystemWindow object for a control or window based on the class name and/or title.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetCustomFloaterLocation.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetCustomFloaterLocation.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.message.Type" xml:space="preserve">
    <value>object (casts to uint)</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.message.Name" xml:space="preserve">
    <value>message</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHistoryScript.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Resizable.Description" xml:space="preserve">
    <value>Returns true if the window has the WS_THICKFRAME flag.</value>
  </data>
  <data name="FindReplaceFindAllHighlightMatches" xml:space="preserve">
    <value>Highlight Matches</value>
  </data>
  <data name="ActionStepMethods.ShowMainFloater.DisplayName" xml:space="preserve">
    <value>Show Main Floater</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsButtonDown.Parameters.button.Description" xml:space="preserve">
    <value>The mouse button to use for the event(s).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterHide.Example.Simple" xml:space="preserve">
    <value>sp.TouchFloaterHide();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetHistoryScript.Description" xml:space="preserve">
    <value>Returns a history script of the specified index. The last 5 scripts are stored in history and the index specifies which one to retrieve. The index is zero based, so 0 is the most recent script, 4 is the oldest script in history.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendClose.Example.Simple" xml:space="preserve">
    <value>.SendClose()</value>
  </data>
  <data name="ActionStepMethods.MouseRestrictActive.HelpTip" xml:space="preserve">
    <value>Returns true or false, indicating whether the mouse is being restricted via Mouse Restrict To Rectangle.</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ActionStepMethods.GetNumberOfItemsOnStack.HelpTip" xml:space="preserve">
    <value>Returns the number of items currently on the stack BEFORE this step is executed.</value>
  </data>
  <data name="FindReplaceMenuCarriageReturn" xml:space="preserve">
    <value>\r Carriage Return</value>
  </data>
  <data name="Command" xml:space="preserve">
    <value>Command</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetCustomFloaterLocation.Name" xml:space="preserve">
    <value>TouchFloaterSetCustomFloaterLocation</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SupportsSelection.Description" xml:space="preserve">
    <value>Returns true if the control supports selections via messaging (DLGC_HASSETSEL)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Parameters.showErrors.Description" xml:space="preserve">
    <value>Displays an error message box, if the action was not successful.</value>
  </data>
  <data name="tabPreferencesPlaySoundOnNoMatch" xml:space="preserve">
    <value>Play Sound on No Match</value>
  </data>
  <data name="VC2015RuntimeNotFoundTitle" xml:space="preserve">
    <value>Missing C++ Runtime</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredDecimals.HelpTip" xml:space="preserve">
    <value>Deletes all stored decimals.</value>
  </data>
  <data name="PlugInIncludePlugIn" xml:space="preserve">
    <value>Include Plug-In</value>
  </data>
  <data name="ScriptHelp.ActionMethod.AllDevices.Returns" xml:space="preserve">
    <value>List&lt;DeviceInfo&gt;</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Example.Simple" xml:space="preserve">
    <value>sp.CreateTimer('test', 1000, -1, String.raw`sp.MessageBox('Test', 'Timer');sp.DeleteTimer('test');`);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunStoreApp.Description" xml:space="preserve">
    <value>Takes a full or partial Store app package name and activates or runs it. If more than one match is found, the first match will be used. Note there is a slight delay due to enumerating all installed Store apps.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteTimer.Name" xml:space="preserve">
    <value>DeleteTimer</value>
  </data>
  <data name="SaveAccountTokenFileErrorTitle" xml:space="preserve">
    <value>Failed to Save File</value>
  </data>
  <data name="ScriptHelp.ActionMethod.OpenSettings.Example.Simple" xml:space="preserve">
    <value>sp.OpenSettings();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreObject.Description" xml:space="preserve">
    <value>Stores an object using the specified name.</value>
  </data>
  <data name="tabPreferencesDisableSingleTrayClick" xml:space="preserve">
    <value>Disable Tray Icon Single Click Toggle</value>
  </data>
  <data name="frmAccountLoginUserNameRequired" xml:space="preserve">
    <value>User Name is required.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PlaySound.Example.Simple" xml:space="preserve">
    <value>sp.PlaySound('C:\\Windows\\Media\\ding.wav');</value>
  </data>
  <data name="GesturePatternCannotDeleteMessage" xml:space="preserve">
    <value>You cannot delete all patterns. If you wish to delete this gesture, close this window and delete the gesture.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterCloseCustomFloater.Description" xml:space="preserve">
    <value>Close a custom floater by name. Only works if floaters are currently shown.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDeleteSubKey.Parameters.subKey.Description" xml:space="preserve">
    <value>Name of the subkey within the baseKey to delete.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredBool.Example.Simple" xml:space="preserve">
    <value>sp.DeleteStoredBool('test');</value>
  </data>
  <data name="ActionStepMethods.SetClipboardText.HelpTip" xml:space="preserve">
    <value>Puts the specified text on the clipboard.</value>
  </data>
  <data name="ActionStepMethods.GetScreenFromPoint.HelpTip" xml:space="preserve">
    <value>Returns the screen where the specified point exists.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPoint.Name" xml:space="preserve">
    <value>GetPoint</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MethodBuilder.AddMethodImplAttributes.Example.Simple" xml:space="preserve">
    <value>myMethodBuilder.AddMethodImplAttributes("clr.System.Reflection.MethodImplAttributes.Managed");</value>
  </data>
  <data name="ActionStepMethods.CloseCustomFloater.DisplayName" xml:space="preserve">
    <value>Close Custom Floater</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredBool.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyToggled.Parameters.name.Description" xml:space="preserve">
    <value>The VirtualKeyCode (vk.XX) value to check.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetActiveExplorerPath.Returns" xml:space="preserve">
    <value>string[]</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Parameters.includeFolders.Name" xml:space="preserve">
    <value>includeFolders</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Parameters.includeFolders.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Confirm.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CloseSettings.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCaretLocation.Example.Simple" xml:space="preserve">
    <value>var caretLoc = sp.GetCaretLocation();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.structName.Description" xml:space="preserve">
    <value>Name of the struct to create.</value>
  </data>
  <data name="StrokesPlusAlreadyRunningMessage" xml:space="preserve">
    <value>StrokesPlus.net is already running or obtaining the mutex "StrokesPlus.net" failed.

Exiting.</value>
  </data>
  <data name="tabPreferencesTextExpansionTokenBeforeClearDelay" xml:space="preserve">
    <value>Delay Before Clearing Token (ms)</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="FindReplaceMenuRegexAnyCharacter" xml:space="preserve">
    <value>. Any Character</value>
  </data>
  <data name="ActionStepMethods.GetPlaybackVolume.HelpTip" xml:space="preserve">
    <value>Returns the current volume level of the default playback mixer/device. (0 - 100)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenuEx.Description" xml:space="preserve">
    <value>Displays a context menu from which the user can select an item. This is an extended version of ShowPopupMenu that allows for more a complex menu structure and doesn't require a callback.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Parameters.startdelay.Description" xml:space="preserve">
    <value>Number of milliseconds until the timer starts.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.WindowBelow.Description" xml:space="preserve">
    <value>Gets the SystemWindow object for the window below.</value>
  </data>
  <data name="ActionStepMethods.StoreObject.DisplayName" xml:space="preserve">
    <value>Store Object</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPlaybackVolume.Name" xml:space="preserve">
    <value>GetPlaybackVolume</value>
  </data>
  <data name="ActionFileFilterName" xml:space="preserve">
    <value>StrokesPlus.net Action files|*.spactions</value>
  </data>
  <data name="ActionStepMethods.EndIf.DisplayName" xml:space="preserve">
    <value>End If</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ClientRectangle.Name" xml:space="preserve">
    <value>ClientRectangle</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ClientRectangle.Type" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyUp.Description" xml:space="preserve">
    <value>Simulates releasing the specified VirtualKeyCode.</value>
  </data>
  <data name="ScriptHelpCategoryNameOperatingSystem" xml:space="preserve">
    <value>Operating System</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleCopyUser.Description" xml:space="preserve">
    <value>Copies the User log from console window to the clipboard.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StopAllActionSteps.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionUp" xml:space="preserve">
    <value>U</value>
  </data>
  <data name="ScriptHelpCategoryTextOperatingSystem" xml:space="preserve">
    <value>Functions for working with the operating system.</value>
  </data>
  <data name="ActionStepMethods.GetBlueValueFromColor.HelpTip" xml:space="preserve">
    <value>Returns the value of the blue (B) from a Color structure.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RelayGesture.Parameters.button.Description" xml:space="preserve">
    <value>The mouse button to be pressed down at the start of points and released at the end.</value>
  </data>
  <data name="FindReplaceOptionsMatchCase" xml:space="preserve">
    <value>Match Case</value>
  </data>
  <data name="ActionStepMethods.GetCurrentMousePoint.HelpTip" xml:space="preserve">
    <value>Returns a point containing the corrdinates of the mouse cursor's location on the screen.</value>
  </data>
  <data name="AppDefinitionNoGlobalActions" xml:space="preserve">
    <value>No Global Actions</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.CommandLine.Description" xml:space="preserve">
    <value>Gets the command line for the process via WMI.</value>
  </data>
  <data name="ActionStepMethods.AppendText.DisplayName" xml:space="preserve">
    <value>Append Text</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterShow.Description" xml:space="preserve">
    <value>Shows the main floater.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StorePoint.Description" xml:space="preserve">
    <value>Stores a point using the specified name. Value can be retrieved via sp.GetStoredPoint.</value>
  </data>
  <data name="SettingsToolbarMacros" xml:space="preserve">
    <value>Macros</value>
  </data>
  <data name="ActionStepMethods.StopAllActionSteps.DisplayName" xml:space="preserve">
    <value>Stop All Action Steps</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Description" xml:space="preserve">
    <value>Displays a window which hosts a WebView2 control to display and make interactive HTML windows.</value>
  </data>
  <data name="TextExpansionTypeLabel" xml:space="preserve">
    <value>Method</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredRectangles.DisplayName" xml:space="preserve">
    <value>Delete All Stored Rectangles</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreObject.Name" xml:space="preserve">
    <value>StoreObject</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyUp.Name" xml:space="preserve">
    <value>SendKeyUp</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Refresh.Example.Simple" xml:space="preserve">
    <value>.Refresh()</value>
  </data>
  <data name="ScriptHelpScriptObjectsFloaterVarsText" xml:space="preserve">
    <value>Passed into floater events, variable name in script: floater

    public class FloaterVars
    {
        public string Name;
        public string Text;
        public Color TextColor;
        public bool KeyMode;
        public float Opacity;
        public Point Location; 
        public int X;
        public int Y;
        public CustomFloaterSetting Settings;
        public int Size;
    }</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimerScript.Parameters.name.Description" xml:space="preserve">
    <value>Name of the timer.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Parameters.color.Description" xml:space="preserve">
    <value>Specifies a color for the text in the console, otherwise uses default.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendString.Example.Simple" xml:space="preserve">
    <value>sp.SendString('This is a test');</value>
  </data>
  <data name="frmPasswordConfirmText" xml:space="preserve">
    <value>Please confirm your password to continue.

Sure is a lot of empty space here...
I didn't want to layout the form differently for the various text and text box combinations.

You're still reading this??</value>
  </data>
  <data name="UnloadScriptTab" xml:space="preserve">
    <value>Unload</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileProductVersionInfo.Example.Simple" xml:space="preserve">
    <value>var version = sp.GetFileProductVersionInfo('C:\\Windows\\Notepad.exe');</value>
  </data>
  <data name="ActionStepMethods.Add.HelpTip" xml:space="preserve">
    <value>Returns the sum of number1 and number2.</value>
  </data>
  <data name="NewApplicationName" xml:space="preserve">
    <value>New Application</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToScreen.Description" xml:space="preserve">
    <value>Moves the window to the specified screen number (index) as defined in Windows or Screen object, returns the new Screen.</value>
  </data>
  <data name="tabPreferencesFireOnWindowFocus" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Name" xml:space="preserve">
    <value>ConsoleWarning</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredNumber.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.GetFirstMoveableParentFromPointXY.HelpTip" xml:space="preserve">
    <value>Returns the first parent window which is moveable from the specified X,Y coordinates on the screen. This could be the main window or a tool window like a Find dialog.</value>
  </data>
  <data name="InsertStep" xml:space="preserve">
    <value>Insert Step</value>
  </data>
  <data name="TextExpansionTypeTextDescription" xml:space="preserve">
    <value>Sends the text using simulated keystrokes. This method is highly compatible, but can be slow for a large amount of text.</value>
  </data>
  <data name="SynchronizeAllSettings" xml:space="preserve">
    <value>Synchronize All Settings</value>
  </data>
  <data name="RequiresRestart" xml:space="preserve">
    <value>* Requires Restart</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Parameters.label.Type" xml:space="preserve">
    <value>string (optional)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Parameters.label.Name" xml:space="preserve">
    <value>label</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredRectangle.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredRectangle.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Movable.Name" xml:space="preserve">
    <value>Movable</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Movable.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunOrActivate.Parameters.exeName.Description" xml:space="preserve">
    <value>The full path and file name of the program to activate or open.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreDecimal.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldMarshalAs.Description" xml:space="preserve">
    <value>(optional) Array of System.Runtime.InteropServices.UnmanagedType for each of of the field names (same order and count).</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RectangleF.Example.Simple" xml:space="preserve">
    <value>.RectangleF</value>
  </data>
  <data name="tabGesturesMenuViewAllPatterns" xml:space="preserve">
    <value>View All Patterns</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyDown.Example.Simple" xml:space="preserve">
    <value>var isZKeyDown = sp.IsKeyDown(vk.VK_Z);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ReloadScriptEnginePool.Description" xml:space="preserve">
    <value>Stops all scripts and reloads the script engine pool.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMethod.Example.Simple" xml:space="preserve">
    <value>sp.GetMethod('GetMethod');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.BackgroundAlternateColor.Name" xml:space="preserve">
    <value>BackgroundAlternateColor</value>
  </data>
  <data name="ActionStepMethods.SetObjectPropertyByName.HelpTip" xml:space="preserve">
    <value>Assigns the value of the specified property or field of the object. Supports deep names (PropertyA.FieldB.PropertyC).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.CreateType.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.BackgroundAlternateColor.Type" xml:space="preserve">
    <value>Color struct (.NET, optional)</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Location.Example.Simple" xml:space="preserve">
    <value>.Location</value>
  </data>
  <data name="ScriptHelpCategoryNameNativeDynamic" xml:space="preserve">
    <value>Native and Dynamic</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.returnType.Name" xml:space="preserve">
    <value>returnType</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.returnType.Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleClearUser.Example.Simple" xml:space="preserve">
    <value>sp.ConsoleClearUser();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.LastFocusControl.Name" xml:space="preserve">
    <value>LastFocusControl</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Parameters.includeFolders.Description" xml:space="preserve">
    <value>If true, also include folders.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayTextClose.Description" xml:space="preserve">
    <value>Closes a popup previously displayed via sp.DisplayText.</value>
  </data>
  <data name="tabPreferencesScriptReplSectionLabel" xml:space="preserve">
    <value>Replacement Tokens</value>
  </data>
  <data name="ActionStepMethods.SwitchToNextApplication.HelpTip" xml:space="preserve">
    <value>Activates the next window in the stack.</value>
  </data>
  <data name="TextExpansionTypeScriptDescription" xml:space="preserve">
    <value>Executes a StrokesPlus.net steps sequence or script similar to those used by Actions. Note that when this is executed, no additional objects are passed in (e.g. action.Window wouldn't be available), so make sure your script uses the appropriate functions to get the objects with which you want to work.</value>
  </data>
  <data name="InsertParameter" xml:space="preserve">
    <value>Insert Parameters</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ColorKey.Description" xml:space="preserve">
    <value>Gets or sets the color key (transparent color) of the window, use Color.Transparent to remove the color key. Some applications behave erratically and cannot be clicked.</value>
  </data>
  <data name="AddHotkey" xml:space="preserve">
    <value>Add Hotkey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadLayout.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredDecimal.Name" xml:space="preserve">
    <value>DeleteStoredDecimal</value>
  </data>
  <data name="ActionStepMethods.Evaluate.DisplayName" xml:space="preserve">
    <value>Evaluate</value>
  </data>
  <data name="ActionStepMethodCategories.Explorer.DisplayName" xml:space="preserve">
    <value>Explorer</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.lParam.Description" xml:space="preserve">
    <value>The lParam value to post, casted to IntPtr.</value>
  </data>
  <data name="tabPreferencesDisableUpdateCheck" xml:space="preserve">
    <value>Disable Update Check</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.underlyingType.Name" xml:space="preserve">
    <value>underlyingType</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Rectangle.Description" xml:space="preserve">
    <value>Returns a Rectangle object for the position of the control or window on the screen, does not include window frame borders. Use .Position for relative location of controls and AbsoluteRectangle for full rectangle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.underlyingType.Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredBool.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RectangleF.Description" xml:space="preserve">
    <value>Returns a RectangleF (float) object for the position of the control or window on the screen, does not include window frame borders.</value>
  </data>
  <data name="ActionStepMethods.BreakIfExpression.DisplayName" xml:space="preserve">
    <value>Break If Expression</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSavedString.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.InputBox.Name" xml:space="preserve">
    <value>InputBox</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSavedString.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.enumName.Description" xml:space="preserve">
    <value>The name of the enum to create.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.forEach.Parameters.name.Description" xml:space="preserve">
    <value>Action (function) to perform on each item.</value>
  </data>
  <data name="TouchFloaterMenuChangeFloater" xml:space="preserve">
    <value>Change Floater</value>
  </data>
  <data name="ActionStepMethods.DeleteSavedString.HelpTip" xml:space="preserve">
    <value>Deletes a previously saved string using Save String, sp.SaveString, or StrokesPlus.SavedStrings.Set.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ToggleTrayIcon.Description" xml:space="preserve">
    <value>Toggles the visibility of the StrokesPlus.net tray icon.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Maximized.Example.Simple" xml:space="preserve">
    <value>.Maximized</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.enumName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.enumName.Name" xml:space="preserve">
    <value>enumName</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Activate.Name" xml:space="preserve">
    <value>Activate</value>
  </data>
  <data name="frmPasswordConfirmNewPassword" xml:space="preserve">
    <value>Confirm New Password</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleEnableTimestamps.Name" xml:space="preserve">
    <value>ConsoleEnableTimestamps</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.keyValue.Description" xml:space="preserve">
    <value>The name of the key to write.</value>
  </data>
  <data name="ActionStepMethods.StoreDecimal.HelpTip" xml:space="preserve">
    <value>Stores a decimal using the specified name. Value can be retrieved via GetStoredDecimal.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.HWnd.Description" xml:space="preserve">
    <value>Returns the handle to the control or window.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ClipToScreen.Description" xml:space="preserve">
    <value>Clips the window to the screen where the window resides.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredRectangle.Example.Simple" xml:space="preserve">
    <value>var storedrect = sp.GetStoredRectangle('test');</value>
  </data>
  <data name="FindReplaceMenuNumberGroup3" xml:space="preserve">
    <value>$3 Numbered Group #3</value>
  </data>
  <data name="FindReplaceMenuNumberGroup2" xml:space="preserve">
    <value>$2 Numbered Group #2</value>
  </data>
  <data name="FindReplaceMenuNumberGroup1" xml:space="preserve">
    <value>$1 Numbered Group #1</value>
  </data>
  <data name="FindReplaceMenuNumberGroup7" xml:space="preserve">
    <value>$7 Numbered Group #7</value>
  </data>
  <data name="FindReplaceMenuNumberGroup6" xml:space="preserve">
    <value>$6 Numbered Group #6</value>
  </data>
  <data name="FindReplaceMenuNumberGroup5" xml:space="preserve">
    <value>$5 Numbered Group #5</value>
  </data>
  <data name="FindReplaceMenuNumberGroup4" xml:space="preserve">
    <value>$4 Numbered Group #4</value>
  </data>
  <data name="FindReplaceMenuNumberGroup9" xml:space="preserve">
    <value>$9 Numbered Group #9</value>
  </data>
  <data name="FindReplaceMenuNumberGroup8" xml:space="preserve">
    <value>$8 Numbered Group #8</value>
  </data>
  <data name="tabPreferencesTextExpansionTriggerUseTab" xml:space="preserve">
    <value>Tab</value>
  </data>
  <data name="ActionStepMethods.GetTopLevelWindowFromPoint.HelpTip" xml:space="preserve">
    <value>Returns the top level (owner) window at the specified point on the screen.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterIsShown.Example.Simple" xml:space="preserve">
    <value>sp.TouchFloaterIsShown();</value>
  </data>
  <data name="GesturePatternCannotDeleteTitle" xml:space="preserve">
    <value>Unable to Delete</value>
  </data>
  <data name="ActionStepMethodCategories.ControlFlow.DisplayName" xml:space="preserve">
    <value>Control &amp; Flow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.callingConventions.Description" xml:space="preserve">
    <value>(optional) Comma-separated list of System.Reflection.CallingConventions</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyDown.Name" xml:space="preserve">
    <value>IsKeyDown</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.BringToFront.Example.Simple" xml:space="preserve">
    <value>.BringToFront()</value>
  </data>
  <data name="ActionStepMethodCategories.Arrays.DisplayName" xml:space="preserve">
    <value>Arrays</value>
  </data>
  <data name="WheelDown" xml:space="preserve">
    <value>Wheel Down</value>
  </data>
  <data name="ActionStepMethods.SetWindowAlwaysOnTop.HelpTip" xml:space="preserve">
    <value>Sets the always on top flag of the specified window (passed in as a SystemWindow type).</value>
  </data>
  <data name="NewHotkeyName" xml:space="preserve">
    <value>New Hotkey</value>
  </data>
  <data name="FloaterLayoutsRenameMessage" xml:space="preserve">
    <value>Enter a new name for the layout: </value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Parameters.lParam.Description" xml:space="preserve">
    <value>The lParam value to post, casted to IntPtr.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimerScript.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimerScript.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="tabPreferencesUseAfterActionScript" xml:space="preserve">
    <value>Enable After Action Automation</value>
  </data>
  <data name="ActionStepMethods.SwitchToNextApplication.DisplayName" xml:space="preserve">
    <value>Switch To Next Application</value>
  </data>
  <data name="LoadingWinEventHook" xml:space="preserve">
    <value>Loading win event hook...</value>
  </data>
  <data name="tabPreferencesStrokeButtonX1" xml:space="preserve">
    <value>X1</value>
  </data>
  <data name="tabPreferencesStrokeButtonX2" xml:space="preserve">
    <value>X2</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Description" xml:space="preserve">
    <value>Alias for TypeBuilder.DefineNestedType to simplify obtaining an instantiated System.Reflection.Emit.TypeBuilder object.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegateList.Returns" xml:space="preserve">
    <value>List&lt;KeyValuePair&lt;string,IntPtr&gt;&gt;</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredRectangle.Name" xml:space="preserve">
    <value>GetStoredRectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendUnicodeString.Parameters.str.Description" xml:space="preserve">
    <value>Sequence of characters to send.</value>
  </data>
  <data name="ActionStepMethods.GetWindowHeight.HelpTip" xml:space="preserve">
    <value>Returns the height of the specified window (passed in as a SystemWindow type)</value>
  </data>
  <data name="ActionStepMethodCategories.MultipleMonitors.DisplayName" xml:space="preserve">
    <value>Multiple Monitors</value>
  </data>
  <data name="ActionStepMethods.Disable.DisplayName" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="tabPreferencesHintBackColorButton" xml:space="preserve">
    <value>Change...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredHandles.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethodCategories.Strings.DisplayName" xml:space="preserve">
    <value>Strings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsButtonDown.Parameters.button.Name" xml:space="preserve">
    <value>button</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsButtonDown.Parameters.button.Type" xml:space="preserve">
    <value>MouseButtons</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Resizable.Example.Simple" xml:space="preserve">
    <value>.Resizable</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ChangeCulture.Parameters.cultureName.Name" xml:space="preserve">
    <value>cultureName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ChangeCulture.Parameters.cultureName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="FindReplaceMenuRegexAlphanumeric" xml:space="preserve">
    <value>\w Alphanumeric (\W Non-Alphanumeric)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayImage.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterCloseCustomFloater.Parameters.name.Description" xml:space="preserve">
    <value>Name of the custom floater to close.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayText.Name" xml:space="preserve">
    <value>DisplayText</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayTextUpdate.Parameters.info.Type" xml:space="preserve">
    <value>DisplayTextInfo</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterIsCustomFloaterLoaded.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayTextUpdate.Parameters.info.Name" xml:space="preserve">
    <value>info</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterIsCustomFloaterLoaded.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="WindowTitleGesturePatterns" xml:space="preserve">
    <value>Gesture Patterns</value>
  </data>
  <data name="tabPreferencesStrokeButtonNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="tabPreferencesStrokeButtonLeft" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Pause.Parameters.seconds.Description" xml:space="preserve">
    <value>The duration in seconds to wait.</value>
  </data>
  <data name="ScriptHelpCategoryTextInternal" xml:space="preserve">
    <value>Functions for working with StrokesPlus.net internals.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.IncludeBootstrapJQuery.Description" xml:space="preserve">
    <value>If true (and HTML is not the path to a file), includes Bootstrap 4 CSS/JS and jQuery 3.51 to the HTML document and inserts the HTML parameter value inside the &lt;body&gt; tag.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyDown.Parameters.ch.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="FindReplaceSearchSelection" xml:space="preserve">
    <value>Search Selection</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyDown.Parameters.ch.Name" xml:space="preserve">
    <value>ch</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Parameters.title.Name" xml:space="preserve">
    <value>title</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Parameters.title.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredDecimal.Name" xml:space="preserve">
    <value>GetStoredDecimal</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredPoint.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunStoreApp.Parameters.packageName.Description" xml:space="preserve">
    <value>The full or partial package name of the Store app.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredPoint.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="FindReplaceReplace" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="ScriptHelpCategoryTextTimers" xml:space="preserve">
    <value>Functions for working with timers.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHistoryScript.Description" xml:space="preserve">
    <value>Returns a history script previously stored using sp.StoreHistoryScript or StrokesPlus.StoredValues.HistoryScripts.Set</value>
  </data>
  <data name="ActionStepMethods.GetCurrentMouseCursor.HelpTip" xml:space="preserve">
    <value>Returns the name of the current mouse cursor style. NOTE: This will only compare against the standard Windows cursors as defined by the Microsoft 'Cursors Class' properties, e.g. 'AppStarting', 'Arrow', 'Hand', etc. Any custom cursors will not be recognized and the return value will be 'Unknown'.</value>
  </data>
  <data name="HTMLFormCallbackInvokeErrorMessage" xml:space="preserve">
    <value>Failed to invoke HTML Window callback.
Error: '{0}'</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Image.Description" xml:space="preserve">
    <value>Returns an image object of the window, similar to Alt+Print Screen.</value>
  </data>
  <data name="ActionStepMethods.SendShiftUp.HelpTip" xml:space="preserve">
    <value>Simulates releasing the left Shift key.</value>
  </data>
  <data name="LoadingSettingsImportExport" xml:space="preserve">
    <value>Initializing Import/Export section...</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Screen.Description" xml:space="preserve">
    <value>Gets the Screen object for the screen where the window currently resides.</value>
  </data>
  <data name="tabGlobalActionsTabName" xml:space="preserve">
    <value>Action List</value>
  </data>
  <data name="ActionStepMethods.GetStoredDecimal.DisplayName" xml:space="preserve">
    <value>Get Stored Decimal</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Returns" xml:space="preserve">
    <value>TypeBuilder</value>
  </data>
  <data name="LoadingSettingsPlugIns" xml:space="preserve">
    <value>Initializing Plug-Ins section...</value>
  </data>
  <data name="tabGlobalMouseEventsTabName" xml:space="preserve">
    <value>Mouse Events</value>
  </data>
  <data name="ActionStepMethods.Loop.DisplayName" xml:space="preserve">
    <value>Loop</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetPlaybackVolume.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="TouchFloaterMenuResetFloaters" xml:space="preserve">
    <value>Reset Floaters</value>
  </data>
  <data name="ActionStepMethods.Reload.HelpTip" xml:space="preserve">
    <value>Stops all scripts, timers, and reloads StrokesPlus.net.</value>
  </data>
  <data name="ActionEngineReflectionErrorMessage" xml:space="preserve">
    <value>Error executing action:</value>
  </data>
  <data name="FindReplaceOptionsWordStart" xml:space="preserve">
    <value>Word Start</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.FirstMoveableParent.Name" xml:space="preserve">
    <value>FirstMoveableParent</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.FirstMoveableParent.Type" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ActionStepMethods.StoreHandle.HelpTip" xml:space="preserve">
    <value>Stores a handle using the specified name. Value can be retrieved via GetStoredHandle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendModifiedVKeys.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="TrayMenuSynapticFourFingers" xml:space="preserve">
    <value>Synaptics: 4 Fingers</value>
  </data>
  <data name="ActionStepMethods.ShowMessageBox.HelpTip" xml:space="preserve">
    <value>Displays a simple message box with a title and message.</value>
  </data>
  <data name="tabPreferencesActivateMouseWheelWindowLabel" xml:space="preserve">
    <value>Activate Window Under Mouse Wheel</value>
  </data>
  <data name="ExclusionZoneUseRelativeToScreenPosition" xml:space="preserve">
    <value>Relative To Screen</value>
  </data>
  <data name="ImportFileButton" xml:space="preserve">
    <value>Import...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Example.Simple" xml:space="preserve">
    <value>sp.MouseWheel(new Point(100, 100), false, 120);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Exit.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.RemoveItemsFromStack.HelpTip" xml:space="preserve">
    <value>Removes the specified number of items from the stack.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Name" xml:space="preserve">
    <value>RunProgram</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeModule.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.SystemWindowMethod.AllScreens.Example.Simple" xml:space="preserve">
    <value>.AllScreens()</value>
  </data>
  <data name="ActionStepMethods.EvaluateAsBoolean.DisplayName" xml:space="preserve">
    <value>Evaluate As Boolean</value>
  </data>
  <data name="ActionStepMethods.RunStoreApp.HelpTip" xml:space="preserve">
    <value>Takes a full or partial Store app package name and activates or runs it. If more than one match is found, the first match will be used. Note there is a slight delay due to enumerating all installed Store apps.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreString.Name" xml:space="preserve">
    <value>StoreString</value>
  </data>
  <data name="LoadingSettingsApps" xml:space="preserve">
    <value>Initializing Applications section...</value>
  </data>
  <data name="LoadingSettingsHelp" xml:space="preserve">
    <value>Initializing Help section...</value>
  </data>
  <data name="tabPreferencesEnableMouseHookSubscription" xml:space="preserve">
    <value>Enable Mouse Hook Event Subscription</value>
  </data>
  <data name="ActionStepMethods.GetWindowRectangleFull.HelpTip" xml:space="preserve">
    <value>Returns a rectangle representing the window's (passed in as a SystemWindow type) rectangle, excluding borders. Use Get Window Full Rectangle to include the frame/border.</value>
  </data>
  <data name="tabPreferencesTabAdvanced" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="SettingsApplyCancelMessage" xml:space="preserve">
    <value>You have applied these settings, which allows you to try them out without saving them permanently.

Clicking Yes will lose any of these changes and restore the settings to what they were before you opened the Settings screen.

Are you sure you want to lose any changes you've made? </value>
  </data>
  <data name="ActionStepMethods.SetMouseCursor.HelpTip" xml:space="preserve">
    <value>Sets the specified system cursor to the cursor loaded from the specified file. This cursor is not saved, reloading Windows or calling sp.ShowMouseCursor() will revert to cursor defined in Control Panel.
	cursorType must be one of the following values: Arrow, IBeam, WaitCursor, Cross, UpArrow, SizeNWSE, SizeNESW, SizeWE, SizeNS, SizeAll, No, Hand, AppStarting, Help. 
	fileName must be .CUR or .ANI file type.</value>
  </data>
  <data name="MacroOptionsMinMouseDeltaLabel" xml:space="preserve">
    <value>Mouse Point Capture Distance</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredDecimal.Example.Simple" xml:space="preserve">
    <value>var storeddec = sp.GetStoredDecimal('test');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeys.Example.Simple" xml:space="preserve">
    <value>sp.SendKeys('^a');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredObject.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the object.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Text.Example.Simple" xml:space="preserve">
    <value>.Text</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictToRectangle.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Description" xml:space="preserve">
    <value>Posts a message to the control or window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PlayTemporaryMacro.Description" xml:space="preserve">
    <value>Plays the last temporary macro. If you use this in a hotkey, you should add a sp.Sleep(1000); before calling this function to ensure you release the hotkeys before the macro starts or the keys could be stuck in the down state, or send the key up events for the keys used in the hotkey as shown in the full example.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Parameters.script.Name" xml:space="preserve">
    <value>script</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Parameters.script.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelpCategoryNameRegistry" xml:space="preserve">
    <value>Registry</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Parameters.horizontal.Description" xml:space="preserve">
    <value>If true, the wheel event is sent as a horizontal scroll, otherwise vertical is used.</value>
  </data>
  <data name="ActionStepMethods.InvokeObjectMethodByName.HelpTip" xml:space="preserve">
    <value>Invokes the specified method of the object, passing in the list of supplied parameters.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ToggleCommunicationsMute.Example.Simple" xml:space="preserve">
    <value>sp.ToggleCommunicationsMute();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileVersionInfo.Name" xml:space="preserve">
    <value>GetFileVersionInfo</value>
  </data>
  <data name="ScriptHelp.ActionMethod.InputBox.Example.Simple" xml:space="preserve">
    <value>var inputBoxInfo = new InputBoxInfo();
inputBoxInfo.Title = 'Title text';
inputBoxInfo.Message = 'Test';
inputBoxInfo.Items.Add('Test Item');
inputBoxInfo.AllowDirectInput = true;
inputBoxInfo.Sort = true;
inputBoxInfo.ShowAtMouseCursor = true;
var res = sp.InputBox(inputBoxInfo);
if(res != null) {
	sp.MessageBox(res, 'Result');
}
</value>
  </data>
  <data name="tabPreferencesCancelDelayLabel" xml:space="preserve">
    <value>Cancel Delay (ms)</value>
  </data>
  <data name="ActionStepMethods.GetSavedString.DisplayName" xml:space="preserve">
    <value>Get Saved String</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.structName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="EnterOrSelectValue" xml:space="preserve">
    <value>Enter Or Select Value</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.structName.Name" xml:space="preserve">
    <value>structName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimer.Description" xml:space="preserve">
    <value>Returns a timer previously created via sp.CreateTimer.</value>
  </data>
  <data name="ActionStepMethods.MouseClickXY.DisplayName" xml:space="preserve">
    <value>Mouse Click X,Y</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Example.Simple" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHandle.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHandle.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadLayout.Parameters.name.Description" xml:space="preserve">
    <value>Name of the floater layout to load.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.BackgroundColor.Type" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.BackgroundColor.Name" xml:space="preserve">
    <value>BackgroundColor</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromPoint.Description" xml:space="preserve">
    <value>Returns a SystemWindow object of a control or window (based on topLevelOnly parameter) from a point (coordinate) on the screen</value>
  </data>
  <data name="TrayMenuDrawGestures" xml:space="preserve">
    <value>Draw Gestures</value>
  </data>
  <data name="LoadingStoppingKeyboardHook" xml:space="preserve">
    <value>Stopping keyboard hook...</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.CheckState.Description" xml:space="preserve">
    <value>Whether this control, which is a check box or radio button, is checked.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Parameters.title.Description" xml:space="preserve">
    <value>Title of the balloon/toast popup.</value>
  </data>
  <data name="TrayMenuSyncSettings" xml:space="preserve">
    <value>Synchronize Settings...</value>
  </data>
  <data name="V8LoadErrorTitle" xml:space="preserve">
    <value>Error Loading Script Engine</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredDecimal.DisplayName" xml:space="preserve">
    <value>Delete Stored Decimal</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreObject.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.LegacyModuleName.Example.Simple" xml:space="preserve">
    <value>.LegacyModuleName</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.IsDescendantOf.Parameters.ancestor.Description" xml:space="preserve">
    <value>The SystemWindow object to search through children.</value>
  </data>
  <data name="tabPreferencesHintActionFontNameLabel" xml:space="preserve">
    <value>Action Font</value>
  </data>
  <data name="ScriptHelp.ActionMethod.LastApplication.Description" xml:space="preserve">
    <value>Activates the last active, non-minimized window, similar to Alt+Tab</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindowExecuteScriptAsync.Parameters.Script.Name" xml:space="preserve">
    <value>Script</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindowExecuteScriptAsync.Parameters.Script.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="MacroCopyExecuteScript" xml:space="preserve">
    <value>Copy Execution Script</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExpandEnvironmentVariables.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredNumber.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredNumber.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayImage.Parameters.allowScrollZooming.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayImage.Parameters.allowScrollZooming.Name" xml:space="preserve">
    <value>allowScrollZooming</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Highlight.Name" xml:space="preserve">
    <value>Highlight</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendString.Description" xml:space="preserve">
    <value>Simulates sending a sequence of characters.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.structLayout.Description" xml:space="preserve">
    <value>(optional) Custom string array to combine TypeAttribute and StructLayoutAttribute values (either set can be omitted). Example: ['Explicit,Unicode','Size=8,Pack=4']</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Parameters.includeLinks.Description" xml:space="preserve">
    <value>If true, also include link items.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.typeAttributes.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.typeAttributes.Name" xml:space="preserve">
    <value>typeAttributes</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadCustomFloater.Parameters.name.Description" xml:space="preserve">
    <value>Name of the custom floater to load.</value>
  </data>
  <data name="TextExpansionDescription" xml:space="preserve">
    <value>When you type the token and press the trigger key defined in Options, the token will be backspaced and replaced via the selected method.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMacroScript.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Visible.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Parameters.message.Name" xml:space="preserve">
    <value>message</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Visible.Name" xml:space="preserve">
    <value>Visible</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Parameters.message.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ForegroundWindow.Returns" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="TextExpansionNoRTFTitle" xml:space="preserve">
    <value>Invalid Format</value>
  </data>
  <data name="tabPreferencesExternalScriptButton" xml:space="preserve">
    <value>Browse...</value>
  </data>
  <data name="TouchFloaterMenuCloseFloater" xml:space="preserve">
    <value>Close Floater</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleClearAll.Example.Simple" xml:space="preserve">
    <value>sp.ConsoleClearAll();</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.IsDescendantOf.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="WindowTitleSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldOffsets.Description" xml:space="preserve">
    <value>(optional) Comma-separated list of System.Reflection.FieldAttribute for each of of the field names (same order and count).</value>
  </data>
  <data name="LoadScriptsErrorTitle" xml:space="preserve">
    <value>Load Automation Failed</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.TopMost.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimer.Parameters.name.Description" xml:space="preserve">
    <value>Name of the timer.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.TopMost.Name" xml:space="preserve">
    <value>TopMost</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMethod.Returns" xml:space="preserve">
    <value>System.Reflection.MethodInfo</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RootWindow.Type" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RootWindow.Name" xml:space="preserve">
    <value>RootWindow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineType.Name" xml:space="preserve">
    <value>ModuleBuilder.DefineType</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredValues.Name" xml:space="preserve">
    <value>DeleteAllStoredValues</value>
  </data>
  <data name="ActionStepMethods.MoveWindowToScreen.HelpTip" xml:space="preserve">
    <value>Moves the window to the specified screen number or Screen object and returns the destination Screen object. The screenNumber parameter is based on the screen index returned by GetAllScreens or a Screen object, such as the return from Get Screen From Point.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Returns" xml:space="preserve">
    <value>RectRegion[]</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetKeyState.Parameters.name.Type" xml:space="preserve">
    <value>VirtualKeyCode</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetKeyState.Parameters.name.Name" xml:space="preserve">
    <value>vk</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllTimers.Description" xml:space="preserve">
    <value>Stops and deletes all timers created via sp.CreateTimer.</value>
  </data>
  <data name="ActionStepMethods.PlaySound.HelpTip" xml:space="preserve">
    <value>Plays a .wav file. Does not support other sound formats.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetKeyState.Example.Simple" xml:space="preserve">
    <value>var isShiftDown = sp.GetKeyState(vk.SHIFT) &amp; 0x8000</value>
  </data>
  <data name="ScriptHelpCategoryNameRegions" xml:space="preserve">
    <value>Regions</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredObject.HelpTip" xml:space="preserve">
    <value>Deletes an object previously stored using StoreObject or StrokesPlus.StoredValues.Objects.Set</value>
  </data>
  <data name="ActionStepMethods.Subtract.HelpTip" xml:space="preserve">
    <value>Returns the value of number2 subtracted from number1.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayTextUpdate.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="LoadingSavingSettings" xml:space="preserve">
    <value>Saving settings...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.kind.Description" xml:space="preserve">
    <value>The type of value to store, valid options: binary, dword, expandstring, multistring, none, qword, string, unknown.</value>
  </data>
  <data name="ActionStepMethods.SendVirtualKey.HelpTip" xml:space="preserve">
    <value>Simulates pressing and releasing the specified key.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetCustomFloaterLocation.Description" xml:space="preserve">
    <value>Move a custom floater to a new location. Only works if floaters are currently shown.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.CreateType.Description" xml:space="preserve">
    <value>Alias for ModuleBuilder.DefineType to simplify obtaining an instantiated System.Reflection.Emit.TypeBuilder object. This creates a finalized type, so it cannot be altered, only added to via nested elements.</value>
  </data>
  <data name="LoadingSettingsFloaters" xml:space="preserve">
    <value>Initializing Floaters section...</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.WindowBelow.Name" xml:space="preserve">
    <value>WindowBelow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimer.Name" xml:space="preserve">
    <value>GetTimer</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.WindowBelow.Type" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="NewApplicationDefaultCategoryName" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="ActionStepMethods.GetWindowRectangleFull.DisplayName" xml:space="preserve">
    <value>Get Window Rectangle Full</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredRectangle.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.BringToFront.Name" xml:space="preserve">
    <value>BringToFront</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredRectangle.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ActionStepMethods.SetWindowLocation.DisplayName" xml:space="preserve">
    <value>Set Window Location</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.MultiSelect.Description" xml:space="preserve">
    <value>If true, allows multiple selections using space bar or mouse clicks.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Parameters.text.Description" xml:space="preserve">
    <value>Message of the balloon/toast popup.</value>
  </data>
  <data name="FindReplaceSpecialCharToolTip" xml:space="preserve">
    <value>Show a list of extended characters</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredNumbers.DisplayName" xml:space="preserve">
    <value>Delete All Stored Numbers</value>
  </data>
  <data name="X1ClickTab" xml:space="preserve">
    <value>X1 Click</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCurrentMouseCursor.Name" xml:space="preserve">
    <value>GetCurrentMouseCursor</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineType.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.ConsumePhysicalInput.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Name" xml:space="preserve">
    <value>RegistryWrite</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ForegroundWindow.Name" xml:space="preserve">
    <value>ForegroundWindow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Parameters.returnType.Name" xml:space="preserve">
    <value>returnType</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Parameters.returnType.Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="MacroOptionsShowRecordClearWarningCheck" xml:space="preserve">
    <value>Show overwrite script warning</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.fileName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="TrayMenuLogout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SupportsSelection.Name" xml:space="preserve">
    <value>SupportsSelection</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreBool.Name" xml:space="preserve">
    <value>StoreBool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.fileName.Name" xml:space="preserve">
    <value>fileName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsumePhysicalInput.Parameters.bVal.Description" xml:space="preserve">
    <value>True to consume all input, false to allow input.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredBools.Description" xml:space="preserve">
    <value>Deletes all stored booleans.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendAltUp.Description" xml:space="preserve">
    <value>Simulates releasing the left Alt key.</value>
  </data>
  <data name="ActionStepMethods.MouseRestrictToRectangle.DisplayName" xml:space="preserve">
    <value>Mouse Restrict To Rectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.structLayout.Name" xml:space="preserve">
    <value>structLayout</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.structLayout.Type" xml:space="preserve">
    <value>string[]</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.baseKey.Description" xml:space="preserve">
    <value>RegistryKey representing the registry key where the keyName exists.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteSavedString.Name" xml:space="preserve">
    <value>DeleteSavedString</value>
  </data>
  <data name="JournalTab" xml:space="preserve">
    <value>Journal</value>
  </data>
  <data name="CustomFloaterFileFilterName" xml:space="preserve">
    <value>StrokesPlus Floater files|*.spfloaters</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCommunicationsMixer.Example.Simple" xml:space="preserve">
    <value>var commMixer = sp.GetCommunicationsMixer();</value>
  </data>
  <data name="tabPreferencesRockerSupportLabel" xml:space="preserve">
    <value>Rocker Support</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.AllChildWindows.Example.Simple" xml:space="preserve">
    <value>.AllChildWindows</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Parameters.color.Name" xml:space="preserve">
    <value>color</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Parameters.color.Type" xml:space="preserve">
    <value>Color struct (.NET, optional)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Parameters.up.Description" xml:space="preserve">
    <value>Simulate releasing the specified mouse button. Pass down and up as true to simulate a full click.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendModifiedVKeys.Parameters.Keys.Name" xml:space="preserve">
    <value>Keys</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendModifiedVKeys.Parameters.Keys.Type" xml:space="preserve">
    <value>dynamic</value>
  </data>
  <data name="ActionStepMethods.SwitchToLastApplication.DisplayName" xml:space="preserve">
    <value>Switch To Last Application</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendUnicodeString.Parameters.str.Name" xml:space="preserve">
    <value>str</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendUnicodeString.Parameters.str.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredPoint.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the point.</value>
  </data>
  <data name="EnterNotes" xml:space="preserve">
    <value>Enter notes here</value>
  </data>
  <data name="frmAppOKButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Parameters.timeout.Type" xml:space="preserve">
    <value>object (casted to int)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Parameters.timeout.Name" xml:space="preserve">
    <value>timeout</value>
  </data>
  <data name="PlugInExcludePlugIn" xml:space="preserve">
    <value>Exclude Plug-In</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Name" xml:space="preserve">
    <value>GetItemsInExplorer</value>
  </data>
  <data name="LoadingStoppingExecution" xml:space="preserve">
    <value>Stopping execution...</value>
  </data>
  <data name="InsertHotkey" xml:space="preserve">
    <value>Insert Hotkey</value>
  </data>
  <data name="tabGlobalLoadUnloadTabName" xml:space="preserve">
    <value>Load/Unload</value>
  </data>
  <data name="TextExpansionTypeTextViaReplace" xml:space="preserve">
    <value>Text via Replace</value>
  </data>
  <data name="ScriptHelpCategoryNameKeystrokes" xml:space="preserve">
    <value>Keystrokes</value>
  </data>
  <data name="AppDefinitionSynchronize" xml:space="preserve">
    <value>Synchronize</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreRectangle.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the rectangle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredDecimal.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the decimal.</value>
  </data>
  <data name="tabPreferencesHintShowDelayLabel" xml:space="preserve">
    <value>Show Hint Delay (ms)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredRectangle.Description" xml:space="preserve">
    <value>Deletes a rectangle previously stored using sp.StoreRectangle or StrokesPlus.StoredValues.Rectangles.Set</value>
  </data>
  <data name="ScriptHelpCategoryTextKeystrokes" xml:space="preserve">
    <value>Functions for sending keystrokes.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Parameters.point.Description" xml:space="preserve">
    <value>The point to use when determining the region in which the point exists within the rectangle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Parameters.baseKey.Description" xml:space="preserve">
    <value>RegistryKey representing the registry key where the keyName exists.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromPoint.Parameters.topLevelOnly.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromPoint.Parameters.topLevelOnly.Name" xml:space="preserve">
    <value>topLevelOnly</value>
  </data>
  <data name="ActionStepMethods.SetClipboardText.DisplayName" xml:space="preserve">
    <value>Set Clipboard Text</value>
  </data>
  <data name="tabPreferencesTouchDisableAltFloater" xml:space="preserve">
    <value>Disable Alt Floater</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendToBottom.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ChangeCulture.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="AddApplication" xml:space="preserve">
    <value>Add Application</value>
  </data>
  <data name="ActionStepMethods.GetSavedString.HelpTip" xml:space="preserve">
    <value>Returns a string previously saved using Save String, sp.SaveString, or StrokesPlus.SavedStrings.Set</value>
  </data>
  <data name="LoadAccountTokenErrorMessage" xml:space="preserve">
    <value>An error occurred trying to load the account file for this computer/user. Either the file is not accessible or failed to decrypt.</value>
  </data>
  <data name="tabPreferencesEnableAccountValidationConnectionError" xml:space="preserve">
    <value>Show Login Error Message</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldMarshalAs.Type" xml:space="preserve">
    <value>UnmanagedType[]</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldMarshalAs.Name" xml:space="preserve">
    <value>fieldMarshalAs</value>
  </data>
  <data name="EnterHintText" xml:space="preserve">
    <value>Enter hint text here</value>
  </data>
  <data name="frmSelectGestureNewButton" xml:space="preserve">
    <value>New Gesture...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.typeAttributes.Description" xml:space="preserve">
    <value>(optional) Comma-separated list of TypeAtrtribute for the enum.</value>
  </data>
  <data name="tabPreferencesActivateWindowUseRootParent" xml:space="preserve">
    <value>Always Use Root Window</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredRectangles.Description" xml:space="preserve">
    <value>Deletes all stored rectangles.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyUp.Example.Simple" xml:space="preserve">
    <value>sp.SendKeyUp('a');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.OpenSettings.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="TrayMenuUseMiddle" xml:space="preserve">
    <value>Mouse Button: Middle</value>
  </data>
  <data name="ActionDefaultGestureLinkText" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="LoadingInitializingDrawingSurface" xml:space="preserve">
    <value>Initializing drawing surface...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EmptyRecycleBins.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="TrayCaptionDisabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.IsUnicode.Description" xml:space="preserve">
    <value>Returns true if the windows is flagged as Unicode.</value>
  </data>
  <data name="HotkeyActiveLabel" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Returns" xml:space="preserve">
    <value>string[]</value>
  </data>
  <data name="CustomSettingsFileNotFoundMessage" xml:space="preserve">
    <value>Custom settings file not found, using default rules.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHandle.Description" xml:space="preserve">
    <value>Returns an handle previously stored using sp.StoreHandle or StrokesPlus.StoredValues.Handles.Set</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.IsImmersive.Example.Simple" xml:space="preserve">
    <value>.IsImmersive</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetKeyState.Parameters.name.Description" xml:space="preserve">
    <value>The VirtualKeyCode (vk.XX) value to get the state for.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Confirm.Parameters.title.Type" xml:space="preserve">
    <value>object (casted to string)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.Confirm.Parameters.title.Name" xml:space="preserve">
    <value>title</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyDown.Example.Simple" xml:space="preserve">
    <value>sp.SendVKeyDown(vk.CONTROL);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.Create.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredValues.Description" xml:space="preserve">
    <value>Deletes all stored values of all types.</value>
  </data>
  <data name="ActionStepMethodCategories.StoreRetrieveValues.DisplayName" xml:space="preserve">
    <value>Store &amp; Retrieve Values</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.arguments.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.arguments.Name" xml:space="preserve">
    <value>arguments</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMethods.Description" xml:space="preserve">
    <value>Returns an array of MethodInfo for all sp functions.</value>
  </data>
  <data name="ScriptHelpCategoryNameExtensions" xml:space="preserve">
    <value>Extensions</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetActiveExplorerPath.Description" xml:space="preserve">
    <value>Returns a string containing path of the specified Explorer window.</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetMouseCursor.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelpCategoryNameUtilities" xml:space="preserve">
    <value>Utilities</value>
  </data>
  <data name="Maximized" xml:space="preserve">
    <value>Maximized</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.baseKey.Name" xml:space="preserve">
    <value>baseKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyUp.Parameters.vk.Name" xml:space="preserve">
    <value>vk</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.baseKey.Type" xml:space="preserve">
    <value>RegistryKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyUp.Parameters.vk.Type" xml:space="preserve">
    <value>VirtualKeyCode</value>
  </data>
  <data name="ActionStepMethods.OpenURL.HelpTip" xml:space="preserve">
    <value>Opens the URL in the default web browser.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Parameters.interval.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Parameters.interval.Name" xml:space="preserve">
    <value>interval</value>
  </data>
  <data name="ExclusionZoneVerticalWheelEvents" xml:space="preserve">
    <value>Vertical Mouse Wheel Scroll Events</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredStrings.DisplayName" xml:space="preserve">
    <value>Delete All Stored Strings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredNumber.Name" xml:space="preserve">
    <value>GetStoredNumber</value>
  </data>
  <data name="TrayMenuUseLeft" xml:space="preserve">
    <value>Mouse Button: Left</value>
  </data>
  <data name="TrayMenuUseNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ActionStepMethods.MouseWheel.DisplayName" xml:space="preserve">
    <value>Mouse Wheel</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitlePartial.Example.Simple" xml:space="preserve">
    <value>var notepadmatches = sp.WindowsFromTitlePartial('notepad');</value>
  </data>
  <data name="frmPasswordTitle" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredPoints.Example.Simple" xml:space="preserve">
    <value>sp.DeleteAllStoredPoints();</value>
  </data>
  <data name="ActionStepMethods.GetWindowsFromTitlePartial.DisplayName" xml:space="preserve">
    <value>Get Windows From Title Partial</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.BringToFront.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="tabPreferencesHintAppFontButton" xml:space="preserve">
    <value>Font...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldMarshalArg.Type" xml:space="preserve">
    <value>int[]</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldMarshalArg.Name" xml:space="preserve">
    <value>fieldMarshalArg</value>
  </data>
  <data name="ConsoleSetColorsMenu" xml:space="preserve">
    <value>Set Colors...</value>
  </data>
  <data name="tabPreferencesTextExpansionClipboardRestoreDelay" xml:space="preserve">
    <value>Clipboard Restore Delay (ms)</value>
  </data>
  <data name="ActionStepMethods.Divide.HelpTip" xml:space="preserve">
    <value>Returns the value of number1 divided by number2.</value>
  </data>
  <data name="ActionStepMethods.ElseIfExpression.HelpTip" xml:space="preserve">
    <value>Evaluates the expression, if true then the steps following the ElseIfExpression are executed. If false, any ElseIf steps within the If block will be evaluated and executed where appropriate. Otherwise the steps within the Else block will be executed, if it exists. Use '{stackTake}' and '{stackLeave}' to use values on the stack, pulling them off or leaving respectively (from left to right). Search Microsoft DataColumn.Expression for details on syntax.</value>
  </data>
  <data name="MethodInvokeParameters" xml:space="preserve">
    <value>Method Invoke Parameters</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCaretLocation.Returns" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPoint.Example.Simple" xml:space="preserve">
    <value>sp.GetPoint(100, 100);</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendClose.Name" xml:space="preserve">
    <value>SendClose</value>
  </data>
  <data name="ActionStepMethods.GetTopLevelWindowFromPointXY.DisplayName" xml:space="preserve">
    <value>Get Top Level Window From Point X,Y</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterHide.Description" xml:space="preserve">
    <value>Hides the floaters.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredPoint.Name" xml:space="preserve">
    <value>DeleteStoredPoint</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EmptyRecycleBins.Description" xml:space="preserve">
    <value>Empties ALL recycle bins.</value>
  </data>
  <data name="ActionStepMethods.GetWindowMainModuleFilePath.HelpTip" xml:space="preserve">
    <value>Returns a string containing the window's (passed in as a SystemWindow type) main module name (usually the .EXE file), including the full path.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Run.Parameters.command.Name" xml:space="preserve">
    <value>command</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterCloseCustomFloater.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Run.Parameters.command.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterCloseCustomFloater.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredHandles.Description" xml:space="preserve">
    <value>Deletes all stored handles.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetHistoryScript.Name" xml:space="preserve">
    <value>GetHistoryScript</value>
  </data>
  <data name="ActionTypeScriptEngine" xml:space="preserve">
    <value>Use Script</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayTextClose.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ConsoleWindowTitle" xml:space="preserve">
    <value>Console</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RelayGesture.Name" xml:space="preserve">
    <value>RelayGesture</value>
  </data>
  <data name="ScriptHelpScriptObjectsActionVarsText" xml:space="preserve">
    <value>Passed into normal actions, variable name in script: action

    public class ActionVars
    {
        public string ApplicationName;
        public string CategoryName;
        public string ActionName;
        public string GestureName;
        public MouseButtons StrokeButton;
        public int SynapticFingers; 
        public Point[] GesturePoints;
        public int WheelDelta;
        public Point Start;
        public Point End;
        public Rectangle Bounds;
        //see SystemWindow information for more details
        public SystemWindow Window;
        //see SystemWindow information for more details
        public SystemWindow Control;
    }</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Minimized.Example.Simple" xml:space="preserve">
    <value>.Minimized</value>
  </data>
  <data name="FindReplaceOptionsCompiled" xml:space="preserve">
    <value>Compiled</value>
  </data>
  <data name="FindReplaceFindAllLabel" xml:space="preserve">
    <value>Find All</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExpandEnvironmentVariables.Name" xml:space="preserve">
    <value>ExpandEnvironmentVariables</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Restore.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Parameters.message.Name" xml:space="preserve">
    <value>message</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Parameters.message.Type" xml:space="preserve">
    <value>object (casts to uint)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DesktopWindow.Description" xml:space="preserve">
    <value>Returns a SystemWindow object for the Desktop window. This is the actual desktop window, not necessarily the window which contains the desktop icons. See also sp.DesktopWindowListView().</value>
  </data>
  <data name="ImportConfirmMessage" xml:space="preserve">
    <value>Are you sure you want to import the selected items above?

This cannot be reversed, so make sure you exported a backup first.

If you click Yes, the settings will be applied and the window will close to reload StrokesPlus.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDeleteSubKey.Parameters.subKey.Name" xml:space="preserve">
    <value>subKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDeleteSubKey.Parameters.subKey.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreRectangle.Parameters.value.Type" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreRectangle.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="Modifiers" xml:space="preserve">
    <value>Modifiers</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreString.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreString.Parameters.value.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Name" xml:space="preserve">
    <value>ConsoleLog</value>
  </data>
  <data name="GenericDeleteConfirmTitle" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Confirm.Parameters.message.Description" xml:space="preserve">
    <value>Title of the message box window.</value>
  </data>
  <data name="UpdateCheckRunErrorMessage" xml:space="preserve">
    <value>Failed to start the update. Please download manually.</value>
  </data>
  <data name="TrayCaptionSafeMode" xml:space="preserve">
    <value>Safe Mode</value>
  </data>
  <data name="ActionStepMethods.StoreHandle.DisplayName" xml:space="preserve">
    <value>Store Handle</value>
  </data>
  <data name="FindReplaceReplacePrevious" xml:space="preserve">
    <value>Replace Previous</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllTimers.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeModule.Name" xml:space="preserve">
    <value>NativeModule</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCaptureMixer.Description" xml:space="preserve">
    <value>Returns a AudioSwitcher.AudioApi.CoreAudio.CoreAudioDevice object which allows controlling the default capture (record) mixer/device.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Name" xml:space="preserve">
    <value>TypeBuilder.NewMethod</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendString.Name" xml:space="preserve">
    <value>SendString</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ClipToScreen.Example.Simple" xml:space="preserve">
    <value>.ClipToScreen()</value>
  </data>
  <data name="ActionStepMethods.GetSelectedFilesOnDesktop.DisplayName" xml:space="preserve">
    <value>Get Selected Files On Desktop</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleEnableTimestamps.Description" xml:space="preserve">
    <value>Enables or disables timestamps being added to console logging entries.</value>
  </data>
  <data name="ScriptHelpCategoryNameMedia" xml:space="preserve">
    <value>Media</value>
  </data>
  <data name="ScriptHelpCategoryNameMouse" xml:space="preserve">
    <value>Mouse</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCurrentCulture.Name" xml:space="preserve">
    <value>GetCurrentCulture</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Title.Description" xml:space="preserve">
    <value>Gets or sets the title/text of the control or window.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ColorKey.Type" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ColorKey.Name" xml:space="preserve">
    <value>ColorKey</value>
  </data>
  <data name="FindReplaceOptionsWholeWord" xml:space="preserve">
    <value>Whole Word</value>
  </data>
  <data name="tabPreferencesHintLocationCustomLabel" xml:space="preserve">
    <value>X,Y:</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleEnableTimestamps.Example.Simple" xml:space="preserve">
    <value>sp.ConsoleEnableTimestamps(true);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyToggled.Parameters.name.Type" xml:space="preserve">
    <value>VirtualKeyCode</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendString.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyToggled.Parameters.name.Name" xml:space="preserve">
    <value>vk</value>
  </data>
  <data name="ActionEngineMethodParameterAssignmentErrorMessage" xml:space="preserve">
    <value>Failure while calling: 
Assembly: '{0}' 
Type: '{1}' 
Method: '{2}'. 
Parameter : '{3}' 
Error: {4}</value>
  </data>
  <data name="ActionStepMethods.GetPlaybackVolume.DisplayName" xml:space="preserve">
    <value>Get Playback Volume</value>
  </data>
  <data name="ActionStepMethods.GetWindowLocationX.HelpTip" xml:space="preserve">
    <value>Returns the window's (passed in as a SystemWindow type) location along the X axis in screen coordinates.</value>
  </data>
  <data name="ActionStepMethods.DisplayText.DisplayName" xml:space="preserve">
    <value>Display Text</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Description" xml:space="preserve">
    <value>Returns a RectRegion based on the location of the point within the rectangle passed in, which is divided into regions based on the number of columns and rows specified. This could be used to have a action perform different logic based on the location of a point within the area of the screen or application window, for example.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Returns" xml:space="preserve">
    <value>System.Threading.Timer</value>
  </data>
  <data name="ScriptHelpCategoryNameFiles" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.BringToFront.Description" xml:space="preserve">
    <value>Sets the window as the foregroup window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Description" xml:space="preserve">
    <value>Displays a balloon tool window or a toast style notification popup depending on the version of Windows. NOTE: This functionality can be overridden or prevented based on Windows settings and rules that govern notifications.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseMove.Parameters..Description" xml:space="preserve">
    <value>The location to move the mouse cursor to. Can be an existing point like 'action.Start' or a custom one using 'new Point(x, y).</value>
  </data>
  <data name="ActionStepMethods.GetStoredObject.HelpTip" xml:space="preserve">
    <value>Returns an object previously stored using StoreObject or StrokesPlus.StoredValues.Objects.Set</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HideMouseCursor.Example.Simple" xml:space="preserve">
    <value>sp.HideMouseCursor();</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenFromPoint.Example.Simple" xml:space="preserve">
    <value>.ScreenFromPoint(new Point(100,100));</value>
  </data>
  <data name="ActionStepMethods.SetForegroundWindow.DisplayName" xml:space="preserve">
    <value>Set Foreground Window</value>
  </data>
  <data name="tabPreferencesPenColorChange" xml:space="preserve">
    <value>Change...</value>
  </data>
  <data name="LoadingResettingTray" xml:space="preserve">
    <value>Resetting tray icon...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Exit.Name" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.GetRootOwnerWindow.Description" xml:space="preserve">
    <value>Returns a SystemWindow object for the root owner control or window.</value>
  </data>
  <data name="UpdateCheckPromptTitle" xml:space="preserve">
    <value>Update Available</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredString.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleHide.Name" xml:space="preserve">
    <value>ConsoleHide</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredString.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.AllDevices.Name" xml:space="preserve">
    <value>AllDevices</value>
  </data>
  <data name="ActionStepMethods.IsButtonDown.HelpTip" xml:space="preserve">
    <value>Returns True if the specified mouse button is currently pressed (down).</value>
  </data>
  <data name="tabPreferencesTabHint" xml:space="preserve">
    <value>Hints</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Parameters.message.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayImage.Name" xml:space="preserve">
    <value>DisplayImage</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Parameters.message.Name" xml:space="preserve">
    <value>message</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ColorKey.Example.Simple" xml:space="preserve">
    <value>.ColorKey = Color.White; //See Color struct docs for known colors
.ColorKey = Color.FromArgb(255, 255, 255); //RGB
.ColorKey = Color.Transparent; //Remove color key</value>
  </data>
  <data name="MacroOptionsSleepMultiplierLabel" xml:space="preserve">
    <value>Sleep Multiplier (lower = faster replay)</value>
  </data>
  <data name="TrayMenuSecondaryStrokeButton" xml:space="preserve">
    <value>Secondary Stroke Button</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Rectangle.Type" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Rectangle.Name" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHistoryScript.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHistoryScript.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.forEach.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.BrowserOptions.Name" xml:space="preserve">
    <value>BrowserOptions</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.BrowserOptions.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendCharacter.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Any" xml:space="preserve">
    <value>Any</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="tabPreferencesIgnoreKeyWin" xml:space="preserve">
    <value>Win</value>
  </data>
  <data name="tabPreferencesIgnoreKeyAlt" xml:space="preserve">
    <value>Alt</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsumePhysicalInput.Parameters.timeout.Type" xml:space="preserve">
    <value>long</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsumePhysicalInput.Parameters.timeout.Name" xml:space="preserve">
    <value>timeout</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredObject.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ConsumeClick" xml:space="preserve">
    <value>Consume Click Event</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredRectangles.HelpTip" xml:space="preserve">
    <value>Deletes all stored rectangles.</value>
  </data>
  <data name="ScriptHelpCategoryNameMacros" xml:space="preserve">
    <value>Macros</value>
  </data>
  <data name="ClearHistory" xml:space="preserve">
    <value>Clear History</value>
  </data>
  <data name="tabPreferencesScriptReplAddTokenLabel" xml:space="preserve">
    <value>Token</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StopAllActionSteps.Example.Simple" xml:space="preserve">
    <value>sp.StopAllActionSteps();</value>
  </data>
  <data name="False" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="ActionSaveButton" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllTimers.Example.Simple" xml:space="preserve">
    <value>sp.DeleteAllTimers();</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecutePreviousScript.Parameters.index.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecuteStoredScript.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecutePreviousScript.Parameters.index.Name" xml:space="preserve">
    <value>index</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Sleep.Parameters.milliseconds.Name" xml:space="preserve">
    <value>milliseconds</value>
  </data>
  <data name="ActionStepMethods.ToggleCommunicationsMute.DisplayName" xml:space="preserve">
    <value>Toggle Communications Mute</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Sleep.Parameters.milliseconds.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RectangleF.Type" xml:space="preserve">
    <value>RectangleF</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RectangleF.Name" xml:space="preserve">
    <value>RectangleF</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreObject.Example.Simple" xml:space="preserve">
    <value>sp.StoreObject('test', 123);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecutePreviousScript.Name" xml:space="preserve">
    <value>ExecutePreviousScript</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RelayGesture.Parameters.points.Description" xml:space="preserve">
    <value>Array of Points used to relay the gesture.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StorePoint.Name" xml:space="preserve">
    <value>StorePoint</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SupportsSelection.Example.Simple" xml:space="preserve">
    <value>.SupportsSelection</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToScreen.Name" xml:space="preserve">
    <value>MoveToScreen</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreRectangle.Description" xml:space="preserve">
    <value>Stores a rectangle using the specified name. Value can be retrieved via sp.GetStoredRectangle.</value>
  </data>
  <data name="tabPreferencesHintLocationTopLeft" xml:space="preserve">
    <value>Top Left</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MessageBox.Parameters.title.Description" xml:space="preserve">
    <value>Message of the message box window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromPoint.Returns" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleIsVisible.Description" xml:space="preserve">
    <value>Returns true if the console window is visible.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayImage.Description" xml:space="preserve">
    <value>Displays a popup on the screen containing the image passed in. Click and drag to move the window, press Escape or double-click the window to close.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileVersionInfo.Example.Simple" xml:space="preserve">
    <value>var version = sp.GetFileVersionInfo('C:\\Windows\\Notepad.exe');</value>
  </data>
  <data name="TrainingFormMatch" xml:space="preserve">
    <value>This drawing was matched with the gesture above.

If you want to use this drawing to create a new gesture, enter a new name above and click Save.

Otherwise, simply click Save to add this drawing to the existing gesture.</value>
  </data>
  <data name="ActionStepMethods.GetItemsInExplorer.DisplayName" xml:space="preserve">
    <value>Get Items In Explorer</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PlaySound.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="PlugInAddFailedMessage" xml:space="preserve">
    <value>Failed to add Plug-in.</value>
  </data>
  <data name="PlugInFailedToLoadMessage" xml:space="preserve">
    <value>Failed to load plug-in DLL. 

File Name: {0}

Exception: {1}

Inner Exception: {2}</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCurrentMousePoint.Description" xml:space="preserve">
    <value>Returns a point containing the coordinates of the current mouse position.</value>
  </data>
  <data name="ActionStepMethods.StorePoint.DisplayName" xml:space="preserve">
    <value>Store Point</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Process.Type" xml:space="preserve">
    <value>Process</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Process.Name" xml:space="preserve">
    <value>Process</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Confirm.Parameters.title.Description" xml:space="preserve">
    <value>Message of the message box window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyDown.Parameters.ch.Description" xml:space="preserve">
    <value>Value of the character to send.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredString.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the string.</value>
  </data>
  <data name="ActionStepMethods.ToggleTrayIcon.DisplayName" xml:space="preserve">
    <value>Toggle Tray Icon</value>
  </data>
  <data name="ActionStepMethods.SetCommunicationsVolume.DisplayName" xml:space="preserve">
    <value>Set Communications Volume</value>
  </data>
  <data name="ActionStepMethods.BreakIf.DisplayName" xml:space="preserve">
    <value>Break If</value>
  </data>
  <data name="ActionStepMethods.CloseSettings.HelpTip" xml:space="preserve">
    <value>Closes the Settings window, with or without saving changes.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleClearUser.Name" xml:space="preserve">
    <value>ConsoleClearUser</value>
  </data>
  <data name="Uncomment" xml:space="preserve">
    <value>Uncomment</value>
  </data>
  <data name="ScriptHelpCategoryNameInputAndDisplay" xml:space="preserve">
    <value>Input and Display</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.AllChildWindows.Name" xml:space="preserve">
    <value>AllChildWindows</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldAttributes.Description" xml:space="preserve">
    <value>(optional) Comma-separated list of System.Reflection.FieldAttribute for each of of the field names (same order and count).</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.AllChildWindows.Type" xml:space="preserve">
    <value>SystemWindow[]</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StopAllScripts.Name" xml:space="preserve">
    <value>StopAllScripts</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Name" xml:space="preserve">
    <value>TypeBuilder.DefineNestedStruct</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterIsCustomFloaterLoaded.Example.Simple" xml:space="preserve">
    <value>sp.TouchFloaterIsCustomFloaterLoaded('FloaterName');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterIsCustomFloaterLoaded.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredNumber.HelpTip" xml:space="preserve">
    <value>Deletes a number previously stored using StoreNumber or StrokesPlus.StoredValues.Numbers.Set</value>
  </data>
  <data name="AppDefinitionActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ActionStepMethods.Evaluate.HelpTip" xml:space="preserve">
    <value>Returns the result of the evaluated expression. Use '{stackTake}' and '{stackLeave}' to use values on the stack, pulling them off or leaving respectively (from left to right).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenu.Parameters.info.Type" xml:space="preserve">
    <value>PopupMenuInfo</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenu.Parameters.info.Name" xml:space="preserve">
    <value>info</value>
  </data>
  <data name="LoadSettingsDefaultFileErrorTitle" xml:space="preserve">
    <value>Unable to Load Default Settings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterHide.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ClientPointToScreenPoint.Example.Simple" xml:space="preserve">
    <value>.ClientPointToScreenPoint(new Point(0,0));</value>
  </data>
  <data name="CustomFloaterRelease" xml:space="preserve">
    <value>Release</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Returns" xml:space="preserve">
    <value>EnumBuilder</value>
  </data>
  <data name="FindReplaceOptionsECMAScript" xml:space="preserve">
    <value>ECMA Script</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetMouseCursor.Example.Simple" xml:space="preserve">
    <value>sp.SetMouseCursor("Arrow", "C:\\Windows\\Cursors\\aero_arrow_xl.cur");</value>
  </data>
  <data name="ActionStepMethods.LoadCustomFloater.DisplayName" xml:space="preserve">
    <value>Load Custom Floater</value>
  </data>
  <data name="ActionStepMethods.GetNumberOfItemsOnStack.DisplayName" xml:space="preserve">
    <value>Get Number Of Items On Stack</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Name" xml:space="preserve">
    <value>RegistryReadString</value>
  </data>
  <data name="NewMacroName" xml:space="preserve">
    <value>New Macro</value>
  </data>
  <data name="ConsoleWindowShowOnError" xml:space="preserve">
    <value>Show On System Errors</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileVersionInfo.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredDecimal.Description" xml:space="preserve">
    <value>Deletes a decimal previously stored using sp.StoreDecimal or StrokesPlus.StoredValues.Decimals.Set.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Minimized.Name" xml:space="preserve">
    <value>Minimized</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Minimized.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredBool.Name" xml:space="preserve">
    <value>DeleteStoredBool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Parameters.rows.Name" xml:space="preserve">
    <value>rows</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Parameters.rows.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ShiftKey" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="SettingsStrokeLuminanceMessage" xml:space="preserve">
    <value>Stroke luminance similar to background. Default stroke color(s) shown instead.</value>
  </data>
  <data name="ActionStepMethods.SendWinDown.DisplayName" xml:space="preserve">
    <value>Send Win Down</value>
  </data>
  <data name="ActionStepMethods.StoreBool.HelpTip" xml:space="preserve">
    <value>Stores a boolean using the specified name. Value can be retrieved via GetStoredBool.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Alpha.Example.Simple" xml:space="preserve">
    <value>.Alpha = 128</value>
  </data>
  <data name="FindReplaceOptionsIgnorePatternWhitespace" xml:space="preserve">
    <value>Ignore Pattern Whitespace</value>
  </data>
  <data name="V8ObjectLoadErrorMessage" xml:space="preserve">
    <value>Error initializing types and objects into V8 script engine:

Error: '{0}'</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenu.Example.Simple" xml:space="preserve">
    <value>var popupMenuInfo = new  PopupMenuInfo();
popupMenuInfo.Items.Add('Test 1');
popupMenuInfo.Items.Add('Test 2');
popupMenuInfo.Items.Add('-');
popupMenuInfo.Items.Add('Test 3');
popupMenuInfo.Location = action.End;
popupMenuInfo.Callback = 'PopupMenuCallback';
var res = sp.ShowPopupMenu(popupMenuInfo);

//Example callback function to put in your Load Scripts section
function PopupMenuCallback(id) {
	sp.MessageBox(''+id, 'Selected Menu Item');
}
</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Where.Parameters.pred.Description" xml:space="preserve">
    <value>Boolean predicate.</value>
  </data>
  <data name="ActionStepMethods.IsKeyDown.DisplayName" xml:space="preserve">
    <value>Is Key Down</value>
  </data>
  <data name="ScriptHelp.ActionMethod.LastActiveWindow.Name" xml:space="preserve">
    <value>LastActiveWindow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Distinct.Parameters.element.Description" xml:space="preserve">
    <value>Name of the property to perform the distinct operation against.</value>
  </data>
  <data name="LoadingInitializingScriptEngine" xml:space="preserve">
    <value>Initializing script engine...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCommunicationsVolume.Example.Simple" xml:space="preserve">
    <value>var currentVolume = sp.GetCommunicationsVolume();</value>
  </data>
  <data name="PlugInRemovePlugIn" xml:space="preserve">
    <value>Remove Plug-In</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendCharacter.Name" xml:space="preserve">
    <value>SendCharacter</value>
  </data>
  <data name="ScriptHelp.ActionMethod.AllApplications.Name" xml:space="preserve">
    <value>AllApplications</value>
  </data>
  <data name="SettingsToolbarHelp" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileProductVersionInfo.Parameters.filePath.Description" xml:space="preserve">
    <value>The full path and name to the file.</value>
  </data>
  <data name="ActionStepMethods.GetLastActiveWindow.HelpTip" xml:space="preserve">
    <value>Returns a SystemWindow object for the last active primary window.</value>
  </data>
  <data name="tabGesturesRenameGestureAlreadyExistsTitle" xml:space="preserve">
    <value>Gesture Already Exists</value>
  </data>
  <data name="ActionStepMethods.EndLoop.HelpTip" xml:space="preserve">
    <value>Defines the end of the Loop block.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Parent.Name" xml:space="preserve">
    <value>Parent</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Parent.Type" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="TrainingFormGestureInactive" xml:space="preserve">
    <value>(gesture inactive)</value>
  </data>
  <data name="tabPreferencesSetForegroundLockTimeout" xml:space="preserve">
    <value>Set Foreground Lock Timeout*</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHandle.Name" xml:space="preserve">
    <value>DeleteStoredHandle</value>
  </data>
  <data name="ActionStepMethods.GetCommunicationsVolume.DisplayName" xml:space="preserve">
    <value>Get Communications Volume</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayImage.Parameters.image.Type" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="PlugInTabLoaded" xml:space="preserve">
    <value>Loaded</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayImage.Parameters.image.Name" xml:space="preserve">
    <value>image</value>
  </data>
  <data name="ActionStepMethods.ShowConfirm.HelpTip" xml:space="preserve">
    <value>Displays a simple Yes/No popup with a title and message. Returns true if Yes clicked, otherwise returns false.</value>
  </data>
  <data name="ActionStepMethods.RecordTemporaryMacro.HelpTip" xml:space="preserve">
    <value>Starts recording a temporary macro, capturing all mouse and keyboard events. No messages will be shown, you MUST remember to press Ctrl+Break (Pause) to stop recording. Use Play Temporary Macro to repeat.</value>
  </data>
  <data name="tabPreferencesSynapticsFour" xml:space="preserve">
    <value>4 Fingers</value>
  </data>
  <data name="ActionStepMethods.GetRedValueFromColor.HelpTip" xml:space="preserve">
    <value>Returns the value of the red (R) from a Color structure.</value>
  </data>
  <data name="tabPreferencesMouseAccelerationLabel" xml:space="preserve">
    <value>Mouse Acceleration %: X</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetHistoryScript.Parameters.index.Name" xml:space="preserve">
    <value>index</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetHistoryScript.Parameters.index.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.ProfileName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.ProfileName.Name" xml:space="preserve">
    <value>ProfileName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleIsVisible.Example.Simple" xml:space="preserve">
    <value>var consoleVisible = sp.ConsoleIsVisible();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreBool.Parameters.value.Description" xml:space="preserve">
    <value>Value of the boolean to store.</value>
  </data>
  <data name="FindReplaceMenuAnyRepetitions" xml:space="preserve">
    <value>* Any Number of Repetitions</value>
  </data>
  <data name="ActionStepMethods.MaximizeWindow.DisplayName" xml:space="preserve">
    <value>Maximize Window</value>
  </data>
  <data name="LoadingDisplayChange" xml:space="preserve">
    <value>Calibrating drawing surface...</value>
  </data>
  <data name="ActionStepMethods.InputBox.HelpTip" xml:space="preserve">
    <value>Shows a popup to select from a list of items (comma delimited), returns a string for the selected (or entered) item.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Position.Example.Simple" xml:space="preserve">
    <value>.Position</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Parameters.parameterTypes.Description" xml:space="preserve">
    <value>Array of .NET types to indicate the type of the parameters for the callback (in order).</value>
  </data>
  <data name="HTMLFormWebView2NotAvailableTitle" xml:space="preserve">
    <value>Microsoft Wedge WebView2 not installed. Please install the Evergreen WebView2 distribution from Microsoft, or found in the StrokesPlus.net folder as MicrosoftEdgeWebview2Setup.exe</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.forEach.Example.Simple" xml:space="preserve">
    <value>someList.forEach((item,i) =&gt; 
{
    //do something with item object, i = index of current item
});</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredDecimal.Returns" xml:space="preserve">
    <value>decimal</value>
  </data>
  <data name="ActionStepMethods.SetCustomFloaterTextColor.DisplayName" xml:space="preserve">
    <value>Set Custom Floater Text Color</value>
  </data>
  <data name="ActionStepMethods.SetPlaybackVolume.HelpTip" xml:space="preserve">
    <value>Sets the volume level of the default playback mixer/device. (0 - 100)</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredHandles.DisplayName" xml:space="preserve">
    <value>Delete All Stored Handles</value>
  </data>
  <data name="OnReleaseTab" xml:space="preserve">
    <value>Release</value>
  </data>
  <data name="TrayCaptionDefinedAppsOnly" xml:space="preserve">
    <value>Defined Apps Only</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromClassOrTitle.Example.Simple" xml:space="preserve">
    <value>var notepad = sp.WindowFromClassOrTitle('Notepad', '')</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.useAnsi.Name" xml:space="preserve">
    <value>useAnsi</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.useAnsi.Type" xml:space="preserve">
    <value>object (casts to bool)</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Text.Name" xml:space="preserve">
    <value>Text</value>
  </data>frmPasswordConfirmText
  <data name="ScriptHelp.SystemWindowProperty.Text.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterCloseCustomFloater.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Parameters.baseKey.Type" xml:space="preserve">
    <value>RegistryKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Parameters.baseKey.Name" xml:space="preserve">
    <value>baseKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Parameters.returnType.Description" xml:space="preserve">
    <value>(optional) The .NET type which the function returns, null for void.</value>
  </data>
  <data name="ActionStepMethods.GetLastFocusControl.HelpTip" xml:space="preserve">
    <value>Returns a SystemWindow object for the last active control.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromPoint.Parameters.pt.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromPoint.Parameters.pt.Name" xml:space="preserve">
    <value>pt</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Exit.Description" xml:space="preserve">
    <value>Stops all timers and scripts, saves settings, and closes StrokesPlus.net.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderBy.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Visible.Description" xml:space="preserve">
    <value>Gets the visible status of the control or window.</value>
  </data>
  <data name="ActionStepMethods.SaveString.DisplayName" xml:space="preserve">
    <value>Save String</value>
  </data>
  <data name="FindReplaceMenuRegexSpecifiedSet" xml:space="preserve">
    <value>[a-zA-Z] Specified Set ([^a...] Not in Set)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.noWindow.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.noWindow.Name" xml:space="preserve">
    <value>noWindow</value>
  </data>
  <data name="ActionStepMethodCategories.AllCategories.DisplayName" xml:space="preserve">
    <value>All Categories</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleCopyUser.Example.Simple" xml:space="preserve">
    <value>sp.ConsoleCopyUser();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MethodBuilder.AddMethodImplAttributes.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredBools.Example.Simple" xml:space="preserve">
    <value>sp.DeleteAllStoredBools();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisableCapture.Example.Simple" xml:space="preserve">
    <value>sp.DisableCapture();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Example.Full" xml:space="preserve">
    <value>if(!NativeModules.MyType)
{
    var StringT = host.typeOf(clr.System.String);
    var emit = clr.System.Reflection.Emit;

    myTypeTB = sp.NativeModule().DefineType("MyType", "Class,Public,SequentialLayout,Serializable");

    var myMethod = myTypeTB.NewMethod("MyMethod",
                                      [StringT], 
                                      StringT, 
                                      "Public",
                                      "Standard"
    );

    //Additional code necessary to build method, below is a simple example
    var myMethodIL = myMethod.GetILGenerator();

    myMethodIL.Emit(emit.OpCodes.Ldstr, "Hi! ");
    myMethodIL.Emit(emit.OpCodes.Ldarg_1);

    var conCatParamTypes = new List(clr.System.Type);
    conCatParamTypes.Add(StringT);
    conCatParamTypes.Add(StringT);
    var infoMethod = StringT.GetMethod("Concat", conCatParamTypes.ToArray());

    myMethodIL.Emit(emit.OpCodes.Call, infoMethod);
    myMethodIL.Emit(emit.OpCodes.Ret);

    myTypeTB.Create();
}

var newType  = new NativeModules.MyType();
var result = newType.MyMethod("Test");

sp.MessageBox(`Result: ${result}`, "Success!")</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayImage.Parameters.allowScrollZooming.Description" xml:space="preserve">
    <value>If true, enables mouse wheel scrolling to zoom image in or out.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyToggled.Description" xml:space="preserve">
    <value>Returns true if the specified key is toggled on. This is intended for the Caps, Num, and Scroll lock keys.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCurrentMouseCursor.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="tabPreferencesHintAppFontSizeLabel" xml:space="preserve">
    <value>App Font Size</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredBools.HelpTip" xml:space="preserve">
    <value>Deletes all stored booleans.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesInExplorer.Description" xml:space="preserve">
    <value>Returns a array of strings containing each file selected in the specified Explorer window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Parameters.baseKey.Description" xml:space="preserve">
    <value>RegistryKey representing the registry key where the keyName exists.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesInExplorer.Parameters.hWnd.Type" xml:space="preserve">
    <value>IntPtr</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesInExplorer.Parameters.hWnd.Name" xml:space="preserve">
    <value>hWnd</value>
  </data>
  <data name="ConsoleWindowAddTimestamp" xml:space="preserve">
    <value>Add Timestamps</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Description" xml:space="preserve">
    <value>Reads the specified registry key and return the string.</value>
  </data>
  <data name="ValidateAccountConnectErrorTitle" xml:space="preserve">
    <value>Connection Failed</value>
  </data>
  <data name="tabPreferencesMouseWheelRelayLabel" xml:space="preserve">
    <value>Relay Mouse Wheel Events</value>
  </data>
  <data name="ToggleActive" xml:space="preserve">
    <value>Toggle Active</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Image.Example.Simple" xml:space="preserve">
    <value>.Image</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitleRegex.Parameters.regexTitle.Name" xml:space="preserve">
    <value>regexTitle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.CreateType.Parameters.typeName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitleRegex.Parameters.regexTitle.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.CreateType.Parameters.typeName.Name" xml:space="preserve">
    <value>typeName</value>
  </data>
  <data name="ActionStepMethods.GetAllScreens.DisplayName" xml:space="preserve">
    <value>Get All Screens</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredStrings.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="FindReplaceSearchTypeStandard" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="PlugInTabFailed" xml:space="preserve">
    <value>Failed To Load</value>
  </data>
  <data name="frmSyncSettingsListComputerName" xml:space="preserve">
    <value>Computer Name</value>
  </data>
  <data name="frmAccountLoginPasswordRequired" xml:space="preserve">
    <value>Password is required.</value>
  </data>
  <data name="tabPreferencesIgnoreKeyShift" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="ScriptHelpCategoryTextSystemWindow" xml:space="preserve">
    <value>This is a list of the methods and properties in the SystemWindow class. 

The SystemWindow class is the default object for a window (or control) in StrokesPlus.net.

For example, action.Window and action.Control are both SystemWindow objects.

sp.ForegroundWindow() is also a SystemWindow as are any of the objects returned by the various sp. functions which return a window or windows.

It's important to note that some of these may not apply to all windows/controls, depending on the type. Also, some of the methods not included here may not be easily called from script, such as FilterDescendantWindows(bool directOnly, Predicate&lt;SystemWindow&gt; predicate) since building a predicate in script may be a challenge and probably not needed for most people. This is why I have added various sp. functions which end up calling those methods, to provide a friendly wrapper for the end user.

The return types are either project specific (StrokesPlus.net or a dependency), or they are native .NET Framework types. So if you're looking for a list of properties/methods of one of the return types below, try searching MSDN. For example the Process property is a .NET framework System.Diagnostics.Process class, which has many methods/properties like .Kill()

Examples:

// Action script, center the window where the gesture started
action.Window.Center();

// Action script, get the name of the executable where the gesture started
var exeName = action.Window.Process.MainModule.ModuleName;

// Action script, maximize or minimize window where the gesture started
if(action.Window.Maximized) {
  action.Window.Restore();
} else {
  action.Window.Maximize();
}

// Action script, get the title of the window where the gesture started
var title = action.Window.Title;

// Action script, move window where the gesture started to the previous screen
action.Window.MoveToPreviousScreen();

// Any script, center the foreground window
sp.ForegroundWindow().Center();

// Any script, find all notepad windows, move them to all to the location 100, 100 and resize them to 400 x 400
var matches = sp.WindowsFromTitleRegex("- Notepad$");
for (var i = 0, len = matches.Length; i &lt; len; i++) {
  var wnd = matches[i];
  while (wnd.ParentSymmetric != null) {
    wnd = wnd.ParentSymmetric;
  }
  var pos = wnd.Position;
  pos.Left = 100;
  pos.Top = 100;
  pos.Right = 400;
  pos.Bottom = 400;
  wnd.Position = pos;
}</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterToggleOthers.Name" xml:space="preserve">
    <value>TouchFloaterToggleOthers</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RefreshNativeModules.Name" xml:space="preserve">
    <value>RefreshNativeModules</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeys.Description" xml:space="preserve">
    <value>Simulates sending a sequence of keystrokes using the Microsoft SendKeys.SendWait() method. Search the internet for 'SendKeys Class' to find specific rules and keywords when using this action.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterToggle.Example.Simple" xml:space="preserve">
    <value>sp.TouchFloaterToggle();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.FindImageWithinImage.Description" xml:space="preserve">
    <value>Attempts to find a image within another image. If needle is found within haystack, a Point value is returned, otherwise null is returned. Important! The two images being compared should be PNG or Bitmap with no compression, full 24 or 32-bit images without transparency.</value>
  </data>
  <data name="ActionStepMethods.GetDesktopWindow.DisplayName" xml:space="preserve">
    <value>Get Desktop Window</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHistoryScript.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the history script.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromHandle.Name" xml:space="preserve">
    <value>WindowFromHandle</value>
  </data>
  <data name="ScriptHelpReturnsText" xml:space="preserve">
    <value>Returns</value>
  </data>
  <data name="ActionStepMethods.IsWindowAlwaysOnTop.DisplayName" xml:space="preserve">
    <value>Is Window Always On Top</value>
  </data>
  <data name="ActionStepMethods.GetWindowHeight.DisplayName" xml:space="preserve">
    <value>Get Window Height</value>
  </data>
  <data name="tabPreferencesIgnoreKeyLabel" xml:space="preserve">
    <value>Ignore Key</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecuteStoredScript.Description" xml:space="preserve">
    <value>Executes a script previously stored via sp.StoreHistoryScript.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredObject.Example.Simple" xml:space="preserve">
    <value>sp.DeleteStoredObject('test');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredNumbers.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.BackgroundColor.Description" xml:space="preserve">
    <value>Background color to use for the popup, or null to use system Menu color. Does NOT support alpha channel!</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Reload.Name" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreDecimal.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="LoadingClearingCaptureState" xml:space="preserve">
    <value>Clearing capture state...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreDecimal.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="FindReplaceMenuEndString" xml:space="preserve">
    <value>$ End of String or Line</value>
  </data>
  <data name="AppDefinitionlControlID" xml:space="preserve">
    <value>Control ID:</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredNumbers.Name" xml:space="preserve">
    <value>DeleteAllStoredNumbers</value>
  </data>
  <data name="frmPasswordNewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="CustomFloaterRepeatDelay" xml:space="preserve">
    <value>Repeat Delay (ms)</value>
  </data>
  <data name="tabPreferencesFireOnMouseWheel" xml:space="preserve">
    <value>Enable Recognition on Mouse Wheel Scroll</value>
  </data>
  <data name="HotKeyAlreadyRegisteredMessage" xml:space="preserve">
    <value>Failed to register hotkey {0}
Hotkey is likely already registered by another process.</value>
  </data>
  <data name="ScriptHelpCategoryNameLanguage" xml:space="preserve">
    <value>Language/Culture</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetActiveExplorerPath.Parameters.hWnd.Name" xml:space="preserve">
    <value>hWnd</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetActiveExplorerPath.Parameters.hWnd.Type" xml:space="preserve">
    <value>IntPtr</value>
  </data>
  <data name="ValidateAccountConnectErrorMessage" xml:space="preserve">
    <value>An error occurred connecting to the StrokesPlus.net website. You will be able to use StrokesPlus.net as normal, only online based activities will be unavailable.</value>
  </data>
  <data name="ScriptHelpScriptObjectsWheelTickText" xml:space="preserve">
    <value>Passed into Global Actions &gt; Mouse Events &gt; Mouse Wheel automations, variable name in script: wheel

    public class WheelTick
    {
        public bool Horizontal;
        public long HWndControl;
        public uint WParam;
        public uint LParam;
        public System.Drawing.Point Point;
        public int X { get { return Point.X; } }
        public int Y { get { return Point.Y; } }
        public short Delta;
        //see SystemWindow information for more details
        public SystemWindow Window;
        //see SystemWindow information for more details
        public SystemWindow Control;
    }</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ClientPointToScreenPoint.Parameters.clientPoint.Name" xml:space="preserve">
    <value>clientPoint</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ClientPointToScreenPoint.Parameters.clientPoint.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredRectangle.HelpTip" xml:space="preserve">
    <value>Deletes a rectangle previously stored using StoreRectangle or StrokesPlus.StoredValues.Rectangles.Set</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MessageBox.Name" xml:space="preserve">
    <value>MessageBox</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayText.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.BreakIfExpression.HelpTip" xml:space="preserve">
    <value>Evaluates the expression, if true then immediately stops processing steps within a Loop block and continues execution following the EndLoop step. Use '{stackTake}' and '{stackLeave}' to use values on the stack, pulling them off or leaving respectively (from left to right). Search Microsoft DataColumn.Expression for details on syntax.</value>
  </data>
  <data name="tabPreferencesMouseAccelerationY" xml:space="preserve">
    <value>Y</value>
  </data>
  <data name="frmSyncSettingsUploadErrorMessage" xml:space="preserve">
    <value>Failed to upload settings:

Error: '{0}'</value>
  </data>
  <data name="tabPreferencesCaptureModifiersOnMouseDown" xml:space="preserve">
    <value>Capture Modifiers on Stroke Button Down</value>
  </data>
  <data name="ExportTabTitle" xml:space="preserve">
    <value>Export Settings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Confirm.Description" xml:space="preserve">
    <value>Displays a simple Yes/No popup with a title and message. Returns true if Yes clicked, otherwise returns false.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="CustomFloaterUp" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="TouchFloaterMenuCloseMenu" xml:space="preserve">
    <value>Close Menu</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.HTML.Name" xml:space="preserve">
    <value>HTML</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.HTML.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ActionStepMethods.MouseWheelXY.HelpTip" xml:space="preserve">
    <value>Simulates scrolling the mouse wheel vertically or horizontally at the specified X,Y location in screen coordinates.</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredValues.HelpTip" xml:space="preserve">
    <value>Deletes all stored values of all types.</value>
  </data>
  <data name="ActionStepMethods.SendString.HelpTip" xml:space="preserve">
    <value>Simulates sending a sequence of characters.</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredHandle.DisplayName" xml:space="preserve">
    <value>Delete Stored Handle</value>
  </data>
  <data name="TextExpansionNoHTMLTitle" xml:space="preserve">
    <value>Invalid Format</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseMove.Example.Simple" xml:space="preserve">
    <value>sp.MouseMove(new Point(100, 100));</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineType.Description" xml:space="preserve">
    <value>Overload for ModuleBuilder.DefineType to simplify obtaining an instantiated System.Reflection.Emit.TypeBuilder object. This defines the type, but does not create it, so the type can still be defined further.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsumePhysicalInput.Parameters.bVal.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsumePhysicalInput.Parameters.bVal.Name" xml:space="preserve">
    <value>bVal</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHistoryScript.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHistoryScript.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TogglePlaybackMute.Description" xml:space="preserve">
    <value>Toggles mute on the default playback mixer/device.</value>
  </data>
  <data name="tabPreferencesEnableKeyboardHookSubscription" xml:space="preserve">
    <value>Enable Keyboard Hook Event Subscription</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterToggle.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.underlyingType.Description" xml:space="preserve">
    <value>(optional) Valid enum type of: byte, sbyte, short, ushort, int, uint, long, and ulong</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldOffsets.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Parameters.fieldOffsets.Name" xml:space="preserve">
    <value>fieldOffsets</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKey.Description" xml:space="preserve">
    <value>Simulates pressing and releasing the specified VirtualKeyCode.</value>
  </data>
  <data name="TouchFloaterMenuChangeSize64" xml:space="preserve">
    <value>64px</value>
  </data>
  <data name="TouchFloaterMenuChangeSize32" xml:space="preserve">
    <value>32px</value>
  </data>
  <data name="TouchFloaterMenuChangeSize48" xml:space="preserve">
    <value>48px</value>
  </data>
  <data name="TouchFloaterMenuChangeSize96" xml:space="preserve">
    <value>96px</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisableCapture.Name" xml:space="preserve">
    <value>DisableCapture</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredBool.Description" xml:space="preserve">
    <value>Deletes a boolean previously stored using sp.StoreBool or StrokesPlus.StoredValues.Booleans.Set</value>
  </data>
  <data name="tabPreferencesStrokeButtonGroupText" xml:space="preserve">
    <value>Stroke Button</value>
  </data>
  <data name="ActionStepMethods.IsKeyToggled.DisplayName" xml:space="preserve">
    <value>Is Key Toggled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StorePoint.Example.Simple" xml:space="preserve">
    <value>sp.StorePoint('test', new Point(100,100));</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ExecutablePath.Name" xml:space="preserve">
    <value>ExecutablePath</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetPlaybackVolume.Parameters.newVolumeLevel.Description" xml:space="preserve">
    <value>The new volume level.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ExecutablePath.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="MacroCopyFullScript" xml:space="preserve">
    <value>Copy Full Script</value>
  </data>
  <data name="AppDefinitionParentClass" xml:space="preserve">
    <value>Parent Class Name:</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Screen.Type" xml:space="preserve">
    <value>Screen</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Screen.Name" xml:space="preserve">
    <value>Screen</value>
  </data>
  <data name="tabPreferencesHintLocationLeft" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="ActionStepMethods.RunProgram.HelpTip" xml:space="preserve">
    <value>Runs a program or opens a document depending on specified parameters. If waitForExit is specified, the execution of steps will wait until the program exits and the exit code (number) will be added to the stack.</value>
  </data>
  <data name="ActionStepMethods.IsButtonDown.DisplayName" xml:space="preserve">
    <value>Is Button Down</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Confirm.Name" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="UseSecondaryStrokeButtonLabel" xml:space="preserve">
    <value>Use Secondary Stroke Button</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendCharacter.Parameters.ch.Description" xml:space="preserve">
    <value>Value of the character to send.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HideMouseCursor.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="MacroRecordLoseScriptTitle" xml:space="preserve">
    <value>Discard Script?</value>
  </data>
  <data name="tabPreferencesHintTipFontSizeLabel" xml:space="preserve">
    <value>Action Hint Font Size</value>
  </data>
  <data name="NewTextExpansionName" xml:space="preserve">
    <value>New Text Expansion</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StorePoint.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="FindReplaceMenuNumberedCapture" xml:space="preserve">
    <value>( ) Numbered Capture</value>
  </data>
  <data name="ImportHeadingLabel" xml:space="preserve">
    <value>Select a file below to import. Then you can choose which items from the file which you want to import. Items in red are conflicts and unchecked by default. If you check conflicted entries, they will overwrite the existing items.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleCopySystem.Description" xml:space="preserve">
    <value>Copies the System log from console window to the clipboard.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPoint.Parameters.x.Name" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Example.Simple" xml:space="preserve">
    <value>var typesTB = sp.NativeModule().CreateType("Types", "Class,Public,SequentialLayout,Serializable");
typesTB.DefineNestedEnum("NestedEnum",
                         "Low,High",
                         [0,1]).Create();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPoint.Parameters.x.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EmptyRecycleBins.Example.Simple" xml:space="preserve">
    <value>sp.EmptyRecycleBins();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesInExplorer.Example.Simple" xml:space="preserve">
    <value>var files = sp.GetSelectedFilesInExplorer(action.Window.HWnd);</value>
  </data>
  <data name="TrayMenuToggleFloater" xml:space="preserve">
    <value>Toggle Floaters</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Center.Description" xml:space="preserve">
    <value>Centers the window on the screen where the window resides.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredRectangle.Name" xml:space="preserve">
    <value>DeleteStoredRectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EnumBuilder.Create.Name" xml:space="preserve">
    <value>EnumBuilder.Create</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Parameters.functionName.Description" xml:space="preserve">
    <value>Name of the JavaScript function for which this delegate will reference and invoke.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendCharacter.Description" xml:space="preserve">
    <value>Simulates pressing and releasing the specified character.</value>
  </data>
  <data name="ActionStepMethods.OpenSettings.HelpTip" xml:space="preserve">
    <value>Opens the Settings window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesOnDesktop.Example.Full" xml:space="preserve">
    <value>var files = sp.GetSelectedFilesOnDesktop();
var str = '';
var delim = '';
for(i = 0; i &lt; files.Length; i++)
{
	str = str + delim + files[i];
	delim = '\r\n';
}
if(str.length == 0) str = '(no files selected)';
sp.MessageBox(str, 'Selected File(s)');</value>
  </data>
  <data name="SettingsToolbarGlobalActions" xml:space="preserve">
    <value>Global Actions</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreDecimal.Parameters.value.Type" xml:space="preserve">
    <value>decimal</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Movable.Example.Simple" xml:space="preserve">
    <value>.Movable</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreDecimal.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ParameterSource" xml:space="preserve">
    <value>Parameter Source</value>
  </data>
  <data name="ActionStepMethods.StoreRectangle.DisplayName" xml:space="preserve">
    <value>Store Rectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayImage.Example.Simple" xml:space="preserve">
    <value>sp.DisplayImage(clip.GetImage(), true); //Assumes an image is on the clipboard, enables mouse wheel scroll zooming</value>
  </data>
  <data name="ScriptHelpCategoryTextMacros" xml:space="preserve">
    <value>Functions for working with stored macros and recording/playing temporary ones.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetActiveExplorerPath.Name" xml:space="preserve">
    <value>GetActiveExplorerPath</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DesktopWindow.Name" xml:space="preserve">
    <value>DesktopWindow</value>
  </data>
  <data name="tabPreferencesTouchFloaterFadeMs" xml:space="preserve">
    <value>Floater Fade Transition Time (ms)</value>
  </data>
  <data name="tabPreferencesPlayButton" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitlePartial.Description" xml:space="preserve">
    <value>Returns an array of SystemWindow objects for controls or windows based on a partial title match.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StopAllActionSteps.Description" xml:space="preserve">
    <value>Stops all action step execution.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMacroScript.Name" xml:space="preserve">
    <value>GetMacroScript</value>
  </data>
  <data name="tabPreferencesEnableDisplayChangeMessage" xml:space="preserve">
    <value>Show Display Change Message</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredString.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the string.</value>
  </data>
  <data name="Execute" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.FitToScreen.Example.Simple" xml:space="preserve">
    <value>.FitToScreen()</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendString.Parameters.str.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendString.Parameters.str.Name" xml:space="preserve">
    <value>str</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDeleteSubKey.Parameters.showErrors.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDeleteSubKey.Parameters.showErrors.Name" xml:space="preserve">
    <value>showErrors</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StorePoint.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StorePoint.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCommunicationsVolume.Returns" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="HorizontalWheelScriptTab" xml:space="preserve">
    <value>Horizontal Wheel</value>
  </data>
  <data name="ActionStepMethods.GetBlueValueFromColor.DisplayName" xml:space="preserve">
    <value>Get Blue Value From Color</value>
  </data>
  <data name="tabPreferencesHintAppFontNameLabel" xml:space="preserve">
    <value>App Font</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPoint.Description" xml:space="preserve">
    <value>(deprecated) Returns a point based on the the x and y coordinates passed in. Use 'new Point(x,y)' instead.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.IsCloaked.Name" xml:space="preserve">
    <value>IsCloaked</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetActiveExplorerPath.Example.Simple" xml:space="preserve">
    <value>var path = sp.GetActiveExplorerPath(action.Window.HWnd);</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.IsCloaked.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetLocation.Description" xml:space="preserve">
    <value>Move a custom floater to a new location. Only works if floaters are currently shown.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictActive.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.VisibilityFlag.Description" xml:space="preserve">
    <value>Gets or sets the visibility status of the control or window.</value>
  </data>
  <data name="ActionStepMethods.SendShiftUp.DisplayName" xml:space="preserve">
    <value>Send Shift Up</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCurrentCulture.Example.Simple" xml:space="preserve">
    <value>sp.GetCurrentCulture();</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToScreen.Example.Simple" xml:space="preserve">
    <value>.MoveToScreen(0);
.MoveToScreen(Screen.FromPoint(sp.GetCurrentMousePoint()));</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyUp.Example.Simple" xml:space="preserve">
    <value>sp.SendVKeyUp(vk.CONTROL);</value>
  </data>
  <data name="ActionStepMethods.GetScreenFromPointXY.DisplayName" xml:space="preserve">
    <value>Get Screen From Point X,Y</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.CreateType.Parameters.typeAttributes.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.CreateType.Parameters.typeAttributes.Name" xml:space="preserve">
    <value>typeAttributes</value>
  </data>
  <data name="tabPreferencesStrokeButtonRight" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="ScriptHelp.ActionMethod.AllApplications.Returns" xml:space="preserve">
    <value>SystemWindow[]</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ChangeCulture.Description" xml:space="preserve">
    <value>Changes the current language culture to the specified one.</value>
  </data>
  <data name="HotKeyAlreadyRegisteredTitle" xml:space="preserve">
    <value>Unable to Register Hot Key</value>
  </data>
  <data name="ScriptHelpScriptObjectsInputBoxInfoText" xml:space="preserve">
    <value>Used when calling sp.InputBox()

    public class InputBoxInfo
    {
        public string Title { get; set; }
        public string Message { get; set; }
        public List&lt;string&gt; Items { get ;}
        public string SelectedValue { get; set; }
        public bool AllowDirectInput { get; set; }
        public bool Sort { get; set; }
        public string Result { get; set; }
        public bool ShowAtMouseCursor { get; set; }
    }</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.Location.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.Location.Name" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="ActionStepMethods.ShowBalloonTip.DisplayName" xml:space="preserve">
    <value>Show Balloon Tip</value>
  </data>
  <data name="FindReplaceRecentToolTip" xml:space="preserve">
    <value>Show a list of recent search strings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.showErrors.Name" xml:space="preserve">
    <value>showErrors</value>
  </data>
  <data name="ActionStepMethods.ShowMessageBox.DisplayName" xml:space="preserve">
    <value>Show Message Box</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.showErrors.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleClearAll.Description" xml:space="preserve">
    <value>Clears all logs in the console window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleHide.Description" xml:space="preserve">
    <value>Hides the console window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromClassOrTitle.Parameters.className.Description" xml:space="preserve">
    <value>Exact name of the control or window class.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetActiveExplorerPath.Parameters.hWnd.Description" xml:space="preserve">
    <value>Handle to the Explorer window.</value>
  </data>
  <data name="ActionStepMethods.GetArrayItemByIndex.DisplayName" xml:space="preserve">
    <value>Get Array Item By Index</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Example.Simple" xml:space="preserve">
    <value>sp.ConsoleLog('message', 'label', System.Drawing.Color.Red);</value>
  </data>
  <data name="WindowFocusScriptTab" xml:space="preserve">
    <value>Foreground Window Change</value>
  </data>
  <data name="ActionEngineReflectionTypeErrorTitle" xml:space="preserve">
    <value>Action Step Error</value>
  </data>
  <data name="ActionStepMethods.GetLastFocusControl.DisplayName" xml:space="preserve">
    <value>Get Last Focus Control</value>
  </data>
  <data name="TrayMenuReload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreString.Parameters.value.Description" xml:space="preserve">
    <value>Value of the string to store.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleClearAll.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredDecimals.Name" xml:space="preserve">
    <value>DeleteAllStoredDecimals</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPoint.Parameters.y.Name" xml:space="preserve">
    <value>y</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPoint.Parameters.y.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelpOrderText" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="ActionEngineReflectionTypeErrorMessage" xml:space="preserve">
    <value>Failed to get type from assembly: 
Assembly: '{0}' 
Type: '{1}'</value>
  </data>
  <data name="ActionStepMethods.Run.DisplayName" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredString.Name" xml:space="preserve">
    <value>GetStoredString</value>
  </data>
  <data name="tabPreferencesTouchFloaterDisableMouseCaptureFloaterActive" xml:space="preserve">
    <value>Disable Mouse Capture When Floater Visible</value>
  </data>
  <data name="tabPreferencesExternalScript" xml:space="preserve">
    <value>External Script</value>
  </data>
  <data name="tabPreferencesPreventCaptureOnFullScreenWindows" xml:space="preserve">
    <value>Disable Capture on Full Screen Windows</value>
  </data>
  <data name="CustomFloaterRepeatDistance" xml:space="preserve">
    <value>Repeat Distance (px)</value>
  </data>
  <data name="FindReplaceTitle" xml:space="preserve">
    <value>Find and Replace</value>
  </data>
  <data name="FloaterLayoutsRenameTitle" xml:space="preserve">
    <value>Rename Layout</value>
  </data>
  <data name="tabPreferencesEnableScriptEngineLockAttemptsExceededMessage" xml:space="preserve">
    <value>Show Engine Lock Fail Message</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadLayout.Name" xml:space="preserve">
    <value>TouchFloaterLoadLayout</value>
  </data>
  <data name="ClickEventStrokeButtonText" xml:space="preserve">
    <value>(button Down only, use Release to handle button Up)</value>
  </data>
  <data name="FindReplaceClearButton" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Parameters.baseKey.Description" xml:space="preserve">
    <value>RegistryKey representing the registry key where the keyName exists.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Where.Description" xml:space="preserve">
    <value>Applies a boolean predicate against the IEnumerable and returns an IEnumerable&lt;T&gt;.</value>
  </data>
  <data name="tabPreferencesHintBackColorLabel" xml:space="preserve">
    <value>Back Color</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MethodBuilder.AddMethodImplAttributes.Parameters.attributes.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MethodBuilder.AddMethodImplAttributes.Parameters.attributes.Name" xml:space="preserve">
    <value>attributes</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Parameters.subKey.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenPointToClientPoint.Returns" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SaveString.Parameters.value.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Parameters.subKey.Name" xml:space="preserve">
    <value>subKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SaveString.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ActionStepMethods.HideFloaters.DisplayName" xml:space="preserve">
    <value>Hide Floaters</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.value.Description" xml:space="preserve">
    <value>The value to store.</value>
  </data>
  <data name="tabPreferencesHintLocationCustom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="tabPreferencesHintLocationCursor" xml:space="preserve">
    <value>Cursor</value>
  </data>
  <data name="TouchFloaterMenuLoadCustomFloater" xml:space="preserve">
    <value>Load Floater</value>
  </data>
  <data name="SettingsActionConflictMessage" xml:space="preserve">
    <value>Potential conflict with action {0} &gt; {1}.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Center.Example.Simple" xml:space="preserve">
    <value>.Center()</value>
  </data>
  <data name="ActionStepMethods.RelayGesture.DisplayName" xml:space="preserve">
    <value>Relay Gesture</value>
  </data>
  <data name="Secondary" xml:space="preserve">
    <value>Secondary</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ActionStepMethods.GetExpandedEnvironmentVariables.DisplayName" xml:space="preserve">
    <value>Get Expanded Environment Variables</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetKeyState.Example.Full" xml:space="preserve">
    <value>if(sp.GetKeyState(vk.SHIFT) &amp; 0x8000)
{
   sp.MessageBox("Shift is Down", "Shift State");
}</value>
  </data>
  <data name="TrayMenuUseRight" xml:space="preserve">
    <value>Mouse Button: Right</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Sleep.Example.Simple" xml:space="preserve">
    <value>sp.Sleep(100);</value>
  </data>
  <data name="ExclusionZoneFixedEdge" xml:space="preserve">
    <value>Fixed Edge</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSavedString.Description" xml:space="preserve">
    <value>Returns a string previously saved using sp.SaveString or StrokesPlus.SavedStrings.Set.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeModule.Parameters.moduleName.Name" xml:space="preserve">
    <value>moduleName</value>
  </data>
  <data name="ActionStepMethods.StoreBool.DisplayName" xml:space="preserve">
    <value>Store Bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeModule.Parameters.moduleName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.Font.Description" xml:space="preserve">
    <value>Font to use for the popup, or null to use default S+ font.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.IsDescendantOf.Example.Simple" xml:space="preserve">
    <value>.IsDescendantOf(window)</value>
  </data>
  <data name="frmAccountLoginFailed" xml:space="preserve">
    <value>Invalid user name or password.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsumePhysicalInput.Description" xml:space="preserve">
    <value>Consumes ALL physical mouse and keyboard input. NOTE: Be very careful when using this function, if you call it with true and either forget to call it again with false (or the script runs into an error), you may be stuck unable to use the computer!</value>
  </data>
  <data name="TrainingFormNoMatch" xml:space="preserve">
    <value>Looks like this is a new gesture!

Enter a name for this gesture above and click Save.

If you want to add this drawing to an existing gesture, type or select the gesture above and click Save.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.IsImmersive.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.IsImmersive.Name" xml:space="preserve">
    <value>IsImmersive</value>
  </data>
  <data name="ActionStepMethods.BreakIf.HelpTip" xml:space="preserve">
    <value>Compares value1 and value2, if they are equal then immediately stops processing steps within a Loop block and continues execution following the EndLoop step.</value>
  </data>
  <data name="tabPreferencesHintLocationBottom" xml:space="preserve">
    <value>Bottom</value>
  </data>
  <data name="SettingsActionListConflictMessage" xml:space="preserve">
    <value>Potential action conflicts found. Review red action names in list.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderByMultiple.Example.Simple" xml:space="preserve">
    <value>var mySortedList = myList.OrderByMultiple("Category|0,Description|1");</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RecordTemporaryMacro.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="tabPreferencesTabExclusionZones" xml:space="preserve">
    <value>Exclusion Zones</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictClear.Description" xml:space="preserve">
    <value>Removes the mouse movement restriction previously set via sp.MouseRestrictToRectangle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.forEach.Parameters.name.Type" xml:space="preserve">
    <value>object (script function)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.forEach.Parameters.name.Name" xml:space="preserve">
    <value>action</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RECT.Type" xml:space="preserve">
    <value>RECT</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RECT.Name" xml:space="preserve">
    <value>RECT</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredObjects.Name" xml:space="preserve">
    <value>DeleteAllStoredObjects</value>
  </data>
  <data name="ActionStepMethods.GetDesktopWindowListView.DisplayName" xml:space="preserve">
    <value>Get Desktop Window List View</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Minimize.Name" xml:space="preserve">
    <value>Minimize</value>
  </data>
  <data name="ActionStepMethodCategories.Macros.DisplayName" xml:space="preserve">
    <value>Macros</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesOnDesktop.Returns" xml:space="preserve">
    <value>string[]</value>
  </data>
  <data name="RightMouse" xml:space="preserve">
    <value>Right Button</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSystemMetricsByIndex.Description" xml:space="preserve">
    <value>Returns an int value of the specified SystemMetric.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DesktopWindowListView.Returns" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="LoadingSettingsGlobalActions" xml:space="preserve">
    <value>Initializing Global Actions section...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendControlUp.Name" xml:space="preserve">
    <value>SendControlUp</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Parameters.label.Description" xml:space="preserve">
    <value>Label for the log entry, e.g. [label] message.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.LegacyModuleName.Description" xml:space="preserve">
    <value>Returns the module name for this control or window's process using a direct WinAPI call.</value>
  </data>
  <data name="tabGlobalSettingsCancelDelayLabel" xml:space="preserve">
    <value>Custom Cancel Delay (ms):</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitleRegex.Name" xml:space="preserve">
    <value>WindowsFromTitleRegex</value>
  </data>
  <data name="tabPreferencesScriptEngineLockAttempts" xml:space="preserve">
    <value>Max Script Lock Attempts</value>
  </data>
  <data name="TrayMenuSynapticThreeFingers" xml:space="preserve">
    <value>Synaptics: 3 Fingers</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyDown.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="LoadLicenseFileErrorMessage" xml:space="preserve">
    <value>Unable to load License.txt file. Please view the License.txt file directly, in the same location where StrokesPlus.net executable resides.</value>
  </data>
  <data name="TextExpansionTypeRTFClipDescription" xml:space="preserve">
    <value>Copies the rich text format to the clipboard and pastes it in the current window. This method is very fast, but can run into issues if the clipboard is in use by another program.
Use an external editor like Microsoft Word to create your formatted text and paste it into the window below.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MessageBox.Parameters.message.Type" xml:space="preserve">
    <value>object (casted to string)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MessageBox.Parameters.message.Name" xml:space="preserve">
    <value>message</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDeleteSubKey.Parameters.showErrors.Description" xml:space="preserve">
    <value>Displays an error message box, if the action was not successful.</value>
  </data>
  <data name="ActionStepMethods.Multiply.HelpTip" xml:space="preserve">
    <value>Returns the value of number1 multiplied by number2.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreBool.Description" xml:space="preserve">
    <value>Stores a boolean using the specified name. Value can be retrieved via sp.GetStoredBool.</value>
  </data>
  <data name="ActionStepMethods.SendControlDown.DisplayName" xml:space="preserve">
    <value>Send Control Down</value>
  </data>
  <data name="ScriptHelp.ActionMethod.InputBox.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.forEach.Description" xml:space="preserve">
    <value>Provides a method of iterating over the elements of an IEnumerable and performing an action.</value>
  </data>
  <data name="CustomFloaterSize" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="CustomFloaterDown" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="CustomFloaterLeft" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisableCapture.Description" xml:space="preserve">
    <value>Disables the mouse and keyboard hooks.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Parent.Description" xml:space="preserve">
    <value>Returns a SystemWindow object for the parent control or window.</value>
  </data>
  <data name="AppDefinitionOwnerText" xml:space="preserve">
    <value>Owner Title/Text:</value>
  </data>
  <data name="ActionStepMethods.GetAllScreens.HelpTip" xml:space="preserve">
    <value>Returns an array containing all screens.</value>
  </data>
  <data name="ChangeLog" xml:space="preserve">
    <value>Change Log</value>
  </data>
  <data name="CustomFloaterHoverDelay" xml:space="preserve">
    <value>Hover Delay (ms)</value>
  </data>
  <data name="ActionStepMethods.Loop.HelpTip" xml:space="preserve">
    <value>Creates a loop that executes the steps within the Loop block until the number of loops has been reached or Break/BreakIf is called. </value>
  </data>
  <data name="ActionStepMethods.GetLastActiveWindow.DisplayName" xml:space="preserve">
    <value>Get Last Active Window</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.CheckState.Name" xml:space="preserve">
    <value>CheckState</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.CheckState.Type" xml:space="preserve">
    <value>CheckState</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetActiveExplorerPath.Example.Full" xml:space="preserve">
    <value>var path = sp.GetActiveExplorerPath(action.Window.HWnd);
sp.MessageBox(path, 'Current Path');</value>
  </data>
  <data name="TrayMenuStrokeButton" xml:space="preserve">
    <value>Stroke Button</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.length.Description" xml:space="preserve">
    <value>The length of text to retrieve, casted to int.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Parameters.rect.Type" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Parameters.rect.Name" xml:space="preserve">
    <value>rect</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenPointToClientPoint.Description" xml:space="preserve">
    <value>Returns a Point translated from screen coordinates to client coordinates relative to the upper-left corner of the window's client area.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.ScriptCallback.Description" xml:space="preserve">
    <value>Name of the callback to function to invoke when window.chrome.webview.postMessage is called from within the HTML window's JavaScript.</value>
  </data>
  <data name="ClearScriptNoEngineAvailableMessage" xml:space="preserve">
    <value>No script engine is available; discarding script. Try again.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindowExecuteScriptAsync.Description" xml:space="preserve">
    <value>Executes JavaScript inside the specified HTML window.</value>
  </data>
  <data name="ActionStepMethods.SetWindowAlwaysOnTop.DisplayName" xml:space="preserve">
    <value>Set Window Always On Top</value>
  </data>
  <data name="HotkeyNotGlobalLabel" xml:space="preserve">
    <value>Unregistered</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesOnDesktop.Name" xml:space="preserve">
    <value>GetSelectedFilesOnDesktop</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeModule.Returns" xml:space="preserve">
    <value>ModuleBuilder</value>
  </data>
  <data name="ScriptHelpScriptObjectsPopupMenuInfoExText" xml:space="preserve">
    <value>Used when calling sp.ShowPopupMenuEx()

    public class PopupMenuInfoEx
    {
        public Point Location { get; set; }
        public List&lt;PopupMenuItem&gt; MenuItems { get; set;}
    }</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMacroScript.Parameters.category.Description" xml:space="preserve">
    <value>Name of the category to which the macro belongs.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreDecimal.Parameters.value.Description" xml:space="preserve">
    <value>Value of the decimal to store.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.WindowAbove.Name" xml:space="preserve">
    <value>WindowAbove</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.WindowAbove.Type" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreNumber.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the number.</value>
  </data>
  <data name="ActionStepMethods.IsWindowAlwaysOnTop.HelpTip" xml:space="preserve">
    <value>Returns true if the specified window is always on top (passed in as a SystemWindow type).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RecordTemporaryMacro.Example.Simple" xml:space="preserve">
    <value>//Note: If calling this from a hotkey, you should add a sp.Sleep(1000); before the calling this function, to ensure when you release the hotkey that those aren't recorded.
sp.RecordTemporaryMacro();</value>
  </data>
  <data name="ScriptHelpPropertyText" xml:space="preserve">
    <value>Property</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Parameters.icon.Description" xml:space="preserve">
    <value>The icon to be used in the ballon/toast popup. Valid values: info, error, or warning.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreDecimal.Example.Simple" xml:space="preserve">
    <value>sp.StoreDecimal('test', 123.0);</value>
  </data>
  <data name="TrayMenuSynapticTwoFingers" xml:space="preserve">
    <value>Synaptics: 2 Fingers</value>
  </data>
  <data name="ClearScriptTooManyErrorsTitle" xml:space="preserve">
    <value>Error Limit Reached</value>
  </data>
  <data name="LoadingTray" xml:space="preserve">
    <value>Initializing tray icon...</value>
  </data>
  <data name="ActionStepMethods.CloseWindow.HelpTip" xml:space="preserve">
    <value>Sends the close command to the specified window (passed in as a SystemWindow type).</value>
  </data>
  <data name="ActionStepMethods.ElseIfExpression.DisplayName" xml:space="preserve">
    <value>Else If Expression</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Parameters.rows.Description" xml:space="preserve">
    <value>The number of rows to divide the rectangle into.</value>
  </data>
  <data name="ActionStepMethods.ElseIf.HelpTip" xml:space="preserve">
    <value>Compares value1 and value2, if they are equal then the steps following the ElseIf are executed. If they are not equal, any following ElseIf steps within the If block will be evaluated and executed where appropriate. Otherwise the steps within the Else block will be executed, if it exists</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHandle.Description" xml:space="preserve">
    <value>Deletes a handle previously stored using sp.StoreHandle or StrokesPlus.StoredValues.Handles.Set</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCaretLocation.Name" xml:space="preserve">
    <value>GetCaretLocation</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Parameters.pt.Description" xml:space="preserve">
    <value>The location to perform the mouse event(s). Can be an existing point like 'action.Start' or a custom one using 'new Point(x, y).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCaptureMixer.Example.Simple" xml:space="preserve">
    <value>var captureMixer = sp.GetCaptureMixer();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHandle.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the handle.</value>
  </data>
  <data name="ActionStepMethods.GetWindowLocationY.HelpTip" xml:space="preserve">
    <value>Returns the window's (passed in as a SystemWindow type) location along the Y axis in screen coordinates.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Parameters.pt.Description" xml:space="preserve">
    <value>The location to perform the mouse event(s). Can be an existing point like 'action.Start' or a custom one using 'new Point(x, y).</value>
  </data>
  <data name="tabPreferencesLogErrorsToConsoleOnly" xml:space="preserve">
    <value>Log Script Engine Errors to Console Only</value>
  </data>
  <data name="BeforeAfterActionNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Position.Description" xml:space="preserve">
    <value>Returns a RECT object for the control or window position inside its parent or in workspace coordinates. Use Rectangle for absolute coordinates without borders, and AbsoluteRectangle for full rectangle.</value>
  </data>
  <data name="ActionStepMethods.SendKeys.DisplayName" xml:space="preserve">
    <value>Send Keys</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredObject.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the object.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NextApplication.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.GetNumber.DisplayName" xml:space="preserve">
    <value>Get Number</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.Title.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.Title.Name" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisableNext.Example.Simple" xml:space="preserve">
    <value>sp.DisableNext();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.AllApplications.Example.Simple" xml:space="preserve">
    <value>var wnds = sp.AllApplications();
var apps = '';
for (var i = 0, len = wnds.Length; i &lt; len; i++) {
	apps = apps + 'Class: ' + wnds[i].ClassName + ' Title: ' + wnds[i].Title + '\r\n';
}
clip.SetText(apps);
</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.WindowAbove.Description" xml:space="preserve">
    <value>Gets the SystemWindow object for the window above.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MessageBox.Description" xml:space="preserve">
    <value>Displays a simple message box with a title and message.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Example.Simple" xml:space="preserve">
    <value>.SendMessageObj(message, wParam, lParam);</value>
  </data>
  <data name="ActionStepMethods.Break.DisplayName" xml:space="preserve">
    <value>Break</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.windowStyle.Name" xml:space="preserve">
    <value>windowStyle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MessageBox.Parameters.title.Type" xml:space="preserve">
    <value>object (casted to string)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeModule.Description" xml:space="preserve">
    <value>Retrieves (or creates) a native module as a ModuleBuilder. Default is the module if no name is provided. This ModuleBuilder lets you create custom types, methods, PInvokes, enums via System.Reflection.Emit.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.windowStyle.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MessageBox.Parameters.title.Name" xml:space="preserve">
    <value>title</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeModule.Parameters.moduleName.Description" xml:space="preserve">
    <value>Name of the module (or leave blank for Default).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetCustomFloaterLocation.Parameters.point.Name" xml:space="preserve">
    <value>point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetCustomFloaterLocation.Parameters.point.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Parameters.pt.Name" xml:space="preserve">
    <value>pt</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Parameters.pt.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredObjects.DisplayName" xml:space="preserve">
    <value>Delete All Stored Objects</value>
  </data>
  <data name="X2ClickTab" xml:space="preserve">
    <value>X2 Click</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Sleep.Parameters.milliseconds.Description" xml:space="preserve">
    <value>The duration in milliseconds to wait.</value>
  </data>
  <data name="FindReplaceReplaceAll" xml:space="preserve">
    <value>Replace All</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetCustomFloaterLocation.Parameters.name.Description" xml:space="preserve">
    <value>Name of the custom floater to move.</value>
  </data>
  <data name="ImportExportSelectAllLabel" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.IsUnicode.Example.Simple" xml:space="preserve">
    <value>.IsUnicode</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Distinct.Returns" xml:space="preserve">
    <value>List&lt;T&gt;</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Parameters.wParam.Description" xml:space="preserve">
    <value>The wParam value to post, casted to IntPtr.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Description" xml:space="preserve">
    <value>Sends a set text message to the control or window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromClassOrTitle.Parameters.windowTitle.Description" xml:space="preserve">
    <value>Exact title of the control or window class.</value>
  </data>
  <data name="ActionStepMethods.GetStoredPoint.DisplayName" xml:space="preserve">
    <value>Get Stored Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleShow.Name" xml:space="preserve">
    <value>ConsoleShow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreNumber.Example.Simple" xml:space="preserve">
    <value>sp.StoreNumber('test', 123);</value>
  </data>
  <data name="ActionStepMethods.SendAltUp.DisplayName" xml:space="preserve">
    <value>Send Alt Up</value>
  </data>
  <data name="LoadScriptTab" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ChangeCulture.Parameters.cultureName.Description" xml:space="preserve">
    <value>The name of the language culture to make the current culture. Examples: 'en-US', 'pl-PL', 'zh-CN'.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PlayTemporaryMacro.Name" xml:space="preserve">
    <value>PlayTemporaryMacro</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesOnDesktop.Description" xml:space="preserve">
    <value>Returns a array of strings containing each file selected in the Desktop window list view.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleCopySystem.Name" xml:space="preserve">
    <value>ConsoleCopySystem</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHistoryScript.Parameters.value.Type" xml:space="preserve">
    <value>HistoryScript</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreBool.Parameters.value.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHistoryScript.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredPoints.Name" xml:space="preserve">
    <value>DeleteAllStoredPoints</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHandle.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreBool.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ActionStepMethods.SendControlUp.HelpTip" xml:space="preserve">
    <value>Simulates releasing the left Control key.</value>
  </data>
  <data name="TextExpansionTypeHTMLDescription" xml:space="preserve">
    <value>Copies the HTML to the clipboard and pastes it in the current window. This method is very fast, but can run into issues if the clipboard is in use by another program.
Copy the formatted HTML from another program, like a web browser, and paste it into the window below.</value>
  </data>
  <data name="ScriptHelpSimpleExampleText" xml:space="preserve">
    <value>Simple Example</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Exit.Example.Simple" xml:space="preserve">
    <value>sp.Exit();</value>
  </data>
  <data name="tabPreferencesHintForeColorLabel" xml:space="preserve">
    <value>Text Color</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Parameters.subKey.Description" xml:space="preserve">
    <value>Name of the subkey within the baseKey to read the value from.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.useShellExecute.Description" xml:space="preserve">
    <value>If true, uses the Windows shell to execute the program or open the file. False executes only a program directly.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Name" xml:space="preserve">
    <value>CreateTimer</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.DialogID.Example.Simple" xml:space="preserve">
    <value>.DialogID</value>
  </data>
  <data name="ActionStepMethods.GetDesktopWindowListView.HelpTip" xml:space="preserve">
    <value>Returns a SystemWindow object for the Desktop ListView window, which is where the desktop icons reside.</value>
  </data>
  <data name="ClearScriptTooManyErrorsMessage" xml:space="preserve">
    <value>More than 5 script errors have occurred in a row within 10 seconds. Script execution disabled until reload.</value>
  </data>
  <data name="ActionStepMethods.DisableNext.DisplayName" xml:space="preserve">
    <value>Disable Next</value>
  </data>
  <data name="ActionStepMethods.GetStoredHandle.HelpTip" xml:space="preserve">
    <value>Returns an handle previously stored using StoreHandle or StrokesPlus.StoredValues.Handles.Set</value>
  </data>
  <data name="frmSyncSettingsListIPAddress" xml:space="preserve">
    <value>IP Address</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Parameters.rows.Description" xml:space="preserve">
    <value>The number of row to divide the rectangle into.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKey.Parameters.vk.Description" xml:space="preserve">
    <value>The VirtualKeyCode (vk.XX) value to send.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Thread.Example.Simple" xml:space="preserve">
    <value>.Thread</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.CheckState.Example.Simple" xml:space="preserve">
    <value>.CheckState</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Description" xml:space="preserve">
    <value>Returns a array of strings containing each file selected in the specified Explorer window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyDown.Description" xml:space="preserve">
    <value>Simulates pressing the specified virtual key down.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredNumbers.HelpTip" xml:space="preserve">
    <value>Deletes all stored numbers.</value>
  </data>
  <data name="ActionStepMethods.GetObjectPropertyByName.DisplayName" xml:space="preserve">
    <value>Get Object Property By Name</value>
  </data>
  <data name="BeforeAfterActionOwn" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="ActionStepMethods.SendAltDown.DisplayName" xml:space="preserve">
    <value>Send Alt Down</value>
  </data>
  <data name="ActionStepMethods.Disable.HelpTip" xml:space="preserve">
    <value>Disable StrokesPlus.net.</value>
  </data>
  <data name="ActionStepMethods.RestoreWindow.DisplayName" xml:space="preserve">
    <value>Restore Window</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHistoryScript.Parameters.value.Description" xml:space="preserve">
    <value>Value of the history script to store.</value>
  </data>
  <data name="HotkeyConsumeLabel" xml:space="preserve">
    <value>Consume</value>
  </data>
  <data name="LeaveOnStack" xml:space="preserve">
    <value>Leave On Stack</value>
  </data>
  <data name="ActionStepMethods.CloseWindow.DisplayName" xml:space="preserve">
    <value>Close Window</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Example.Simple" xml:space="preserve">
    <value>sp.GetRegions(action.Window.Rectangle, 3, 3);</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ExecutablePath.Example.Simple" xml:space="preserve">
    <value>.ExecutablePath</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredDecimal.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredDecimal.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendShiftUp.Name" xml:space="preserve">
    <value>SendShiftUp</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredString.Description" xml:space="preserve">
    <value>Deletes a string previously stored string using sp.StoreString or StrokesPlus.StoredValues.Strings.Set</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineType.Parameters.name.Description" xml:space="preserve">
    <value>Comma-separated list of TypeAttributes to apply to the type.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ParentSymmetric.Description" xml:space="preserve">
    <value>Returns a SystemWindow object for the parent control or window, but only if the control or window is a descendant of the .Parent.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.LastFocusControl.Description" xml:space="preserve">
    <value>Returns a SystemWindow object for the last active control.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineType.Parameters.name.Name" xml:space="preserve">
    <value>typeAttributes</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineType.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="tabPreferencesRelayGestureOnNoMatch" xml:space="preserve">
    <value>Relay Gesture on No Match</value>
  </data>
  <data name="RegionTypeGrid" xml:space="preserve">
    <value>Grid</value>
  </data>
  <data name="RegionTypeNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DesktopWindow.Returns" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Enable.Name" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredHistoryScripts.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Description" xml:space="preserve">
    <value>Compiles a custom static C# class to host the delegate for a native API callback pointer.</value>
  </data>
  <data name="frmAccountLoginPasswordLabel" xml:space="preserve">
    <value>Forum Password</value>
  </data>
  <data name="MacroRecordBeforeStartMessage" xml:space="preserve">
    <value>Press Control+Break (Pause/Break key) to stop recording.

You can also click the Stop button, but the script will include those click events near the end, so you probably will want to remove them.

Make sure you have the window you want to work with right behind this one before you click OK.</value>
  </data>
  <data name="ActionStepMethods.GetColorFromRGB.DisplayName" xml:space="preserve">
    <value>Get Color From RGB</value>
  </data>
  <data name="ActionStepMethods.GetForegroundWindow.HelpTip" xml:space="preserve">
    <value>Returns a SystemWindow object of the current foreground window.</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="ActionStepMethods.SetCustomFloaterText.DisplayName" xml:space="preserve">
    <value>Set Custom Floater Text</value>
  </data>
  <data name="ActionStepMethodCategories.Screens.DisplayName" xml:space="preserve">
    <value>Screens</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteTimer.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteTimer.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="PlugInAddPlugIn" xml:space="preserve">
    <value>Add Plug-In</value>
  </data>
  <data name="tabPreferencesDrawGestureLabel" xml:space="preserve">
    <value>Draw Gesture</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ExecutablePath.Description" xml:space="preserve">
    <value>Returns the folder to the executable which owns the window; use ExecutableName to get the actual file name.</value>
  </data>
  <data name="ActionStepMethods.MouseClickXY.HelpTip" xml:space="preserve">
    <value>Clicks (or only sends the down/up events) the specified mouse button at the X,Y coordinates on the screen.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.CreateType.Returns" xml:space="preserve">
    <value>TypeBuilder</value>
  </data>
  <data name="TrayCaptionTraining" xml:space="preserve">
    <value>Training Mode</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetMouseCursor.Parameters.cursorType.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetMouseCursor.Parameters.cursorType.Name" xml:space="preserve">
    <value>cursorType</value>
  </data>
  <data name="ActionStepMethods.LoadCustomFloater.HelpTip" xml:space="preserve">
    <value>Load a custom floater by name. Only works if floaters are currently shown.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Parameters.label.Description" xml:space="preserve">
    <value>Label for the log entry, e.g. [label] message.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredRectangle.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the rectangle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CloseSettings.Parameters.save.Description" xml:space="preserve">
    <value>Indicates where to save (true) or discard (false) any changes.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Restore.Name" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="ClearScriptNoEngineAvailableTitle" xml:space="preserve">
    <value>No Available Engine</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.Location.Description" xml:space="preserve">
    <value>The location to display the popup list. Or use new Point() to let the popup be placed at the caret (if control supports) or the current mouse location.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SaveString.Parameters.value.Description" xml:space="preserve">
    <value>Value of the string to save.</value>
  </data>
  <data name="ActionEngineReflectionAssemblyErrorMessage" xml:space="preserve">
    <value>Failed to load:
Assembly: '{0}'</value>
  </data>
  <data name="AppDefinitionUseRegexLabel" xml:space="preserve">
    <value>Use Regex</value>
  </data>
  <data name="ScriptHelp.ActionMethod.AllWindows.Example.Simple" xml:space="preserve">
    <value>var wnds = sp.AllWindows();
var apps = '';
for (var i = 0, len = wnds.Length; i &lt; len; i++) {
	apps = apps + 'Class: ' + wnds[i].ClassName + ' Title: ' + wnds[i].Title + '\r\n';
}
clip.SetText(apps);
</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteTimer.Parameters.name.Description" xml:space="preserve">
    <value>Name of the timer.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetCommunicationsVolume.Example.Simple" xml:space="preserve">
    <value>sp.SetCommunicationsVolume(50);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.name.Description" xml:space="preserve">
    <value>Name of the method to define.</value>
  </data>
  <data name="ScriptHelpCategoryText" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.windowStyle.Description" xml:space="preserve">
    <value>State of the window when started, valid values: hidden, normal, minimized, maximized.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenPointToClientPoint.Parameters.screenPoint.Description" xml:space="preserve">
    <value>The screen Point to translate to a client point.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Example.Simple" xml:space="preserve">
    <value>var IntPtrT = host.typeOf(clr.System.IntPtr);
var BooleanT = host.typeOf(clr.System.Boolean);

//Create the JavaScript function
function EnumWindowsProc(hWnd, lParam)
{
	//Do something in the callback, invoked by the API callee
	return true;
}
//Create the delegate, the returned pointer can by passed to an API as a callback pointer
var delPtr = sp.NativeDelegate("EnumWindowsProc", [IntPtrT, IntPtrT], BooleanT);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Name" xml:space="preserve">
    <value>RegistryReadMultiString</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderByMultiple.Returns" xml:space="preserve">
    <value>IEnumerable&lt;T&gt;</value>
  </data>
  <data name="FindReplaceStatusMatchNotFound" xml:space="preserve">
    <value>Match could not be found</value>
  </data>
  <data name="ActionStepMethods.IsKeyDown.HelpTip" xml:space="preserve">
    <value>Returns True if the specified key is currently pressed (down).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHistoryScript.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the history script.</value>
  </data>
  <data name="ActionStepMethods.GetWindowRectangle.DisplayName" xml:space="preserve">
    <value>Get Window Rectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ActionStepMethods.StoreDecimal.DisplayName" xml:space="preserve">
    <value>Store Decimal</value>
  </data>
  <data name="TouchFloaterMenuMove" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="ActionStepMethods.GetWindowFromClassOrTitle.DisplayName" xml:space="preserve">
    <value>Get Window From Class Or Title</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Description" xml:space="preserve">
    <value>Reads the specified registry key and return an array of strings.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EmptyRecycleBins.Name" xml:space="preserve">
    <value>EmptyRecycleBins</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.EnsureVisible.Description" xml:space="preserve">
    <value>Moves the window to ensure it's displayed as fully as it can be on the current or closest screen.</value>
  </data>
  <data name="tabPreferencesTouchFloaterTapsForMenu" xml:space="preserve">
    <value>Floater Taps To Show Menu (3 or more)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Confirm.Example.Simple" xml:space="preserve">
    <value>var result = sp.Confirm('Message', 'Title');</value>
  </data>
  <data name="ActionStepMethods.ConsumePhysicalInput.DisplayName" xml:space="preserve">
    <value>Consume Physical Input</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindowExecuteScriptAsync.Parameters.Script.Description" xml:space="preserve">
    <value>JavaScript to execute.</value>
  </data>
  <data name="ActionStepMethods.GetCurrentMouseCursor.DisplayName" xml:space="preserve">
    <value>Get Current Mouse Cursor</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHistoryScript.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHistoryScript.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Parameters.baseKey.Type" xml:space="preserve">
    <value>RegistryKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Parameters.baseKey.Name" xml:space="preserve">
    <value>baseKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DesktopWindowListView.Example.Simple" xml:space="preserve">
    <value>var desktopSurface = sp.DesktopWindowListView();</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.wParam.Description" xml:space="preserve">
    <value>The wParam value to post, casted to IntPtr.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitleRegex.Returns" xml:space="preserve">
    <value>SystemWindow[]</value>
  </data>
  <data name="tabPreferencesHintActionFontSizeLabel" xml:space="preserve">
    <value>Action Font Size</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCommunicationsMixer.Name" xml:space="preserve">
    <value>GetCommunicationsMixer</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayText.Description" xml:space="preserve">
    <value>Displays a popup on the screen containing a title and text. Fonts, colors, opacity, duration, among other properties can be controlled. See DisplayTextInfo for more details.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetCommunicationsVolume.Name" xml:space="preserve">
    <value>SetCommunicationsVolume</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Parameters.subKey.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="LoadingOnLoadScript" xml:space="preserve">
    <value>Executing load script...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Parameters.subKey.Name" xml:space="preserve">
    <value>subKey</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToNextScreen.Description" xml:space="preserve">
    <value>Moves the window to the next screen as defined in Windows, returns the new Screen.</value>
  </data>
  <data name="ExclusionZoneSecondaryStrokeEvents" xml:space="preserve">
    <value>Secondary Stroke Button Clicks</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterToggle.Name" xml:space="preserve">
    <value>TouchFloaterToggle</value>
  </data>
  <data name="SettingsToolbarGestures" xml:space="preserve">
    <value>Gestures</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredValues.Example.Simple" xml:space="preserve">
    <value>sp.DeleteAllStoredValues();</value>
  </data>
  <data name="FindReplaceFindPrevious" xml:space="preserve">
    <value>Find Previous</value>
  </data>
  <data name="tabPreferencesFireOnRelease" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredDecimal.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.SetCustomFloaterLocation.HelpTip" xml:space="preserve">
    <value>Move a custom floater to a new location. Only works if floaters are currently shown.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ParentSymmetric.Name" xml:space="preserve">
    <value>ParentSymmetric</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ParentSymmetric.Type" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredObjects.Description" xml:space="preserve">
    <value>Deletes all stored objects.</value>
  </data>
  <data name="tabPreferencesFireOnLoadAction" xml:space="preserve">
    <value>Enable On Load Automation</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.AllDescendantWindows.Description" xml:space="preserve">
    <value>Returns an array of SystemWindow objects for all descendant controls or window.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Position.Name" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredRectangles.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Position.Type" xml:space="preserve">
    <value>RECT</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ChangeCulture.Name" xml:space="preserve">
    <value>ChangeCulture</value>
  </data>
  <data name="ActionDown" xml:space="preserve">
    <value>D</value>
  </data>
  <data name="ActionEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredPoint.Name" xml:space="preserve">
    <value>GetStoredPoint</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredNumbers.Description" xml:space="preserve">
    <value>Deletes all stored numbers.</value>
  </data>
  <data name="ActionStepMethods.GetWindowMainModuleFileName.HelpTip" xml:space="preserve">
    <value>Returns a string containing the window's (passed in as a SystemWindow type) main module name (usually the .EXE file), without the path.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.AllWindows.Name" xml:space="preserve">
    <value>AllWindows</value>
  </data>
  <data name="tabPreferencesTextExpansionClipboardPasteDelay" xml:space="preserve">
    <value>Delay Before Paste (ms)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Parameters.point.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.useAnsi.Description" xml:space="preserve">
    <value>Pass true to specificy ANSI mode, false for Unicode.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Parameters.point.Name" xml:space="preserve">
    <value>point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Description" xml:space="preserve">
    <value>Opens a file or runs a program.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Parameters.message.Description" xml:space="preserve">
    <value>The message value to post, casted to uint.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendShiftDown.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredPoint.DisplayName" xml:space="preserve">
    <value>Delete Stored Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CloseSettings.Example.Simple" xml:space="preserve">
    <value>sp.CloseSettings(true);</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.WindowBelow.Example.Simple" xml:space="preserve">
    <value>.WindowBelow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.waitForExit.Description" xml:space="preserve">
    <value>If true, this method will wait until the program has exited, which returns the exit code from the program.</value>
  </data>
  <data name="ActionStepMethods.ReplaceText.DisplayName" xml:space="preserve">
    <value>Replace Text</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SupportsSelection.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMethod.Description" xml:space="preserve">
    <value>Returns a MethodInfo object for the specified function.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Where.Returns" xml:space="preserve">
    <value>IEnumerable&lt;T&gt;</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Parameters.script.Description" xml:space="preserve">
    <value>The script to execute upon starting and at each interval.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenPointToClientPoint.Name" xml:space="preserve">
    <value>ScreenPointToClientPoint</value>
  </data>
  <data name="HintText" xml:space="preserve">
    <value>Hint Text</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayImage.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileProductVersionInfo.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunOrActivate.Example.Simple" xml:space="preserve">
    <value>sp.RunOrActivate('C:\\Windows\\System32\\notepad.exe');</value>
  </data>
  <data name="ActionStepMethods.SendVirtualKey.DisplayName" xml:space="preserve">
    <value>Send Virtual Key</value>
  </data>
  <data name="ActionStepMethods.ShowConfirm.DisplayName" xml:space="preserve">
    <value>Show Confirm Popup</value>
  </data>
  <data name="tabPreferencesUseScriptEnginePool" xml:space="preserve">
    <value>Use Script Engine Pool*</value>
  </data>
  <data name="LoadingSettingsIgnoreList" xml:space="preserve">
    <value>Initializing Ignore List section...</value>
  </data>
  <data name="RegionTypeCustom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="ActionStepMethods.GetGreenValueFromColor.HelpTip" xml:space="preserve">
    <value>Returns the value of the green (G) from a Color structure.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendAltUp.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.SendWinUp.HelpTip" xml:space="preserve">
    <value>Simulates releasing the left Win key.</value>
  </data>
  <data name="ScriptHelpCategoryNameTimers" xml:space="preserve">
    <value>Timers</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PlaySound.Name" xml:space="preserve">
    <value>PlaySound</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCommunicationsMixer.Description" xml:space="preserve">
    <value>Returns a AudioSwitcher.AudioApi.CoreAudio.CoreAudioDevice object which allows controlling the default communications mixer/device.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegateList.Name" xml:space="preserve">
    <value>NativeDelegateList</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MethodBuilder.AddMethodImplAttributes.Parameters.attributes.Description" xml:space="preserve">
    <value>Comma-separated list of System.Reflection.MethodImplAttributes.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecuteStoredScript.Parameters.name.Description" xml:space="preserve">
    <value>Name of the stored history script.</value>
  </data>
  <data name="FindReplaceMenuBeginString" xml:space="preserve">
    <value>^ Beginning of String or Line</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendToBottom.Name" xml:space="preserve">
    <value>SendToBottom</value>
  </data>
  <data name="ScriptHelp.ActionMethod.FindImageWithinImage.Parameters.needle.Name" xml:space="preserve">
    <value>needle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.FindImageWithinImage.Parameters.needle.Type" xml:space="preserve">
    <value>System.Drawing.Image</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.Items.Name" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.Items.Type" xml:space="preserve">
    <value>List&lt;PopupListItem&gt; (can be sent as JavaScript array also)</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RootWindow.Description" xml:space="preserve">
    <value>Returns a SystemWindow object for the root control or window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleCopyUser.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelpClassPopupMenuInfoEx" xml:space="preserve">
    <value>PopupMenuInfoEx</value>
  </data>
  <data name="ActionStepMethods.ContainsText.DisplayName" xml:space="preserve">
    <value>Contains Text</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PlaySound.Parameters.filePath.Name" xml:space="preserve">
    <value>filePath</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PlaySound.Parameters.filePath.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Returns" xml:space="preserve">
    <value>IntPtr</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegateList.Example.Full" xml:space="preserve">
    <value>var IntPtrT = host.typeOf(clr.System.IntPtr);
var BooleanT = host.typeOf(clr.System.Boolean);

//Create the JavaScript functions
function EnumWindowsProc(hWnd, lParam)
{
	//Do something in the callback, invoked by the API callee
	return true;
}
function EnumWindowsProcA(hWnd, lParam)
{
	//Do something in the callback, invoked by the API callee
	return true;
}
var fnptrList = sp.NativeDelegateList([["EnumWindowsProc", [IntPtrT, IntPtrT], BooleanT],
                                       ["EnumWindowsProcA", [IntPtrT, IntPtrT], BooleanT]]);

// fnptrList[0].Key == "EnumWindowsProc"
// fnptrList[0].Value.ToInt64() == 2484548244844

// fnptrList[1].Key == "EnumWindowsProcA"
// fnptrList[1].Value.ToInt64() == 2484548243804</value>
  </data>
  <data name="ActionStepMethods.SetMainFloaterLocation.DisplayName" xml:space="preserve">
    <value>Set Main Floater Location</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetCustomFloaterLocation.Parameters.point.Description" xml:space="preserve">
    <value>Point representing the new location.</value>
  </data>
  <data name="ActionStepMethods.ReloadScriptEnginePool.DisplayName" xml:space="preserve">
    <value>Reload Script Engine Pool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.forEach.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Parameters.message.Description" xml:space="preserve">
    <value>Message to log.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMethods.Example.Simple" xml:space="preserve">
    <value>var spms = sp.GetMethods();</value>
  </data>
  <data name="ActionStepMethods.GetControlFromPointXY.HelpTip" xml:space="preserve">
    <value>Returns the control at the specified X,Y coordinates on the screen.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.lParam.Type" xml:space="preserve">
    <value>object (casts to int then IntPtr)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ToggleCommunicationsMute.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageSetTextObj.Parameters.lParam.Name" xml:space="preserve">
    <value>lParam</value>
  </data>
  <data name="ActionStepMethodCategories.Stack.DisplayName" xml:space="preserve">
    <value>Stack</value>
  </data>
  <data name="ActionStepMethods.Else.HelpTip" xml:space="preserve">
    <value>Steps within an Else block are executed when the conditions for any If or ElseIf blocks were not met.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitlePartial.Parameters.partialTitle.Name" xml:space="preserve">
    <value>partialTitle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowsFromTitlePartial.Parameters.partialTitle.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileProductVersionInfo.Name" xml:space="preserve">
    <value>GetFileProductVersionInfo</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MethodBuilder.AddMethodImplAttributes.Description" xml:space="preserve">
    <value>Adds a MethodImplAttributes flag to the current value.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CloseSettings.Parameters.save.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MessageBox.Parameters.message.Description" xml:space="preserve">
    <value>Title of the message box window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CloseSettings.Parameters.save.Name" xml:space="preserve">
    <value>save</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.FitToScreen.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredRectangle.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Reload.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.SendVirtualKeyUp.HelpTip" xml:space="preserve">
    <value>Simulates releasing the specified key.</value>
  </data>
  <data name="tabPreferencesEnableV8ScriptDebugging" xml:space="preserve">
    <value>Enable V8 Script Debugging*</value>
  </data>
  <data name="CommandParameters" xml:space="preserve">
    <value>Command Parameters</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TogglePlaybackMute.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="StackEmptyErrorMessage" xml:space="preserve">
    <value>Stack is empty</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.AbsoluteRectangle.Name" xml:space="preserve">
    <value>AbsoluteRectangle</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.HWnd.Example.Simple" xml:space="preserve">
    <value>.HWnd</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Run.Description" xml:space="preserve">
    <value>Opens a file or runs a program. This is the same as typing something in the Run dialog (Win+R) and pressing Enter. Use sp.RunProgram for more specific execution options.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.AbsoluteRectangle.Type" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="ModifierCaptureAfter" xml:space="preserve">
    <value>After</value>
  </data>
  <data name="ModifierCaptureLabel" xml:space="preserve">
    <value>Capture Modifiers</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ReloadScriptEnginePool.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.GetStoredDecimal.HelpTip" xml:space="preserve">
    <value>Returns a decimal previously stored using StoreDecimal</value>
  </data>
  <data name="ActionEngineMethodExecutionFailedTitle" xml:space="preserve">
    <value>Action Step Error</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsumePhysicalInput.Name" xml:space="preserve">
    <value>ConsumePhysicalInput</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMethod.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMethod.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreRectangle.Name" xml:space="preserve">
    <value>StoreRectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.typeAttributes.Description" xml:space="preserve">
    <value>(optional) Comma-separated list of TypeAtrtribute for the enum.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ClientPointToScreenPoint.Name" xml:space="preserve">
    <value>ClientPointToScreenPoint</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ExecutableName.Name" xml:space="preserve">
    <value>ExecutableName</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ExecutableName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSystemMetricsByIndex.Name" xml:space="preserve">
    <value>GetSystemMetricsByIndex</value>
  </data>
  <data name="LeaveOnStackTip" xml:space="preserve">
    <value>Retrieve the value, but leave it on the stack for subsequent steps.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterGetLocation.Name" xml:space="preserve">
    <value>TouchFloaterGetLocation</value>
  </data>
  <data name="ActionEngineMethodNotFoundTitle" xml:space="preserve">
    <value>Action Step Failed</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RefreshNativeModules.Description" xml:space="preserve">
    <value>Refreshes the dynamic native modules and delegates within the script engine type list. These would be any types or objects within NativeModules. or NativeDelegates.</value>
  </data>
  <data name="tabPreferencesFireOnLeftClick" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ScriptHelpCategoryTextNativeDynamic" xml:space="preserve">
    <value>These methods allow you to build dynamic modules, types, and methods via System.Reflection, as well as create delegate pointers for callbacks to script functions.

See the Extensions category for additional related extension methods relating to these methods.
	
See this post for more details: https://forum.strokesplus.net/posts/m11783-Example---Test-Code-for-Native-Binding</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendControlDown.Description" xml:space="preserve">
    <value>Simulates pressing the left Control key down.</value>
  </data>
  <data name="ActionStepMethods.SetCustomFloaterSize.HelpTip" xml:space="preserve">
    <value>Set the size of the custom floater. Only works if floaters are currently shown.</value>
  </data>
  <data name="TextExpansionNoRTFMessage" xml:space="preserve">
    <value>The clipboard does not contain Rich Text Format.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreObject.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the object.</value>
  </data>
  <data name="NewParameterName" xml:space="preserve">
    <value>NewParameterName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendAltDown.Name" xml:space="preserve">
    <value>SendAltDown</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleIsVisible.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterCloseCustomFloater.Example.Simple" xml:space="preserve">
    <value>sp.TouchFloaterCloseCustomFloater('FloaterName');</value>
  </data>
  <data name="ImportCompleteObjectTitle" xml:space="preserve">
    <value>Load New Settings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderByMultiple.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="BeforeActionScriptLabel" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredPoints.HelpTip" xml:space="preserve">
    <value>Deletes all stored points.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreString.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Parameters.keyName.Description" xml:space="preserve">
    <value>Name of the key within the subkey to read the value from.</value>
  </data>
  <data name="ExclusionZonePrimaryStrokeEvents" xml:space="preserve">
    <value>Primary Stroke Button Clicks</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Reload.Description" xml:space="preserve">
    <value>Stops all scripts, timers, and reloads StrokesPlus.net.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.CommandLine.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ReferenceFooterText" xml:space="preserve">
    <value>Additional references are .NET Framework libraries that will be loaded into the Script Engine the same way System.Drawing.dll is, for example. Note that if you add or remove any references, you need to restart StrokesPlus.net.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.CommandLine.Name" xml:space="preserve">
    <value>CommandLine</value>
  </data>
  <data name="ScriptHelp.ActionMethod.AllWindows.Returns" xml:space="preserve">
    <value>SystemWindow[]</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendUnicodeString.Name" xml:space="preserve">
    <value>SendUnicodeString</value>
  </data>
  <data name="ActionStepMethods.RunStoreApp.DisplayName" xml:space="preserve">
    <value>Run Store App</value>
  </data>
  <data name="TrainingModeGestureLengthTitle" xml:space="preserve">
    <value>Gesture Too Short</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterSetLocation.Parameters.point.Description" xml:space="preserve">
    <value>Point representing the new location.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleEnableTimestamps.Parameters.value.Description" xml:space="preserve">
    <value>true or false.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.AbsoluteRectangle.Description" xml:space="preserve">
    <value>Returns a Rectangle object for the window frame, including window borders.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTemporaryMacroScript.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Alpha.Name" xml:space="preserve">
    <value>Alpha</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Alpha.Type" xml:space="preserve">
    <value>byte</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.NoFrame.Name" xml:space="preserve">
    <value>NoFrame</value>
  </data>
  <data name="ActionStepMethods.SetCustomFloaterLocation.DisplayName" xml:space="preserve">
    <value>Set Custom Floater Location</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.NoFrame.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendModifiedVKeys.Example.Simple" xml:space="preserve">
    <value>sp.SendModifiedVKeys([vk.LCONTROL, vk.LMENU], [vk.VK_A, vk.VK_C]);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.TextAlternateColor.Type" xml:space="preserve">
    <value>Color struct (.NET, optional)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.TextAlternateColor.Name" xml:space="preserve">
    <value>TextAlternateColor</value>
  </data>
  <data name="SettingsToolbarApplications" xml:space="preserve">
    <value>Applications</value>
  </data>
  <data name="ImportConfirmTitle" xml:space="preserve">
    <value>Confirm Import</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Name" xml:space="preserve">
    <value>GetRegionFromPoint</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHistoryScript.Name" xml:space="preserve">
    <value>DeleteStoredHistoryScript</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Parameters.label.Name" xml:space="preserve">
    <value>label</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Parameters.label.Type" xml:space="preserve">
    <value>string (optional)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredRectangle.Returns" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="Returns" xml:space="preserve">
    <value>Returns:</value>
  </data>
  <data name="ActionStepMethods.Delay.DisplayName" xml:space="preserve">
    <value>Delay</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSystemMetricsByIndex.Example.Simple" xml:space="preserve">
    <value>var Int32T = host.type('System.Int32');
var intValue = host.cast(Int32T, SystemMetric.SM_XVIRTUALSCREEN);
sp.GetSystemMetricsByIndex(intValue);</value>
  </data>
  <data name="FindReplaceSearchTypeRegEx" xml:space="preserve">
    <value>Regular Expression</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Parameters.pt.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Parameters.pt.Name" xml:space="preserve">
    <value>pt</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RelayGesture.Parameters.points.Type" xml:space="preserve">
    <value>Point[]</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RelayGesture.Parameters.points.Name" xml:space="preserve">
    <value>points</value>
  </data>
  <data name="IgnoreAppDefinitionDisableOnFocus" xml:space="preserve">
    <value>Disable S+ if this App Gains Focus</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowMouseCursor.Description" xml:space="preserve">
    <value>Shows the mouse cursor after a call to sp.HideMouseCursor. NOTE: This simply resets all cursors to the Windows default, overwriting any custom cursor selections.</value>
  </data>
  <data name="ActionStepMethods.SetCustomFloaterKeyMode.DisplayName" xml:space="preserve">
    <value>Set Custom Floater Key Mode</value>
  </data>
  <data name="ActionStepMethods.StoreObject.HelpTip" xml:space="preserve">
    <value>Stores an object using the specified name. Value can be retrieved via GetStoredObject.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPoint.Parameters.x.Description" xml:space="preserve">
    <value>Left coordinate.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.Font.Type" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.Font.Name" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Parameters.keyName.Name" xml:space="preserve">
    <value>keyName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Parameters.keyName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeModule.Example.Simple" xml:space="preserve">
    <value>var defaultModBuilder = sp.NativeModule();
var apiModBuilder = sp.NativeModule("WinAPI");</value>
  </data>
  <data name="FindReplaceSearchTypeLabel" xml:space="preserve">
    <value>Search Type</value>
  </data>
  <data name="FloaterLayoutsNewTitle" xml:space="preserve">
    <value>New Layout</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Returns" xml:space="preserve">
    <value>IntPtr</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegateList.Parameters.delegateList.Name" xml:space="preserve">
    <value>delegateList</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegateList.Parameters.delegateList.Type" xml:space="preserve">
    <value>dynamic array</value>
  </data>
  <data name="ActionStepMethods.MinimizeWindow.HelpTip" xml:space="preserve">
    <value>Minimizes the specified window (passed in as a SystemWindow type).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.ID.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.ID.Name" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="TextExpansionTypeTextClipDescription" xml:space="preserve">
    <value>Copies the text to the clipboard and pastes it in the current window. This method is very fast, but can run into issues if the clipboard is in use by another program.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromClassOrTitle.Parameters.className.Name" xml:space="preserve">
    <value>className</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromClassOrTitle.Parameters.className.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleClearUser.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="tabGesturesMenuToggleActive" xml:space="preserve">
    <value>Toggle Active</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHandle.Name" xml:space="preserve">
    <value>GetStoredHandle</value>
  </data>
  <data name="UpdateCheckRunErrorTitle" xml:space="preserve">
    <value>Update Failed</value>
  </data>
  <data name="ActionEngineMethodParameterAssignmentErrorTitle" xml:space="preserve">
    <value>Action Step Parameter Error</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.ProfileName.Description" xml:space="preserve">
    <value>Name of the user data sub-folder to use for this WebView2 session; will create new or reuse previously created folder. This is helpful for using different browsing sessions.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredObject.Example.Simple" xml:space="preserve">
    <value>var storedobj = sp.GetStoredObject('test');</value>
  </data>
  <data name="tabPreferencesUseBeforeActionScript" xml:space="preserve">
    <value>Enable Before Action Automation</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterIsCustomFloaterLoaded.Description" xml:space="preserve">
    <value>Returns true if the floater matching the name is currently loaded.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredPoint.Returns" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Parameters.noWindow.Description" xml:space="preserve">
    <value>Specifies that no window should be created for the process.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RefreshNativeModules.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="tabPreferencesPenOpacityLabel" xml:space="preserve">
    <value>Stroke Opacity</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Sleep.Name" xml:space="preserve">
    <value>Sleep</value>
  </data>
  <data name="DirectInput" xml:space="preserve">
    <value>Direct Input</value>
  </data>
  <data name="ActionStepMethods.GetScreenFromPoint.DisplayName" xml:space="preserve">
    <value>Get Screen From Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPlaybackMixer.Description" xml:space="preserve">
    <value>Returns a AudioSwitcher.AudioApi.CoreAudio.CoreAudioDevice object which allows controlling the default playback mixer/device.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderByMultiple.Parameters.queryString.Description" xml:space="preserve">
    <value>Custom format string used to parse out the sorting operations. Property|Sort where Sort 0 = ascending and Sort 1 = descending. For example: "Category|0,Description|1". - sort by Category ASC first, then by Description DESC.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHandle.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.ReloadScriptEnginePool.HelpTip" xml:space="preserve">
    <value>Stops all scripts and reloads the script engine pool.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Parameters.up.Name" xml:space="preserve">
    <value>up</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Parameters.up.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="AppDefinitionFilePath" xml:space="preserve">
    <value>Module Path:</value>
  </data>
  <data name="AppDefinitionFileName" xml:space="preserve">
    <value>Module Name (EXE):</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Disable.Name" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="ActionStepMethods.SetObjectFieldByName.DisplayName" xml:space="preserve">
    <value>Set Object Field By Name</value>
  </data>
  <data name="LoadingStoppingMouseHook" xml:space="preserve">
    <value>Stopping mouse hook...</value>
  </data>
  <data name="AppDefinitionRootClass" xml:space="preserve">
    <value>Root Class Name:</value>
  </data>
  <data name="ScriptHelpCategoryTextInputAndDisplay" xml:space="preserve">
    <value>Functions for displaying and collecting information from the user.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileProductVersionInfo.Parameters.filePath.Name" xml:space="preserve">
    <value>filePath</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileProductVersionInfo.Parameters.filePath.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="FindReplaceFindAllMarkLine" xml:space="preserve">
    <value>Mark Line</value>
  </data>
  <data name="tabPreferencesFireOnRightClick" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Description" xml:space="preserve">
    <value>Logs an information event to the User log in the console window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PlaySound.Description" xml:space="preserve">
    <value>Plays a .wav file. Does not support other sound formats.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreDecimal.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the decimal.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Parameters.keyName.Description" xml:space="preserve">
    <value>Name of the key within the subkey to read the value from.</value>
  </data>
  <data name="ActionStepMethods.EmptyRecycleBins.HelpTip" xml:space="preserve">
    <value>Empties ALL recycle bins.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredBool.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the boolean.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Parameters.baseKey.Name" xml:space="preserve">
    <value>baseKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Parameters.baseKey.Type" xml:space="preserve">
    <value>RegistryKey</value>
  </data>
  <data name="tabGesturesDeleteGestureConfirmMessage" xml:space="preserve">
    <value>Are you sure you want to delete {0} gesture(s)?</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.Create.Example.Simple" xml:space="preserve">
    <value>var myTypeTB = sp.NativeModule().DefineType("MyType", "Class,Public,SequentialLayout,Serializable");
myTypeTB.Create();
var newType = new NativeModules.MyType();</value>
  </data>
  <data name="ActionStepMethods.RemoveItemsFromStack.DisplayName" xml:space="preserve">
    <value>Remove Items From Stack</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreNumber.Parameters.value.Description" xml:space="preserve">
    <value>Value of the number to store.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Description" xml:space="preserve">
    <value>Alias for TypeBuilder.DefineMethod to simplify obtaining an instantiated System.Reflection.Emit.MethodBuilder object.</value>
  </data>
  <data name="TrayMenuDisabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Pause.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenFromPoint.Parameters.pt.Name" xml:space="preserve">
    <value>pt</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetMouseCursor.Parameters.fileName.Description" xml:space="preserve">
    <value>The cursor file to load. File must be .CUR or .ANI file type.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenFromPoint.Parameters.pt.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="TextExpansionTypeHTMLViaClipboard" xml:space="preserve">
    <value>HTML via Clipboard</value>
  </data>
  <data name="ActionStepMethods.SetWindowLocationXY.HelpTip" xml:space="preserve">
    <value>Moves the window (passed in as a SystemWindow type) to specified X,Y location in screen coordinates.</value>
  </data>
  <data name="MacroRecordBeforeStartTitle" xml:space="preserve">
    <value>About to Record</value>
  </data>
  <data name="ScriptHelpScriptObjectsClickText" xml:space="preserve">
    <value>Passed into Global Actions &gt; Mouse Events &gt; Mouse Click automations, variable name in script: click

    public class Click
    {
        public MouseButtons Button;
        public bool Down; 
        public uint FWKeys;
        public System.Drawing.Point Point;
        public int X { get { return Point.X; } }
        public int Y { get { return Point.Y; } }
        //see SystemWindow information for more details
        public SystemWindow Window;
        //see SystemWindow information for more details
        public SystemWindow Control;
    }</value>
  </data>
  <data name="tabPreferencesSecondaryPenColorLabel" xml:space="preserve">
    <value>Secondary Stroke Color</value>
  </data>
  <data name="SettingsApplyCancelTitle" xml:space="preserve">
    <value>Lose Changes?</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleShowOnSystemError.Parameters.value.Description" xml:space="preserve">
    <value>true or false.</value>
  </data>
  <data name="ActionStepMethods.ConvertToType.HelpTip" xml:space="preserve">
    <value>Returns a new object casted to the specified type.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Maximized.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Maximized.Name" xml:space="preserve">
    <value>Maximized</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MethodBuilder.AddMethodImplAttributes.Name" xml:space="preserve">
    <value>MethodBuilder.AddMethodImplAttributes</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleShow.Example.Simple" xml:space="preserve">
    <value>sp.ConsoleShow();</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.FitToScreen.Name" xml:space="preserve">
    <value>FitToScreen</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.typeAttributes.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.typeAttributes.Name" xml:space="preserve">
    <value>typeAttributes</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.values.Description" xml:space="preserve">
    <value>Array of values for each field (same order and count).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDeleteSubKey.Name" xml:space="preserve">
    <value>RegistryDeleteSubKey</value>
  </data>
  <data name="tabPreferencesMouseWheelTick" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindowExecuteScriptAsync.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.GetCurrentExplorerPath.HelpTip" xml:space="preserve">
    <value>Returns a string containing the current path in the Explorer window. Special folders will only return the name, e.g. Network, Control Panel.</value>
  </data>
  <data name="SettingsToolbarAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="tabPreferencesDrawWindowAlwaysOnTop" xml:space="preserve">
    <value>Draw Surface Always on Top</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PlayTemporaryMacro.Example.Full" xml:space="preserve">
    <value>//Here I have a hotkey which is Control+Win+A, so I will send the up event for all combinations of the keys first to make sure none of them get stuck in the down state.
sp.SendVKeyUp(vk.LCONTROL);
sp.SendVKeyUp(vk.RCONTROL);
sp.SendVKeyUp(vk.CONTROL);
sp.SendVKeyUp(vk.LWIN);
sp.SendVKeyUp(vk.RWIN);
sp.SendVKeyUp(vk.VK_A);
sp.PlayTemporaryMacro();</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredStrings.HelpTip" xml:space="preserve">
    <value>Deletes all stored strings.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineType.Returns" xml:space="preserve">
    <value>TypeBuilder</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterIsCustomFloaterLoaded.Name" xml:space="preserve">
    <value>TouchFloaterIsCustomFloaterLoaded</value>
  </data>
  <data name="ExclusionZoneHorizontalWheelEvents" xml:space="preserve">
    <value>Horizontal Mouse Wheel Scroll Events</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHistoryScript.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.If.HelpTip" xml:space="preserve">
    <value>Compares value1 and value2, if they are equal then the steps following the If are executed. If they are not equal, any ElseIf steps within the If block will be evaluated and executed where appropriate. Otherwise the steps within the Else block will be executed, if it exists.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendWinUp.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="frmAppActionListTab" xml:space="preserve">
    <value>Action List</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Parameters.name.Description" xml:space="preserve">
    <value>Name of the timer.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Parameters.subKey.Description" xml:space="preserve">
    <value>Name of the subkey within the baseKey to read the value from.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NextApplication.Name" xml:space="preserve">
    <value>NextApplication</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredObject.Name" xml:space="preserve">
    <value>GetStoredObject</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DesktopWindow.Example.Simple" xml:space="preserve">
    <value>var desktopWindow = sp.DesktopWindow();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterToggleOthers.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Distinct.Name" xml:space="preserve">
    <value>IEnumerable.Distinct</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunStoreApp.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.SendAltUp.HelpTip" xml:space="preserve">
    <value>Simulates releasing the left Alt key.</value>
  </data>
  <data name="ActionStepMethods.SetCustomFloaterText.HelpTip" xml:space="preserve">
    <value>Set the text of the custom floater. Only works if floaters are currently shown.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeys.Parameters.str.Name" xml:space="preserve">
    <value>str</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeys.Parameters.str.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="MacroOptionsShowRecordStartMessageCheck" xml:space="preserve">
    <value>Show message before recording</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Parameters.horizontal.Name" xml:space="preserve">
    <value>horizontal</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Parameters.horizontal.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ImportApplyButton" xml:space="preserve">
    <value>Apply Import</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetCommunicationsVolume.Parameters.newVolumeLevel.Description" xml:space="preserve">
    <value>The new volume level.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunStoreApp.Parameters.packageName.Name" xml:space="preserve">
    <value>packageName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunStoreApp.Parameters.packageName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RECT.Description" xml:space="preserve">
    <value>Returns a RECT object for the absolute position of the control or window on the screen, does not include window frame borders. Probably more convenient to use .Rectangle instead. Use .Position for relative location of controls.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.DialogID.Description" xml:space="preserve">
    <value>Returns the dialog ID for the control or window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloatersReset.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.GetScreenFromHandle.HelpTip" xml:space="preserve">
    <value>Returns the screen which contains the largest portion of the object referred to by the specified handle.</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredBool.DisplayName" xml:space="preserve">
    <value>Delete Stored Bool</value>
  </data>
  <data name="frmAccountLoginUserNameLabel" xml:space="preserve">
    <value>Forum User Name</value>
  </data>
  <data name="ActionStepMethods.IsMainFloaterShown.DisplayName" xml:space="preserve">
    <value>Is Main Floater Shown</value>
  </data>
  <data name="tabPreferencesSecondaryStrokeButtonGroupText" xml:space="preserve">
    <value>Secondary Stroke Button</value>
  </data>
  <data name="frmSelectGestureNoGestureButton" xml:space="preserve">
    <value>No Gesture</value>
  </data>
  <data name="AppDefinitionRootText" xml:space="preserve">
    <value>Root Title/Text:</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenFromPoint.Returns" xml:space="preserve">
    <value>Screen</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendModifiedVKeys.Parameters.Modifiers.Name" xml:space="preserve">
    <value>Modifiers</value>
  </data>
  <data name="ActionStepMethods.SetCustomFloaterOpacity.HelpTip" xml:space="preserve">
    <value>Set the opacity of the custom floater. Only works if floaters are currently shown.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendModifiedVKeys.Parameters.Modifiers.Type" xml:space="preserve">
    <value>dynamic</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleShowOnSystemError.Parameters.value.Name" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleShowOnSystemError.Parameters.value.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSystemMetricsByIndex.Parameters.index.Description" xml:space="preserve">
    <value>Index of the desired SystemMetric</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Name" xml:space="preserve">
    <value>ModuleBuilder.DefineEnum</value>
  </data>
  <data name="ActionStepMethods.CloseCustomFloater.HelpTip" xml:space="preserve">
    <value>Close a custom floater by name. Only works if floaters are currently shown.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCommunicationsCaptureMixer.Description" xml:space="preserve">
    <value>Returns a AudioSwitcher.AudioApi.CoreAudio.CoreAudioDevice object which allows controlling the default communications capture (record) mixer/device.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecuteStoredScript.Name" xml:space="preserve">
    <value>ExecuteStoredScript</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Refresh.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyDown.Example.Simple" xml:space="preserve">
    <value>sp.SendKeyDown('a');</value>
  </data>
  <data name="ScriptHelpParametersText" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPlaybackVolume.Description" xml:space="preserve">
    <value>Returns the current volume level of the default playback mixer/device. (0 - 100)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineType.Parameters.typeName.Description" xml:space="preserve">
    <value>The name of the type to create.</value>
  </data>
  <data name="TextExpansionTypeSendKeysDescription" xml:space="preserve">
    <value>Sends the text as keystrokes using the Microsoft SendKeys format. Search online for "SendKeys Class" to learn about the supported modifiers and escape sequences.</value>
  </data>
  <data name="frmSyncSettingsDate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="tabPreferencesTextExpansionTriggerUseEnter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="ActionStepMethods.GetTopLevelWindowFromPoint.DisplayName" xml:space="preserve">
    <value>Get Top Level Window From Point</value>
  </data>
  <data name="ConsoleSetBackgroundColorMenu" xml:space="preserve">
    <value>Set Background Color</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.HTML.Description" xml:space="preserve">
    <value>HTML, file path and name, or URL to use for the start page, if IncludeBootstrapJQuery is true, HTML will be inserted inside the &lt;body&gt; tag, otherwise it will be the entire document. If a file or URL is passed in, IncludeBootstrapJQuery is ignored.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineType.Parameters.typeName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineType.Parameters.typeName.Name" xml:space="preserve">
    <value>typeName</value>
  </data>
  <data name="TouchFloaterMenuDocked" xml:space="preserve">
    <value>Docked</value>
  </data>
  <data name="tabPreferencesTouchDisableControlFloater" xml:space="preserve">
    <value>Disable Control Floater</value>
  </data>
  <data name="ActionStepMethods.SendWinDown.HelpTip" xml:space="preserve">
    <value>Simulates pressing the left Win key down.</value>
  </data>
  <data name="ActionStepMethods.GetPixelColorFromPoint.HelpTip" xml:space="preserve">
    <value>Returns a Color structure from the specified point in screen coordinates.</value>
  </data>
  <data name="ActionStepMethods.PlaySavedMacro.HelpTip" xml:space="preserve">
    <value>Plays a saved macro by name.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimerScript.Example.Simple" xml:space="preserve">
    <value>var script = sp.GetTimerScript('test');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Name" xml:space="preserve">
    <value>NativeDelegate</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.parameterTypes.Description" xml:space="preserve">
    <value>Array of .NET Types for the method parameters (in order)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCommunicationsCaptureMixer.Name" xml:space="preserve">
    <value>GetCommunicationsCaptureMixer</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenPointToClientPoint.Parameters.screenPoint.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ActionStepMethods.GetColorFromHex.HelpTip" xml:space="preserve">
    <value>Returns a new color variable from the specified hex color value.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCurrentMousePoint.Returns" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenPointToClientPoint.Parameters.screenPoint.Name" xml:space="preserve">
    <value>screenPoint</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DesktopWindowListView.Description" xml:space="preserve">
    <value>Returns a SystemWindow object for the Desktop ListView window, which is where the desktop icons reside.</value>
  </data>
  <data name="tabPreferencesTextExpansionTriggerUseSpace" xml:space="preserve">
    <value>Space</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterToggle.Description" xml:space="preserve">
    <value>Toggles the visibility of the floaters.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseMove.Description" xml:space="preserve">
    <value>Moves the mouse to the specified location.</value>
  </data>
  <data name="FindReplaceOptionsRightToLeft" xml:space="preserve">
    <value>Right To Left</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreString.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreString.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Parameters.showErrors.Name" xml:space="preserve">
    <value>showErrors</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Pause.Description" xml:space="preserve">
    <value>Wait for the specified seconds before continuing execution. Use sp.Sleep for short or precise delays.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Example.Simple" xml:space="preserve">
    <value>//Types include: Warning, Error, Info, None
//Duration (5000 ms below) can be overridden by Windows Accessibility settings
sp.ShowBalloonTip('Title', 'Message here', 'Info', 5000);
</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleCopyUser.Name" xml:space="preserve">
    <value>ConsoleCopyUser</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Parameters.showErrors.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Example.Simple" xml:space="preserve">
    <value>sp.RunProgram('notepad', '', 'open', 'normal', true, false, false);</value>
  </data>
  <data name="ScriptHelpDescriptionText" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunStoreApp.Example.Simple" xml:space="preserve">
    <value>sp.RunStoreApp('Microsoft.WindowsCalculator'); //Or just 'Calculator' if there are no other similarly named apps installed.</value>
  </data>
  <data name="BeforeActionTab" xml:space="preserve">
    <value>Before Action</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Where.Parameters.pred.Name" xml:space="preserve">
    <value>pred</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Where.Parameters.pred.Type" xml:space="preserve">
    <value>dynamic (JavaScript arrow function as boolean)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Parameters.subKey.Name" xml:space="preserve">
    <value>subKey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Parameters.columns.Description" xml:space="preserve">
    <value>The number of columns to divide the rectangle into.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Parameters.subKey.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NextApplication.Example.Simple" xml:space="preserve">
    <value>sp.NextApplication();</value>
  </data>
  <data name="ActionStepMethods.MouseMove.HelpTip" xml:space="preserve">
    <value>Moves the mouse to the specified point in screen coordinates.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RelayGesture.Parameters.button.Type" xml:space="preserve">
    <value>MouseButtons</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RelayGesture.Parameters.button.Name" xml:space="preserve">
    <value>button</value>
  </data>
  <data name="ActionStepMethods.MouseRestrictClear.DisplayName" xml:space="preserve">
    <value>Mouse Restrict Clear</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Enabled.Example.Simple" xml:space="preserve">
    <value>.Enabled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyUp.Parameters.ch.Description" xml:space="preserve">
    <value>Values of the character key.</value>
  </data>
  <data name="ActionStepMethods.PlayTemporaryMacro.DisplayName" xml:space="preserve">
    <value>Play Temporary Macro</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Parameters.functionName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegate.Parameters.functionName.Name" xml:space="preserve">
    <value>functionName</value>
  </data>
  <data name="LoadingSynapticsCheck" xml:space="preserve">
    <value>Checking for Synaptics interface...</value>
  </data>
  <data name="AddCategory" xml:space="preserve">
    <value>Add Category</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderBy.Description" xml:space="preserve">
    <value>Sorts an IEnumerable by a single property name and flag for descending.</value>
  </data>
  <data name="tabPreferencesSelectedCultureDefaultOption" xml:space="preserve">
    <value>Current Culture</value>
  </data>
  <data name="LoadingSettingsMacros" xml:space="preserve">
    <value>Initializing Macros section...</value>
  </data>
  <data name="FindReplaceOptionsExplicitCapture" xml:space="preserve">
    <value>Explicit Capture</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.CreateType.Example.Simple" xml:space="preserve">
    <value>var typesTB = sp.NativeModule().CreateType("Types", "Class,Public,SequentialLayout,Serializable");</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyToggled.Example.Simple" xml:space="preserve">
    <value>var isCapsLockOn = sp.IsKeyToggled(vk.CAPITAL);</value>
  </data>
  <data name="ConsoleSetErrorColorMenu" xml:space="preserve">
    <value>Set Error Default Color</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSystemMetricsByIndex.Returns" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ActionStepMethods.GetClipboardText.DisplayName" xml:space="preserve">
    <value>Get Clipboard Text</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisableCapture.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterToggleOthers.Example.Simple" xml:space="preserve">
    <value>sp.TouchFloaterToggleOthers();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredNumber.Example.Simple" xml:space="preserve">
    <value>sp.DeleteStoredNumber('test');</value>
  </data>
  <data name="ScriptHelpCategoryNameLocateWindow" xml:space="preserve">
    <value>Locate Windows or Controls</value>
  </data>
  <data name="ActionStepMethods.MouseMoveXY.DisplayName" xml:space="preserve">
    <value>Mouse Move X,Y</value>
  </data>
  <data name="ScriptHelp.ActionMethod.AllDevices.Description" xml:space="preserve">
    <value>Returns a List&lt;DeviceInfo&gt; of all PnP entities.</value>
  </data>
  <data name="HotkeyKeysLabel" xml:space="preserve">
    <value>Hotkey:</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindowExecuteScriptAsync.Parameters.Handle.Name" xml:space="preserve">
    <value>Handle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindowExecuteScriptAsync.Parameters.Handle.Type" xml:space="preserve">
    <value>object</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendUnicodeString.Example.Simple" xml:space="preserve">
    <value>sp.SendUnicodeString('‽');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendAltDown.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ForegroundWindow.Description" xml:space="preserve">
    <value>Returns a SystemWindow object of the current foreground window</value>
  </data>
  <data name="ActionStepMethods.MouseMove.DisplayName" xml:space="preserve">
    <value>Mouse Move</value>
  </data>
  <data name="ScriptHelp.ActionMethod.AllApplications.Description" xml:space="preserve">
    <value>Returns an array of SystemWindow objects for all primary application windows. This may incorrectly skip or include unconventional applications. See also sp.AllWindows().</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictClear.Example.Simple" xml:space="preserve">
    <value>sp.MouseRestrictClear();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunProgram.Returns" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="AppDefinitionInvalidRegexTitle" xml:space="preserve">
    <value>Invalid Regular Expression Pattern</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteTimer.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.SendAltDown.HelpTip" xml:space="preserve">
    <value>Simulates pressing the left Alt key down.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredDecimals.Example.Simple" xml:space="preserve">
    <value>sp.DeleteAllStoredDecimals();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredBools.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Example.Simple" xml:space="preserve">
    <value>sp.MouseClick(new Point(100,100), MouseButtons.Left, true, true);</value>
  </data>
  <data name="ScriptHelpCategoryTextScriptObjects" xml:space="preserve">
    <value>These objects are passed into StrokesPlus.net automations which can be used in your steps or script as needed.

All regular actions will be passed in an ActionVars object named "action".

Global Actions &gt; Mouse Events &gt; Mouse Wheel are passed in a WheelTick object named "wheel".

Global Actions &gt; Mouse Events &gt; Mouse Click are passed in a Click object named "click".

Floater events will be passed in a FloaterVars object named "floater".</value>
  </data>
  <data name="ActionStepMethods.InvokeObjectMethodByName.DisplayName" xml:space="preserve">
    <value>Invoke Object Method By Name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredString.Description" xml:space="preserve">
    <value>Returns a string previously stored using sp.StoreString or StrokesPlus.StoredValues.Strings.Set</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredNumbers.Example.Simple" xml:space="preserve">
    <value>sp.DeleteAllStoredNumbers();</value>
  </data>
  <data name="ActionStepMethodCategories.Math.DisplayName" xml:space="preserve">
    <value>Math</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Parameters.values.Description" xml:space="preserve">
    <value>Array of values for each field (same order and count).</value>
  </data>
  <data name="MoveDown" xml:space="preserve">
    <value>Move Down</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.callingConventions.Name" xml:space="preserve">
    <value>callingConventions</value>
  </data>
  <data name="ActionStepMethods.GetControlFromPoint.DisplayName" xml:space="preserve">
    <value>Get Control From Point</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegionFromPoint.Returns" xml:space="preserve">
    <value>RectRegion</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.NewMethod.Parameters.callingConventions.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ActionStepMethods.ContainsText.HelpTip" xml:space="preserve">
    <value>Returns true if the sourceText contains the searchText.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.IncludeBootstrapJQuery.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.IncludeBootstrapJQuery.Name" xml:space="preserve">
    <value>IncludeBootstrapJQuery</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPixelColorFromPoint.Returns" xml:space="preserve">
    <value>System.Drawing.Color</value>
  </data>
  <data name="AfterActionScriptLabel" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCurrentMousePoint.Name" xml:space="preserve">
    <value>GetCurrentMousePoint</value>
  </data>
  <data name="ActionEngineReflectionErrorTitle" xml:space="preserve">
    <value>Action Step Error</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ClassName.Description" xml:space="preserve">
    <value>Gets the class name of the control or window.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendMessageObj.Name" xml:space="preserve">
    <value>SendMessageObj</value>
  </data>
  <data name="ActionStepMethods.DeleteSavedString.DisplayName" xml:space="preserve">
    <value>Delete Saved String</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredPoints.Description" xml:space="preserve">
    <value>Deletes all stored points.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Distinct.Example.Simple" xml:space="preserve">
    <value>var newDistinctList = myList.Distinct("propertyName");</value>
  </data>
  <data name="ActionStepMethods.Stop.DisplayName" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="ActionStepMethods.GetWindowsFromTitleRegex.HelpTip" xml:space="preserve">
    <value>Returns an array of SystemWindow objects for controls or windows based on a regular expression title match.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Image.Type" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Image.Name" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Parameters.message.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="RegionTypeHorizontal" xml:space="preserve">
    <value>Horizontal Split</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EnumBuilder.Create.Example.Simple" xml:space="preserve">
    <value>sp.NativeModule().DefineEnum("TestEnum",
                             "Low,High",
                             [0,1]).Create();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Parameters.message.Name" xml:space="preserve">
    <value>message</value>
  </data>
  <data name="RegionLabel" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Parameters.keyName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadNumber.Parameters.keyName.Name" xml:space="preserve">
    <value>keyName</value>
  </data>
  <data name="ScriptHelpClassInputBoxInfo" xml:space="preserve">
    <value>InputBoxInfo</value>
  </data>
  <data name="ActionStepMethods.RecordTemporaryMacro.DisplayName" xml:space="preserve">
    <value>Record Temporary Macro</value>
  </data>
  <data name="tabPreferencesEnableOnNoIgnore" xml:space="preserve">
    <value>Enable on No Ignore App Match</value>
  </data>
  <data name="ActionStepMethods.GetGreenValueFromColor.DisplayName" xml:space="preserve">
    <value>Get Green Value From Color</value>
  </data>
  <data name="RegionTypeVertical" xml:space="preserve">
    <value>Vertical Split</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKey.Name" xml:space="preserve">
    <value>SendVKey</value>
  </data>
  <data name="ActionStepMethods.RunProgram.DisplayName" xml:space="preserve">
    <value>Run Program</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.VisibilityFlag.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.VisibilityFlag.Name" xml:space="preserve">
    <value>VisibilityFlag</value>
  </data>
  <data name="ActionStepMethods.SendShiftDown.HelpTip" xml:space="preserve">
    <value>Simulates pressing the left Shift key down.</value>
  </data>
  <data name="tabPreferencesCheckCursorFlags" xml:space="preserve">
    <value>Check Cursor Flags</value>
  </data>
  <data name="ActionEngineMethodExecutionFailedMessage" xml:space="preserve">
    <value>Failure while calling method:
Assembly: '{0}'
Type: '{1}'  
Method '{2}'</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleHide.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.RootWindow.Example.Simple" xml:space="preserve">
    <value>.RootWindow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromClassOrTitle.Returns" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.underlyingType.Name" xml:space="preserve">
    <value>underlyingType</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.underlyingType.Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ImportTabTitle" xml:space="preserve">
    <value>Import Settings</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToNextScreen.Name" xml:space="preserve">
    <value>MoveToNextScreen</value>
  </data>
  <data name="ClearScriptNoEngineScriptCompileFailedTitle" xml:space="preserve">
    <value>Script Compilation Error</value>
  </data>
  <data name="ActionStepMethods.SendString.DisplayName" xml:space="preserve">
    <value>Send String</value>
  </data>
  <data name="ActionStepMethodCategories.Objects.DisplayName" xml:space="preserve">
    <value>Objects</value>
  </data>
  <data name="ActionStepMethods.RelayGesture.HelpTip" xml:space="preserve">
    <value>Relays the mouse down, mouse movements, and mouse release based on the points and button specified.</value>
  </data>
  <data name="LoadingSettingsHotkeys" xml:space="preserve">
    <value>Initializing Hot Keys section...</value>
  </data>
  <data name="ActionStepMethodCategories.WindowsControls.DisplayName" xml:space="preserve">
    <value>Windows &amp; Controls</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Parameters.label.Type" xml:space="preserve">
    <value>string (optional)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Parameters.label.Name" xml:space="preserve">
    <value>label</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPlaybackMixer.Example.Simple" xml:space="preserve">
    <value>var playMixer = sp.GetPlaybackMixer();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenuEx.Parameters.info.Name" xml:space="preserve">
    <value>info</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenuEx.Parameters.info.Type" xml:space="preserve">
    <value>PopupMenuInfoEx</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendAltDown.Example.Simple" xml:space="preserve">
    <value>sp.SendAltDown();</value>
  </data>
  <data name="FloaterLayoutFileFilterName" xml:space="preserve">
    <value>StrokesPlus Floater Layout files|*.splayout</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredHandle.HelpTip" xml:space="preserve">
    <value>Deletes a handle previously stored using StoreHandle or StrokesPlus.StoredValues.Handles.Set</value>
  </data>
  <data name="ActionStepMethods.MoveWindowToPreviousScreen.HelpTip" xml:space="preserve">
    <value>Moves the window to the previous screen and returns the destination Screen object. Screen order is determined by Windows.</value>
  </data>
  <data name="ActionStepMethods.GetExpandedEnvironmentVariables.HelpTip" xml:space="preserve">
    <value>Returns a string with the environment variables expanded.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredPoint.Example.Simple" xml:space="preserve">
    <value>var storedpoint = sp.GetStoredPoint('test');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadString.Parameters.subKey.Description" xml:space="preserve">
    <value>Name of the subkey within the baseKey to read the value from.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetHistoryScript.Example.Simple" xml:space="preserve">
    <value>sp.GetHistoryScript(0);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StopAllActionSteps.Name" xml:space="preserve">
    <value>StopAllActionSteps</value>
  </data>
  <data name="ActionStepMethods.GetStoredBool.DisplayName" xml:space="preserve">
    <value>Get Stored Bool</value>
  </data>
  <data name="tabPreferencesTabBasic" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="ClearScriptNoEngineScriptFailedMessage" xml:space="preserve">
    <value>Script execution failed.</value>
  </data>
  <data name="FindReplaceMenuAsFewAsPossible" xml:space="preserve">
    <value>? As Few as Possible (i.e. *?, +? or ??)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunOrActivate.Parameters.exeName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunOrActivate.Parameters.exeName.Name" xml:space="preserve">
    <value>exeName</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Size.Description" xml:space="preserve">
    <value>The size of the control or window, excluding window borders.</value>
  </data>
  <data name="tabPreferencesTouchFloaterMaxAlpha" xml:space="preserve">
    <value>Floater Maximum Alpha (1-255)</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Minimize.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="tabGesturesActiveGroupName" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.Create.Returns" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Description" xml:space="preserve">
    <value>Returns an array of RectRegion based on the rectangle passed in along with the number of columns and rows specified. This could be used to have a action perform different logic based on the area of the screen or application window, for example.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredString.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredString.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderBy.Name" xml:space="preserve">
    <value>IEnumerable.OrderBy</value>
  </data>
  <data name="ScriptHelpCategoryNameInternal" xml:space="preserve">
    <value>Internal</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCaptureMixer.Returns" xml:space="preserve">
    <value>CoreAudioDevice</value>
  </data>
  <data name="tabPreferencesTabTouch" xml:space="preserve">
    <value>Touch</value>
  </data>
  <data name="ActionStepMethods.IsWindowMaximized.DisplayName" xml:space="preserve">
    <value>Is Window Maximized</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Returns" xml:space="preserve">
    <value>string[]</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Name" xml:space="preserve">
    <value>PostMessageObj</value>
  </data>
  <data name="ActionStepMethods.GetScreenFromRectangle.HelpTip" xml:space="preserve">
    <value>Returns the screen which contains the largest portion of the specified rectangle.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleCopySystem.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="tabPreferencesMatchProbabilityThreshold" xml:space="preserve">
    <value>Match Probability Threshold (%)</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ClientPointToScreenPoint.Returns" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Center.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.Stop.HelpTip" xml:space="preserve">
    <value>Stops processing steps for the current sequence. No subsequent steps will be executed.</value>
  </data>
  <data name="ActionStepMethods.GetStoredRectangle.DisplayName" xml:space="preserve">
    <value>Get Stored Rectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RecordTemporaryMacro.Description" xml:space="preserve">
    <value>Starts recording a temporary macro. No messages show, you must remember to press Ctrl+Break (Pause) to stop recording.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendAltUp.Name" xml:space="preserve">
    <value>SendAltUp</value>
  </data>
  <data name="CustomFloaterNewName" xml:space="preserve">
    <value>New Floater</value>
  </data>
  <data name="ScriptHelp.ActionMethod.InputBox.Parameters.info.Name" xml:space="preserve">
    <value>info</value>
  </data>
  <data name="ScriptHelp.ActionMethod.InputBox.Parameters.info.Type" xml:space="preserve">
    <value>InputBoxInfo</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Parameters.rect.Type" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Parameters.rect.Name" xml:space="preserve">
    <value>rect</value>
  </data>
  <data name="ImportExportSelectNoneLabel" xml:space="preserve">
    <value>Select None</value>
  </data>
  <data name="ModifierCaptureBefore" xml:space="preserve">
    <value>Before</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.ScriptCallback.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.ScriptCallback.Name" xml:space="preserve">
    <value>ScriptCallback</value>
  </data>
  <data name="ActionStepMethods.GetBoolean.HelpTip" xml:space="preserve">
    <value>Returns a new boolean variable set to the specified value.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IsKeyToggled.Name" xml:space="preserve">
    <value>IsKeyToggled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHistoryScript.Example.Simple" xml:space="preserve">
    <value>var scriptval = sp.GetStoredHistoryScript('test');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTimer.Returns" xml:space="preserve">
    <value>System.Threading.Timer</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenu.Description" xml:space="preserve">
    <value>Displays a context menu from which the user can select an item. This requires a global javascript callback to receive the selected item. See PopupMenuInfo and the examples for more information.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteTimer.Description" xml:space="preserve">
    <value>Stops and deletes a timer previously created via sp.CreateTimer.</value>
  </data>
  <data name="tabPreferencesDisableTextExpansionDisableSpaceLeftDeleteOnMatch" xml:space="preserve">
    <value>Disable Space, Left, Delete on Match</value>
  </data>
  <data name="ScriptHelpLabel" xml:space="preserve">
    <value>Below is a list of the built-in methods and properties which can be used for scripts. Note that since StrokesPlus.net exposes much of the .NET Framework, there are countless ways to perform simple or complex logic not included below. While you might have to convert some things, if you search the internet for 'C# how to {do something}' it will often get you started in the right direction.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsumePhysicalInput.Parameters.timeout.Description" xml:space="preserve">
    <value>(optional) Seconds until physical input is automatically re-enabled. Default is 60 seconds, specify 0 for infinite.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Where.Name" xml:space="preserve">
    <value>IEnumerable.Where</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Restore.Example.Simple" xml:space="preserve">
    <value>.Restore()</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromPoint.Parameters.pt.Description" xml:space="preserve">
    <value>Coordinates to use in finding the window, e.g. new Point(100, 100), sp.GetCurrentMousePoint(), action.Start</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Parameters.includeLinks.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetItemsInExplorer.Parameters.includeLinks.Name" xml:space="preserve">
    <value>includeLinks</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMacroScript.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMacroScript.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="tabPreferencesTouchFloaterAutoShowHideInTabletMode" xml:space="preserve">
    <value>Auto Show/Hide Floater When Switching Tablet Mode</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreNumber.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredNumber.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the number.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredString.Returns" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Run.Parameters.command.Description" xml:space="preserve">
    <value>The file name of the item to execute or open.</value>
  </data>
  <data name="ActionStepMethods.StoreNumber.DisplayName" xml:space="preserve">
    <value>Store Number</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ClassName.Example.Simple" xml:space="preserve">
    <value>.ClassName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictActive.Example.Simple" xml:space="preserve">
    <value>var mouseRestricted = sp.MouseRestrictActive();</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Parameters.btn.Description" xml:space="preserve">
    <value>The mouse button to use for the event(s).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHistoryScript.Example.Simple" xml:space="preserve">
    <value>sp.StoreHistoryScript('test', timer);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredBool.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredBool.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedEnum.Name" xml:space="preserve">
    <value>TypeBuilder.DefineNestedEnum</value>
  </data>
  <data name="ActionStepMethods.DisableCapture.DisplayName" xml:space="preserve">
    <value>Disable Capture</value>
  </data>
  <data name="ScriptHelp.ActionMethod.NativeDelegateList.Example.Simple" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.ActionMethod.SaveString.Description" xml:space="preserve">
    <value>Saves a string value to the StrokesPlus.net configuration file, which will persist after S+ closes. Use sp.GetSavedString or StrokesPlus.SavedStrings.Get to retrieve value.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSavedString.Parameters.name.Description" xml:space="preserve">
    <value>Name used to save the value.</value>
  </data>
  <data name="HotkeyFileFilterName" xml:space="preserve">
    <value>StrokesPlus Hot Key files|*.sphotkey</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreRectangle.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ModifierCaptureEither" xml:space="preserve">
    <value>Either</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ChangeCulture.Example.Simple" xml:space="preserve">
    <value>sp.ChangeCulture('en-US');</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Location.Name" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EnumBuilder.Create.Example.Full" xml:space="preserve">
    <value />
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Location.Type" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ActionStepMethods.StopAllScripts.HelpTip" xml:space="preserve">
    <value>Stops all currently executing scripts.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleLog.Parameters.message.Description" xml:space="preserve">
    <value>Message to log.</value>
  </data>
  <data name="FindReplaceStatusRegexError" xml:space="preserve">
    <value>Error in Regular Expression: </value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Maximize.Name" xml:space="preserve">
    <value>Maximize</value>
  </data>
  <data name="SettingsToolbarOptions" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="ActionStepMethods.SendWinUp.DisplayName" xml:space="preserve">
    <value>Send Win Up</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.MoveToScreen.Returns" xml:space="preserve">
    <value>Screen</value>
  </data>
  <data name="ExclusionZoneFixed" xml:space="preserve">
    <value>Fixed</value>
  </data>
  <data name="ActionStepMethods.GetColorFromRGB.HelpTip" xml:space="preserve">
    <value>Returns a new color variable from the specified Red, Green, and Blue values.</value>
  </data>
  <data name="ActionStepMethods.CloseSettings.DisplayName" xml:space="preserve">
    <value>Close Settings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredPoint.Description" xml:space="preserve">
    <value>Returns a point previously stored using sp.StorePoint or StrokesPlus.StoredValues.Points.Set</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetKeyState.Name" xml:space="preserve">
    <value>GetKeyState</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ParentSymmetric.Example.Simple" xml:space="preserve">
    <value>.ParentSymmetric</value>
  </data>
  <data name="ScriptHelp.ActionMethod.EnumBuilder.Create.Description" xml:space="preserve">
    <value>Calls EnumBuilder.CreateType() and refreshes the script engine types.</value>
  </data>
  <data name="tabPreferencesUseNewClassesOnly" xml:space="preserve">
    <value>Use New Classes Only</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Minimize.Example.Simple" xml:space="preserve">
    <value>.Minimize()</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseRestrictToRectangle.Description" xml:space="preserve">
    <value>Restricts mouse movement to only within the specified rectangle.</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredDecimal.HelpTip" xml:space="preserve">
    <value>Deletes a decimal previously stored using StoreDecimal.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.enumName.Description" xml:space="preserve">
    <value>The name of the enum to create.</value>
  </data>
  <data name="ActionStepMethods.GetWindowMainModuleFilePath.DisplayName" xml:space="preserve">
    <value>Get Window Main Module File Path</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.IsUnicode.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ExclusionZoneScale" xml:space="preserve">
    <value>Scale</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.IsUnicode.Name" xml:space="preserve">
    <value>IsUnicode</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.kind.Name" xml:space="preserve">
    <value>kind</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryWrite.Parameters.kind.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ActionStepMethods.GetWindowText.DisplayName" xml:space="preserve">
    <value>Get Window Text</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPlaybackMixer.Name" xml:space="preserve">
    <value>GetPlaybackMixer</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreRectangle.Example.Simple" xml:space="preserve">
    <value>sp.StoreRectangle('test', action.Window.Rectangle);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RunOrActivate.Description" xml:space="preserve">
    <value>Takes a full path and EXE name and looks to see if there is a window already running for that EXE and activates it, otherwise it runs the EXE.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowPopupMenuEx.Parameters.info.Description" xml:space="preserve">
    <value>The PopupMenuInfoEx object containing the info used when displaying the popup menu.</value>
  </data>
  <data name="ActionStepMethods.ToggleWindowAlwaysOnTop.DisplayName" xml:space="preserve">
    <value>Toggle Window Always On Top</value>
  </data>
  <data name="ClearScriptNoEngineScriptCompileFailedMessage" xml:space="preserve">
    <value>Script failed to compile.</value>
  </data>
  <data name="tabGesturesInactiveGroupName" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.SendClose.Description" xml:space="preserve">
    <value>Sends the WM_CLOSE message to the window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSavedString.Name" xml:space="preserve">
    <value>GetSavedString</value>
  </data>
  <data name="ActionStepMethods.GetWindowLocationY.DisplayName" xml:space="preserve">
    <value>Get Window Location Y</value>
  </data>
  <data name="LeftClickScriptTab" xml:space="preserve">
    <value>Left Click</value>
  </data>
  <data name="frmSyncSettingsTitle" xml:space="preserve">
    <value>Synchronize Settings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TogglePlaybackMute.Example.Simple" xml:space="preserve">
    <value>sp.TogglePlaybackMute();</value>
  </data>
  <data name="ActionStepMethodCategories.Clipboard.DisplayName" xml:space="preserve">
    <value>Clipboard</value>
  </data>
  <data name="ActionStepMethods.SetMainFloaterLocation.HelpTip" xml:space="preserve">
    <value>Move the main floater to a new location. Only works if floaters are currently shown.</value>
  </data>
  <data name="ActionStepMethods.GetArrayItemByIndex.HelpTip" xml:space="preserve">
    <value>Returns an object from the array at the specified index.</value>
  </data>
  <data name="ActionStepMethods.Multiply.DisplayName" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredHistoryScript.Returns" xml:space="preserve">
    <value>HistoryScript</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.AllDescendantWindows.Example.Simple" xml:space="preserve">
    <value>.AllDescendantWindows</value>
  </data>
  <data name="FloaterToggleSecondaryMenu" xml:space="preserve">
    <value>Toggle Secondary Floaters</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ClipToScreen.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="tabGlobalHardwareEventsTabName" xml:space="preserve">
    <value>Hardware Events</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCurrentMouseCursor.Description" xml:space="preserve">
    <value>Returns the name of the current mouse cursor. NOTE: This will only compare against the standard Windows cursors as defined by the Microsoft 'Cursors Class' properties, e.g. 'AppStarting', 'Arrow', 'Hand', etc. Any custom cursors will not be recognized and the return value will be 'Unknown'.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredObjects.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="frmSyncSettingsCount" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDeleteSubKey.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowMouseCursor.Name" xml:space="preserve">
    <value>ShowMouseCursor</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendCharacter.Parameters.ch.Name" xml:space="preserve">
    <value>ch</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendCharacter.Parameters.ch.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreBool.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the boolean.</value>
  </data>
  <data name="PlugInDeleteFailedTitle" xml:space="preserve">
    <value>Delete Plug-In Failed</value>
  </data>
  <data name="ControlKey" xml:space="preserve">
    <value>Control</value>
  </data>
  <data name="ActionStepMethods.RestoreWindow.HelpTip" xml:space="preserve">
    <value>Restores the specified window (passed in as a SystemWindow type).</value>
  </data>
  <data name="TouchFloaterMenuKeyMode" xml:space="preserve">
    <value>Key Mode</value>
  </data>
  <data name="ActionStepMethods.GetBoolean.DisplayName" xml:space="preserve">
    <value>Get Boolean</value>
  </data>
  <data name="ActionStepMethods.GetSelectedFilesInExplorer.HelpTip" xml:space="preserve">
    <value>Returns an array of strings containing the path and name of all selected files in the Explorer window.</value>
  </data>
  <data name="AppDefinitionCancelDelay" xml:space="preserve">
    <value>Custom Cancel Delay (ms):</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Disable.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromHandle.Returns" xml:space="preserve">
    <value>SystemWindow</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Description" xml:space="preserve">
    <value>Creates a timer that executes a script repeatedly until stopped via sp.DeleteTimer.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.ID.Description" xml:space="preserve">
    <value>Identifier for the window, if blank it will be a new GUID. This is helpful if you have multiple HTML windows open and need to distinguish them.</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.IsCloaked.Description" xml:space="preserve">
    <value>Returns true if the window is cloaked, such as background Win8/10 apps or windows in a different virtual desktop.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Parameters.keyName.Description" xml:space="preserve">
    <value>The key to delete from the keyName.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ToggleCommunicationsMute.Name" xml:space="preserve">
    <value>ToggleCommunicationsMute</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.AllScreens.Name" xml:space="preserve">
    <value>AllScreens</value>
  </data>
  <data name="ConsoleTabSystemTitle" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetMethods.Returns" xml:space="preserve">
    <value>System.Reflection.MethodInfo[]</value>
  </data>
  <data name="LoadAccountTokenDecryptErrorTitle" xml:space="preserve">
    <value>Error Decrypting Account File</value>
  </data>
  <data name="ActionStepMethods.Run.HelpTip" xml:space="preserve">
    <value>Runs a program or opens a document. This is basically the same as typing something into the Run dialog.</value>
  </data>
  <data name="ActionStepMethods.MaximizeWindow.HelpTip" xml:space="preserve">
    <value>Maximizes the specified window (passed in as a SystemWindow type).</value>
  </data>
  <data name="AppDefinitionControlText" xml:space="preserve">
    <value>Title/Text:</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecuteStoredScript.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecuteStoredScript.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="WordWrap" xml:space="preserve">
    <value>Word Wrap</value>
  </data>
  <data name="Minimized" xml:space="preserve">
    <value>Minimized</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleShowOnSystemError.Name" xml:space="preserve">
    <value>ConsoleShowOnSystemError</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SaveString.Example.Simple" xml:space="preserve">
    <value>sp.SaveString('testName', 'testValue');</value>
  </data>
  <data name="ActionStepMethods.SendHotKey.DisplayName" xml:space="preserve">
    <value>Send Hot Key</value>
  </data>
  <data name="Downloading" xml:space="preserve">
    <value>Downloading...</value>
  </data>
  <data name="ActionStepMethods.GetWindowLocation.HelpTip" xml:space="preserve">
    <value>Returns the location of the window (passed in as a SystemWindow type) as a point in screen coordinates.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyUp.Description" xml:space="preserve">
    <value>Simulates releasing the specified character.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetRegions.Name" xml:space="preserve">
    <value>GetRegions</value>
  </data>
  <data name="frmSyncSettingsListSize" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendWinDown.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.GetWindowMainModuleFileName.DisplayName" xml:space="preserve">
    <value>Get Window Main Module File Name</value>
  </data>
  <data name="ActionStepMethods.MaximizeOrRestoreWindow.HelpTip" xml:space="preserve">
    <value>Maximizes or restores the specified window (passed in as a SystemWindow type).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredNumber.Name" xml:space="preserve">
    <value>DeleteStoredNumber</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendControlUp.Example.Simple" xml:space="preserve">
    <value>sp.SendControlUp();</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.ClientRectangle.Example.Simple" xml:space="preserve">
    <value>.ClientRectangle</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.WindowAbove.Example.Simple" xml:space="preserve">
    <value>.WindowAbove</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Restore.Description" xml:space="preserve">
    <value>Restores the window.</value>
  </data>
  <data name="AddMacro" xml:space="preserve">
    <value>Add Macro</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Parameters.keyName.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="SettingsToolbarWebsite" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryDelete.Parameters.keyName.Name" xml:space="preserve">
    <value>keyName</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetPoint.Returns" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="ActionStepMethods.StopAllActionSteps.HelpTip" xml:space="preserve">
    <value>Stops all action step execution.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Parameters.Title.Description" xml:space="preserve">
    <value>Title of the window.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.HighlightColor.Name" xml:space="preserve">
    <value>HighlightColor</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.HighlightColor.Type" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="frmSyncSettingsDownload" xml:space="preserve">
    <value>Download and Apply</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Distinct.Parameters.element.Name" xml:space="preserve">
    <value>element</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.Distinct.Parameters.element.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ActionTypeActionEngine" xml:space="preserve">
    <value>Use Actions</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.BackgroundAlternateColor.Description" xml:space="preserve">
    <value>Background color for alternating rows, or null to use system Menu color. Does NOT support alpha channel!</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Text.Description" xml:space="preserve">
    <value>Gets or sets the text of the control, if supported.</value>
  </data>
  <data name="LoadSettingsDefaultFileErrorMessage" xml:space="preserve">
    <value>Failed to load default settings. Please try reinstalling StrokesPlus.net. </value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredHistoryScripts.Example.Simple" xml:space="preserve">
    <value>sp.DeleteAllStoredHistoryScripts();</value>
  </data>
  <data name="LoadingSettingsWindow" xml:space="preserve">
    <value>Loading Settings window...</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Sleep.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Parameters.startdelay.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.PostMessageObj.Example.Simple" xml:space="preserve">
    <value>.PostMessageObj(message, wParam, lParam);</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CreateTimer.Parameters.startdelay.Name" xml:space="preserve">
    <value>startdelay</value>
  </data>
  <data name="frmAccountLoginHeadingText" xml:space="preserve">
    <value>Using your StrokesPlus.net Forum account, you can login to enable online features. 

Currently, this will save your settings to the cloud. This includes all apps, actions, preferences; it is the equivalent of a full export. Click the Synchronize Settings... tray icon menu item for more details.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendWinDown.Description" xml:space="preserve">
    <value>Simulates pressing the left Win key down.</value>
  </data>
  <data name="FileAccessErrorTitle" xml:space="preserve">
    <value>File Access Error</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.Size.Example.Simple" xml:space="preserve">
    <value>.Size</value>
  </data>
  <data name="ActionStepMethods.MinimizeWindow.DisplayName" xml:space="preserve">
    <value>Minimize Window</value>
  </data>
  <data name="ActionEngineReflectionAssemblyErrorTitle" xml:space="preserve">
    <value>Action Step Error</value>
  </data>
  <data name="ActionStepMethods.AppendText.HelpTip" xml:space="preserve">
    <value>Returns a new string combining sourceText and addText.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.CreateType.Parameters.typeName.Description" xml:space="preserve">
    <value>The name of the type to create.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterIsShown.Returns" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="AlwaysOnTop" xml:space="preserve">
    <value>Always On Top</value>
  </data>
  <data name="FindReplaceStatusSearchMatchWrappedDocument" xml:space="preserve">
    <value>Search match wrapped to the beginning of the document</value>
  </data>
  <data name="ActionStepMethods.GetTopLevelWindowFromPointXY.HelpTip" xml:space="preserve">
    <value>Returns the top level (owner) window at the specified X,Y coordinates on the screen.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Parameters.label.Description" xml:space="preserve">
    <value>Label for the log entry, e.g. [label] message.</value>
  </data>
  <data name="ImportCompleteObjectMessage" xml:space="preserve">
    <value>The file you selected for import looks like a complete settings file.

Do you want to completely replace ALL of your settings with the imported file?

Click No to select and merge settings, or Yes to close this window and reload StrokesPlus with the new settings. 

Clicking Yes will permanently lose any existing actions, gestures, applications, hot keys, etc. 
Only click Yes if you're absolutely certain about this!</value>
  </data>
  <data name="SettingsToolbarHotKeys" xml:space="preserve">
    <value>Hot Keys</value>
  </data>
  <data name="ExclusionZoneHeaderText" xml:space="preserve">
    <value>Use exclusion zones to tell StrokesPlus.net to not process certain mouse events within those areas of the screen. The colored border shown for exclusion zones is part of the overall exclusion area.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendWinDown.Example.Simple" xml:space="preserve">
    <value>sp.SendWinDown();</value>
  </data>
  <data name="NewActionName" xml:space="preserve">
    <value>New Action</value>
  </data>
  <data name="ActionStepMethods.Divide.DisplayName" xml:space="preserve">
    <value>Divide</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendWinUp.Name" xml:space="preserve">
    <value>SendWinUp</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetPlaybackVolume.Parameters.newVolumeLevel.Name" xml:space="preserve">
    <value>newVolumeLevel</value>
  </data>
  <data name="ScriptHelp.ActionMethod.IEnumerable.OrderBy.Returns" xml:space="preserve">
    <value>IEnumerable&lt;T&gt;</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetPlaybackVolume.Parameters.newVolumeLevel.Type" xml:space="preserve">
    <value>int</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteStoredHistoryScript.Description" xml:space="preserve">
    <value>Deletes a history script previously stored using sp.StoreHistoryScript or StrokesPlus.StoredValues.HistoryScripts.Set</value>
  </data>
  <data name="ActionStepMethods.SetCustomFloaterSize.DisplayName" xml:space="preserve">
    <value>Set Custom Floater KSize</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExecuteStoredScript.Example.Simple" xml:space="preserve">
    <value>sp.ExecuteStoredScript('storedscriptname');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.DefineNestedStruct.Returns" xml:space="preserve">
    <value>TypeBuilder</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DesktopWindowListView.Name" xml:space="preserve">
    <value>DesktopWindowListView</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendAltDown.Description" xml:space="preserve">
    <value>Simulates pressing the left Alt key down.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseWheel.Description" xml:space="preserve">
    <value>Simulates scrolling the mouse wheel vertically (default) or horizontally.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DisplayText.Parameters.info.Description" xml:space="preserve">
    <value>The DisplayTextInfo object containing the information used to display the popup.</value>
  </data>
  <data name="ActionStepMethodCategories.Utility.DisplayName" xml:space="preserve">
    <value>Utility</value>
  </data>
  <data name="ScriptHelp.ActionMethod.PopupList.Parameters.TextAlternateColor.Description" xml:space="preserve">
    <value>Text color to use for alternating rows, or null to use system Menu Text color.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Parameters.color.Type" xml:space="preserve">
    <value>Color struct (.NET, optional)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleError.Parameters.color.Name" xml:space="preserve">
    <value>color</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterIsCustomFloaterLoaded.Parameters.name.Description" xml:space="preserve">
    <value>Name of the custom floater.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetFileVersionInfo.Parameters.filePath.Description" xml:space="preserve">
    <value>The full path and name to the file.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadCustomFloater.Description" xml:space="preserve">
    <value>Load a custom floater by name. Only works if floaters are currently shown.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendModifiedVKeys.Name" xml:space="preserve">
    <value>SendModifiedVKeys</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredRectangle.Description" xml:space="preserve">
    <value>Returns a rectangle previously stored using sp.StoreRectangle or StrokesPlus.StoredValues.Rectangles.Set</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SetMouseCursor.Name" xml:space="preserve">
    <value>SetMouseCursor</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreRectangle.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreRectangle.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="PlugInAddLocation" xml:space="preserve">
    <value>Add Folder</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="tabPreferencesSendKeysForAppCommands" xml:space="preserve">
    <value>Send Keys for App Commands</value>
  </data>
  <data name="ScriptHelp.ActionMethod.LastApplication.Example.Simple" xml:space="preserve">
    <value>sp.LastApplication();</value>
  </data>
  <data name="ActionStepMethods.SetPlaybackVolume.DisplayName" xml:space="preserve">
    <value>Set Playback Volume</value>
  </data>
  <data name="ScriptHelp.ActionMethod.StoreHandle.Parameters.value.Description" xml:space="preserve">
    <value>Value of the handle to store.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetCommunicationsCaptureMixer.Returns" xml:space="preserve">
    <value>CoreAudioDevice</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SaveString.Name" xml:space="preserve">
    <value>SaveString</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetKeyState.Returns" xml:space="preserve">
    <value>short</value>
  </data>
  <data name="TextExpansionFileFilterName" xml:space="preserve">
    <value>StrokesPlus Text Expansion files|*.sptextexp</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Parameters.down.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseClick.Parameters.down.Name" xml:space="preserve">
    <value>down</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExpandEnvironmentVariables.Description" xml:space="preserve">
    <value>Returns a string with the environment variables expanded.</value>
  </data>
  <data name="tabGlobalSettingsTabName" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeyDown.Description" xml:space="preserve">
    <value>Simulates pressing the specified character key down.</value>
  </data>
  <data name="tabPreferencesFireOnX2Click" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsumePhysicalInput.Example.Simple" xml:space="preserve">
    <value>sp.ConsumePhysicalInput(true); //Physical input will be automatically re-enabled after 60 seconds
sp.ConsumePhysicalInput(true, 600); //Physical input will be automatically re-enabled after 600 seconds (10 minutes)
sp.ConsumePhysicalInput(true, 0); //You MUST call again passing false to re-enable input. Win+L and Ctrl+Alt+Del will also re-enable input depending on your Windows version and configuration

sp.ConsumePhysicalInput(false); //Re-enables physical input</value>
  </data>
  <data name="ActionStepMethods.GetScreenFromHandle.DisplayName" xml:space="preserve">
    <value>Get Screen From Handle</value>
  </data>
  <data name="tabPreferencesNoMatchSoundFile" xml:space="preserve">
    <value>No Match Sound</value>
  </data>
  <data name="ActionStepMethods.DeleteAllStoredHandles.HelpTip" xml:space="preserve">
    <value>Deletes all stored handles.</value>
  </data>
  <data name="ActionStepMethods.GetScreenFromPointXY.HelpTip" xml:space="preserve">
    <value>Returns the screen where the specified X,Y coordinates exists.</value>
  </data>
  <data name="ActionStepMethods.StoreNumber.HelpTip" xml:space="preserve">
    <value>Stores a number using the specified name. Value can be retrieved via GetStoredNumber.</value>
  </data>
  <data name="tabPreferencesTouchDisableShiftFloater" xml:space="preserve">
    <value>Disable Shift Floater</value>
  </data>
  <data name="ActionStepMethodCategories.Mouse.DisplayName" xml:space="preserve">
    <value>Mouse</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Activate.Description" xml:space="preserve">
    <value>Restores, shows, and brings the window to the foreground.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendKeys.Name" xml:space="preserve">
    <value>SendKeys</value>
  </data>
  <data name="TextExpansionTypeText" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="ActionStepMethods.GetArrayItemCount.DisplayName" xml:space="preserve">
    <value>Get Array Item Count</value>
  </data>
  <data name="FindReplaceMenuNamedCapture" xml:space="preserve">
    <value>(?&lt;Name&gt;) Named Capture</value>
  </data>
  <data name="NewExclusionZoneName" xml:space="preserve">
    <value>New Zone</value>
  </data>
  <data name="tabPreferencesHintTipFontNameLabel" xml:space="preserve">
    <value>Action Hint Font</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredRectangle.Parameters.name.Description" xml:space="preserve">
    <value>Name used to store the rectangle.</value>
  </data>
  <data name="ActionStepMethods.DeleteStoredString.DisplayName" xml:space="preserve">
    <value>Delete Stored String</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyDown.Parameters.vk.Type" xml:space="preserve">
    <value>VirtualKeyCode</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Highlight.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendVKeyDown.Parameters.vk.Name" xml:space="preserve">
    <value>vk</value>
  </data>
  <data name="PlugInTabLocations" xml:space="preserve">
    <value>Search Locations</value>
  </data>
  <data name="ScriptHelpClassActionVarsName" xml:space="preserve">
    <value>ActionVars</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TouchFloaterLoadCustomFloater.Example.Simple" xml:space="preserve">
    <value>sp.TouchFloaterLoadCustomFloater('FloaterName');</value>
  </data>
  <data name="ScriptHelpCategoryTextFiles" xml:space="preserve">
    <value>Functions for working with files.</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.Maximize.Example.Simple" xml:space="preserve">
    <value>.Maximize()</value>
  </data>
  <data name="LoadAccountTokenDecryptErrorMessage" xml:space="preserve">
    <value>Failed to decrypt the account file. This can occur if the Windows user profile does not match the user who created the account file. Click Yes to login again and update the account file for this computer/user. Google search for "Windows DPAPI" for more details on how this functions.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.names.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ModuleBuilder.DefineEnum.Parameters.names.Name" xml:space="preserve">
    <value>names</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="ActionStepMethods.StoreString.DisplayName" xml:space="preserve">
    <value>Store String</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="PlugInFailedObjectNameAlreadyExistsMessage" xml:space="preserve">
    <value>Failed to load plug-in object. The object name already exists in the script engine:

Name: '{0}'
Full Name: '{1}'  
Plug-In DLL: '{2}'</value>
  </data>
  <data name="Redo" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Play" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="ScriptHelpFullExample" xml:space="preserve">
    <value>Full Example</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendShiftDown.Example.Simple" xml:space="preserve">
    <value>sp.SendShiftDown();</value>
  </data>
  <data name="ScriptHelp.SystemWindowProperty.IsCloaked.Example.Simple" xml:space="preserve">
    <value>.IsCloaked</value>
  </data>
  <data name="tabPreferencesIgnoreKeyNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ScriptHelpCategoryTextMouse" xml:space="preserve">
    <value>Functions for simulating mouse activity.</value>
  </data>
  <data name="ScriptHelpCategoryTextMedia" xml:space="preserve">
    <value>Functions for working with the AudioSwitcher media objects.</value>
  </data>
  <data name="ActionStepMethods.StoreString.HelpTip" xml:space="preserve">
    <value>Stores a string using the specified name. Value can be retrieved via GetStoredString.</value>
  </data>
  <data name="ActionStepMethods.SetWindowHeight.HelpTip" xml:space="preserve">
    <value>Sets the height of the specified window (passed in as a SystemWindow type).</value>
  </data>
  <data name="ScriptHelp.ActionMethod.TypeBuilder.Create.Description" xml:space="preserve">
    <value>Calls TypeBuilder.CreateType() and refreshes the script engine types.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesInExplorer.Returns" xml:space="preserve">
    <value>string[]</value>
  </data>
  <data name="CustomFloaterAdd" xml:space="preserve">
    <value>Add Floater</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleEnableTimestamps.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetSelectedFilesInExplorer.Name" xml:space="preserve">
    <value>GetSelectedFilesInExplorer</value>
  </data>
  <data name="ScriptHelp.ActionMethod.InputBox.Parameters.info.Description" xml:space="preserve">
    <value>The InputBoxInfo object containing the info used when displaying the input window.</value>
  </data>
  <data name="ActionStepMethods.Reload.DisplayName" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Parameters.text.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ShowBalloonTip.Parameters.text.Name" xml:space="preserve">
    <value>text</value>
  </data>
  <data name="RegionRow" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="ScriptHelp.ActionMethod.WindowFromClassOrTitle.Description" xml:space="preserve">
    <value>Returns a SystemWindow object for a control or window based on the class name and/or title.</value>
  </data>
  <data name="ActionStepMethods.MouseClick.DisplayName" xml:space="preserve">
    <value>Mouse Click</value>
  </data>
  <data name="ActionStepMethods.GetArrayItemCount.HelpTip" xml:space="preserve">
    <value>Returns the number of total items in the array.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetTemporaryMacroScript.Description" xml:space="preserve">
    <value>Returns the script of the last temporary macro.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Example.Simple" xml:space="preserve">
    <value>sp.ConsoleWarning('message', 'label', System.Drawing.Color.Red);</value>
  </data>
  <data name="ScriptHelp.SystemWindowMethod.ScreenPointToClientPoint.Example.Simple" xml:space="preserve">
    <value>.ScreenPointToClientPoint(new Point(0,0));</value>
  </data>
  <data name="tabPreferencesSynapticsThree" xml:space="preserve">
    <value>3 Fingers</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendShiftDown.Name" xml:space="preserve">
    <value>SendShiftDown</value>
  </data>
  <data name="SettingsToolbarCustomFloaters" xml:space="preserve">
    <value>Floaters</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MethodBuilder.AddMethodImplAttributes.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ActionStepMethods.EnableCapture.HelpTip" xml:space="preserve">
    <value>Enables the mouse and keyboard hooks.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.MouseMove.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.OpenSettings.Name" xml:space="preserve">
    <value>OpenSettings</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ExpandEnvironmentVariables.Example.Simple" xml:space="preserve">
    <value>var expanded = sp.ExpandEnvironmentVariables('My profile directory = %userprofile%');</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SendControlUp.Description" xml:space="preserve">
    <value>Simulates releasing the left Control key.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ConsoleWarning.Parameters.color.Description" xml:space="preserve">
    <value>Specifies a color for the text in the console, otherwise uses default.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.HTMLWindow.Name" xml:space="preserve">
    <value>HTMLWindow</value>
  </data>
  <data name="ActionStepMethods.ResetFloaters.HelpTip" xml:space="preserve">
    <value>Resets the main floaters to their default positions.</value>
  </data>
  <data name="tabGlobalSettingsRegionTypeLabel" xml:space="preserve">
    <value>Region Type</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Parameters.showErrors.Type" xml:space="preserve">
    <value>bool</value>
  </data>
  <data name="ScriptHelp.ActionMethod.RegistryReadMultiString.Parameters.showErrors.Name" xml:space="preserve">
    <value>showErrors</value>
  </data>
  <data name="ActionTypeJournalEngine" xml:space="preserve">
    <value>Use Journal</value>
  </data>
  <data name="ActionStepMethods.RunOrActivate.DisplayName" xml:space="preserve">
    <value>Run Or Activate</value>
  </data>
  <data name="DisplayDPIMismatchMessage" xml:space="preserve">
    <value>Not all of your displays have the same scaling/DPI settings. 

This will result in unexpected behavior and is not a recommended configuration for 
StrokesPlus.net.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.Sleep.Description" xml:space="preserve">
    <value>Wait for the specified milliseconds before continuing execution. This is a high resolution timer which should only be used for short pauses.</value>
  </data>
  <data name="ClearScriptNoEngineScriptFailedTitle" xml:space="preserve">
    <value>Scripting Engine Failure</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredHandles.Name" xml:space="preserve">
    <value>DeleteAllStoredHandles</value>
  </data>
  <data name="ScriptHelp.ActionMethod.GetStoredBool.Description" xml:space="preserve">
    <value>Returns a boolean previously stored using sp.StoreBool or StrokesPlus.StoredValues.Booleans.Set</value>
  </data>
  <data name="ScriptHelp.ActionMethod.ToggleCommunicationsMute.Description" xml:space="preserve">
    <value>Toggles mute on the default communications mixer/device.</value>
  </data>
  <data name="FindReplaceMenuRegexWhitespace" xml:space="preserve">
    <value>\s Whitespace (\S Non-Whitespace)</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteAllStoredDecimals.Returns" xml:space="preserve">
    <value>void</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SaveString.Parameters.name.Type" xml:space="preserve">
    <value>string</value>
  </data>
  <data name="ScriptHelp.ActionMethod.DeleteSavedString.Parameters.name.Description" xml:space="preserve">
    <value>Name used to save the string.</value>
  </data>
  <data name="ScriptHelp.ActionMethod.SaveString.Parameters.name.Name" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="ScriptHelp.ActionMethod.CloseSettings.Description" xml:space="preserve">
    <value>Closes the Settings window, with or without saving changes.</value>
  </data>
  <data name="ScriptHelpClassPopupMenuInfo" xml:space="preserve">
    <value>PopupMenuInfo</value>
  </data>
  <data name="ScriptHelpClassPopupMenuItem" xml:space="preserve">
    <value>PopupMenuItem</value>
  </data>
</root>